const hre = require("hardhat");
const fs = require('fs');
const path = require('path');

async function main() {
  console.log("üöÄ ÂºÄÂßãÈÉ®ÁΩ≤ArticleNFTÂêàÁ∫¶...\n");

  // Ëé∑ÂèñÈÉ®ÁΩ≤Ë¥¶Êà∑
  const [deployer] = await hre.ethers.getSigners();
  console.log("üìã ÈÉ®ÁΩ≤‰ø°ÊÅØ:");
  console.log(`  ÈÉ®ÁΩ≤Ë¥¶Êà∑: ${deployer.address}`);
  console.log(`  Ë¥¶Êà∑‰ΩôÈ¢ù: ${hre.ethers.formatEther(await deployer.provider.getBalance(deployer.address))} ETH\n`);

  // ÈÉ®ÁΩ≤ÂêàÁ∫¶ÂèÇÊï∞
  const contractName = "MovieWrite Article NFT";
  const contractSymbol = "MWART";
  const platformFeeRecipient = deployer.address; // Âú®Áîü‰∫ßÁéØÂ¢É‰∏≠Â∫îËØ•‰ΩøÁî®‰∏ìÈó®ÁöÑÂπ≥Âè∞Âú∞ÂùÄ

  console.log("‚öôÔ∏è  ÂêàÁ∫¶ÂèÇÊï∞:");
  console.log(`  ÂêçÁß∞: ${contractName}`);
  console.log(`  Á¨¶Âè∑: ${contractSymbol}`);
  console.log(`  Âπ≥Âè∞Ë¥πÁî®Êé•Êî∂ËÄÖ: ${platformFeeRecipient}\n`);

  // ÈÉ®ÁΩ≤ArticleNFTÂêàÁ∫¶
  console.log("üî® ÁºñËØëÂíåÈÉ®ÁΩ≤ÂêàÁ∫¶...");
  const ArticleNFT = await hre.ethers.getContractFactory("ArticleNFT");
  
  const articleNFT = await ArticleNFT.deploy(
    contractName,
    contractSymbol,
    platformFeeRecipient
  );

  await articleNFT.waitForDeployment();
  const contractAddress = await articleNFT.getAddress();

  console.log(`‚úÖ ArticleNFTÂêàÁ∫¶ÈÉ®ÁΩ≤ÊàêÂäüÔºÅ`);
  console.log(`   ÂêàÁ∫¶Âú∞ÂùÄ: ${contractAddress}\n`);

  // È™åËØÅÈÉ®ÁΩ≤
  console.log("üîç È™åËØÅÈÉ®ÁΩ≤...");
  const deployedName = await articleNFT.name();
  const deployedSymbol = await articleNFT.symbol();
  const deployedRecipient = await articleNFT.platformFeeRecipient();
  const platformFeePercent = await articleNFT.platformFeePercent();
  const royaltyPercent = await articleNFT.defaultRoyaltyPercent();
  const mintFee = await articleNFT.mintFee();

  console.log("üìä ÂêàÁ∫¶Áä∂ÊÄÅ:");
  console.log(`  ÂêçÁß∞: ${deployedName}`);
  console.log(`  Á¨¶Âè∑: ${deployedSymbol}`);
  console.log(`  Âπ≥Âè∞Ë¥πÁî®Êé•Êî∂ËÄÖ: ${deployedRecipient}`);
  console.log(`  Âπ≥Âè∞Ë¥πÁî®ÊØî‰æã: ${Number(platformFeePercent) / 100}%`);
  console.log(`  ÈªòËÆ§ÁâàÁ®éÊØî‰æã: ${Number(royaltyPercent) / 100}%`);
  console.log(`  Èì∏ÈÄ†Ë¥πÁî®: ${hre.ethers.formatEther(mintFee)} ETH\n`);

  // ‰øùÂ≠òÈÉ®ÁΩ≤‰ø°ÊÅØ
  const deploymentInfo = {
    contractName: "ArticleNFT",
    contractAddress: contractAddress,
    deployer: deployer.address,
    network: hre.network.name,
    deployedAt: new Date().toISOString(),
    parameters: {
      name: contractName,
      symbol: contractSymbol,
      platformFeeRecipient: platformFeeRecipient
    },
    settings: {
      platformFeePercent: platformFeePercent.toString(),
      defaultRoyaltyPercent: royaltyPercent.toString(),
      mintFee: mintFee.toString()
    }
  };

  // Êõ¥Êñ∞ÈÉ®ÁΩ≤ÈÖçÁΩÆÊñá‰ª∂
  const deploymentPath = path.join(__dirname, '..', 'deployment.json');
  let deployments = {};
  
  try {
    if (fs.existsSync(deploymentPath)) {
      deployments = JSON.parse(fs.readFileSync(deploymentPath, 'utf8'));
    }
  } catch (error) {
    console.log("‚ö†Ô∏è  Êó†Ê≥ïËØªÂèñÁé∞ÊúâÈÉ®ÁΩ≤Êñá‰ª∂ÔºåÂ∞ÜÂàõÂª∫Êñ∞Êñá‰ª∂");
  }

  deployments.ArticleNFT = deploymentInfo;
  fs.writeFileSync(deploymentPath, JSON.stringify(deployments, null, 2));

  console.log(`üíæ ÈÉ®ÁΩ≤‰ø°ÊÅØÂ∑≤‰øùÂ≠òÂà∞: ${deploymentPath}\n`);

  // Âú®ÊµãËØïÁΩëÁªú‰∏äÈ™åËØÅÂêàÁ∫¶ÔºàÂ¶ÇÊûúÂèØËÉΩÔºâ
  if (hre.network.name !== "hardhat" && hre.network.name !== "localhost") {
    console.log("üîó Âú®Âå∫ÂùóÈìæÊµèËßàÂô®‰∏äÈ™åËØÅÂêàÁ∫¶...");
    try {
      await hre.run("verify:verify", {
        address: contractAddress,
        constructorArguments: [contractName, contractSymbol, platformFeeRecipient],
      });
      console.log("‚úÖ ÂêàÁ∫¶È™åËØÅÊàêÂäüÔºÅ");
    } catch (error) {
      console.log("‚ö†Ô∏è  ÂêàÁ∫¶È™åËØÅÂ§±Ë¥•:", error.message);
      console.log("   ËØ∑ÊâãÂä®Âú®Âå∫ÂùóÈìæÊµèËßàÂô®‰∏äÈ™åËØÅÂêàÁ∫¶");
    }
  }

  // ÊòæÁ§∫ÂêéÁª≠Ê≠•È™§
  console.log("\nüéØ ÈÉ®ÁΩ≤ÂÆåÊàêÔºÅÂêéÁª≠Ê≠•È™§:");
  console.log("1. Âú®ÂâçÁ´ØÂ∫îÁî®‰∏≠Êõ¥Êñ∞ÂêàÁ∫¶Âú∞ÂùÄ");
  console.log("2. ÈÖçÁΩÆIPFSÈõÜÊàê");
  console.log("3. ËÆæÁΩÆÈÄÇÂΩìÁöÑÂπ≥Âè∞Ë¥πÁî®Êé•Êî∂Âú∞ÂùÄ");
  console.log("4. ÊµãËØïNFTÈì∏ÈÄ†Âíå‰∫§ÊòìÂäüËÉΩ");
  console.log("5. ËÄÉËôëËÆæÁΩÆÂ§öÈáçÁ≠æÂêçÁÆ°ÁêÜ");

  // ËøîÂõûÈÉ®ÁΩ≤‰ø°ÊÅØ‰æõÂÖ∂‰ªñËÑöÊú¨‰ΩøÁî®
  return {
    contractAddress,
    deploymentInfo
  };
}

// ÂÖÅËÆ∏ËÑöÊú¨Ë¢´Áõ¥Êé•ËøêË°åÊàñ‰Ωú‰∏∫Ê®°ÂùóÂØºÂÖ•
if (require.main === module) {
  main()
    .then(() => process.exit(0))
    .catch((error) => {
      console.error("‚ùå ÈÉ®ÁΩ≤Â§±Ë¥•:", error);
      process.exit(1);
    });
} else {
  module.exports = main;
}