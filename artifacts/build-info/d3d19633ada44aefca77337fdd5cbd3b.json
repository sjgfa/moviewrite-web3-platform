{"id":"d3d19633ada44aefca77337fdd5cbd3b","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/MovieArticle.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\n\r\ncontract MovieArticle is ERC721, Ownable, ReentrancyGuard {\r\n    uint256 private _articleIds;\r\n    uint256 private _contributionIds;\r\n    \r\n    // Article structure\r\n    struct Article {\r\n        uint256 id;\r\n        string title;\r\n        string movieTitle;\r\n        string genre;\r\n        address creator;\r\n        uint256 createdAt;\r\n        uint256 totalContributions;\r\n        uint256 totalRewards;\r\n        bool isCompleted;\r\n        uint256 minContributionLength;\r\n        uint256 maxContributors;\r\n    }\r\n    \r\n    // Contribution structure\r\n    struct Contribution {\r\n        uint256 id;\r\n        uint256 articleId;\r\n        address contributor;\r\n        string content;\r\n        uint256 timestamp;\r\n        uint256 likes;\r\n        uint256 rewards;\r\n        bool isApproved;\r\n    }\r\n    \r\n    // Mappings\r\n    mapping(uint256 => Article) public articles;\r\n    mapping(uint256 => Contribution) public contributions;\r\n    mapping(uint256 => uint256[]) public articleContributions; // Article ID -> Contribution IDs\r\n    mapping(address => uint256[]) public userContributions; // User -> Contribution IDs\r\n    mapping(uint256 => mapping(address => bool)) public hasContributed; // Article ID -> User -> Has contributed\r\n    mapping(uint256 => mapping(address => bool)) public hasLiked; // Contribution ID -> User -> Has liked\r\n    \r\n    // Reward token\r\n    IERC20 public rewardToken;\r\n    \r\n    // Events\r\n    event ArticleCreated(uint256 indexed articleId, address indexed creator, string title);\r\n    event ContributionAdded(uint256 indexed contributionId, uint256 indexed articleId, address indexed contributor);\r\n    event ContributionApproved(uint256 indexed contributionId, uint256 reward);\r\n    event ContributionLiked(uint256 indexed contributionId, address indexed liker);\r\n    event ArticleCompleted(uint256 indexed articleId, uint256 totalRewards);\r\n    event RewardsDistributed(uint256 indexed articleId, uint256 totalAmount);\r\n    \r\n    constructor(address _rewardToken) ERC721(\"MovieArticleNFT\", \"MANFT\") Ownable(msg.sender) {\r\n        rewardToken = IERC20(_rewardToken);\r\n    }\r\n    \r\n    // Create new article\r\n    function createArticle(\r\n        string memory _title,\r\n        string memory _movieTitle,\r\n        string memory _genre,\r\n        uint256 _minContributionLength,\r\n        uint256 _maxContributors\r\n    ) external returns (uint256) {\r\n        _articleIds++;\r\n        uint256 newArticleId = _articleIds;\r\n        \r\n        articles[newArticleId] = Article({\r\n            id: newArticleId,\r\n            title: _title,\r\n            movieTitle: _movieTitle,\r\n            genre: _genre,\r\n            creator: msg.sender,\r\n            createdAt: block.timestamp,\r\n            totalContributions: 0,\r\n            totalRewards: 0,\r\n            isCompleted: false,\r\n            minContributionLength: _minContributionLength,\r\n            maxContributors: _maxContributors\r\n        });\r\n        \r\n        emit ArticleCreated(newArticleId, msg.sender, _title);\r\n        return newArticleId;\r\n    }\r\n    \r\n    // Add contribution\r\n    function addContribution(uint256 _articleId, string memory _content) external {\r\n        require(_articleId <= _articleIds, \"Article does not exist\");\r\n        require(!articles[_articleId].isCompleted, \"Article is completed\");\r\n        require(!hasContributed[_articleId][msg.sender], \"You have already contributed to this article\");\r\n        require(bytes(_content).length >= articles[_articleId].minContributionLength, \"Content too short\");\r\n        require(articles[_articleId].totalContributions < articles[_articleId].maxContributors, \"Max contributors reached\");\r\n        \r\n        _contributionIds++;\r\n        uint256 newContributionId = _contributionIds;\r\n        \r\n        contributions[newContributionId] = Contribution({\r\n            id: newContributionId,\r\n            articleId: _articleId,\r\n            contributor: msg.sender,\r\n            content: _content,\r\n            timestamp: block.timestamp,\r\n            likes: 0,\r\n            rewards: 0,\r\n            isApproved: false\r\n        });\r\n        \r\n        articleContributions[_articleId].push(newContributionId);\r\n        userContributions[msg.sender].push(newContributionId);\r\n        hasContributed[_articleId][msg.sender] = true;\r\n        articles[_articleId].totalContributions++;\r\n        \r\n        emit ContributionAdded(newContributionId, _articleId, msg.sender);\r\n    }\r\n    \r\n    // Like contribution\r\n    function likeContribution(uint256 _contributionId) external {\r\n        require(_contributionId <= _contributionIds, \"Contribution does not exist\");\r\n        require(!hasLiked[_contributionId][msg.sender], \"You have already liked this\");\r\n        require(contributions[_contributionId].contributor != msg.sender, \"Cannot like your own contribution\");\r\n        \r\n        contributions[_contributionId].likes++;\r\n        hasLiked[_contributionId][msg.sender] = true;\r\n        \r\n        emit ContributionLiked(_contributionId, msg.sender);\r\n    }\r\n    \r\n    // Approve contribution and distribute rewards\r\n    function approveContribution(uint256 _contributionId, uint256 _reward) external onlyOwner {\r\n        require(_contributionId <= _contributionIds, \"Contribution does not exist\");\r\n        require(!contributions[_contributionId].isApproved, \"Contribution already approved\");\r\n        \r\n        contributions[_contributionId].isApproved = true;\r\n        contributions[_contributionId].rewards = _reward;\r\n        \r\n        uint256 articleId = contributions[_contributionId].articleId;\r\n        articles[articleId].totalRewards += _reward;\r\n        \r\n        // Transfer reward tokens\r\n        if (_reward > 0) {\r\n            rewardToken.transfer(contributions[_contributionId].contributor, _reward);\r\n        }\r\n        \r\n        emit ContributionApproved(_contributionId, _reward);\r\n    }\r\n    \r\n    // Complete article and mint NFT\r\n    function completeArticle(uint256 _articleId) external onlyOwner {\r\n        require(_articleId <= _articleIds, \"Article does not exist\");\r\n        require(!articles[_articleId].isCompleted, \"Article already completed\");\r\n        require(articles[_articleId].totalContributions > 0, \"Article has no contributions\");\r\n        \r\n        articles[_articleId].isCompleted = true;\r\n        \r\n        // Mint NFT for article creator\r\n        _safeMint(articles[_articleId].creator, _articleId);\r\n        \r\n        emit ArticleCompleted(_articleId, articles[_articleId].totalRewards);\r\n    }\r\n    \r\n    // Get all contributions for an article\r\n    function getArticleContributions(uint256 _articleId) external view returns (uint256[] memory) {\r\n        return articleContributions[_articleId];\r\n    }\r\n    \r\n    // Get all contributions by a user\r\n    function getUserContributions(address _user) external view returns (uint256[] memory) {\r\n        return userContributions[_user];\r\n    }\r\n    \r\n    // Get total number of articles\r\n    function getTotalArticles() external view returns (uint256) {\r\n        return _articleIds;\r\n    }\r\n    \r\n    // Get total number of contributions\r\n    function getTotalContributions() external view returns (uint256) {\r\n        return _contributionIds;\r\n    }\r\n    \r\n    // Withdraw tokens from contract\r\n    function withdrawTokens(uint256 _amount) external onlyOwner {\r\n        rewardToken.transfer(owner(), _amount);\r\n    }\r\n} "},"contracts/RewardToken.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract RewardToken is ERC20, Ownable {\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        uint256 initialSupply,\r\n        address initialOwner\r\n    ) ERC20(name, symbol) Ownable(initialOwner) {\r\n        _mint(initialOwner, initialSupply);\r\n    }\r\n    \r\n    // 铸造新代币（仅限所有者）\r\n    function mint(address to, uint256 amount) external onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n    \r\n    // 销毁代币\r\n    function burn(uint256 amount) external {\r\n        _burn(msg.sender, amount);\r\n    }\r\n} "}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2130],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2131,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2130,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2130],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":285,"src":"280:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":285,"src":"2190:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":285,"src":"4430:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2130],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903]},"id":800,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":878,"src":"131:36:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":904,"src":"168:63:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"176:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":2131,"src":"232:48:2","symbolAliases":[{"foreign":{"id":291,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"240:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":285,"src":"281:65:2","symbolAliases":[{"foreign":{"id":293,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"289:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":296,"name":"Context","nameLocations":["1133:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2130,"src":"1133:7:2"},"id":297,"nodeType":"InheritanceSpecifier","src":"1133:7:2"},{"baseName":{"id":298,"name":"IERC20","nameLocations":["1142:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"1142:6:2"},"id":299,"nodeType":"InheritanceSpecifier","src":"1142:6:2"},{"baseName":{"id":300,"name":"IERC20Metadata","nameLocations":["1150:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"1150:14:2"},"id":301,"nodeType":"InheritanceSpecifier","src":"1150:14:2"},{"baseName":{"id":302,"name":"IERC20Errors","nameLocations":["1166:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":189,"src":"1166:12:2"},"id":303,"nodeType":"InheritanceSpecifier","src":"1166:12:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"348:757:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":799,"linearizedBaseContracts":[799,189,903,877,2130],"name":"ERC20","nameLocation":"1124:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":307,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:2","nodeType":"VariableDeclaration","scope":799,"src":"1185:53:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":306,"keyName":"account","keyNameLocation":"1201:7:2","keyType":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":313,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:2","nodeType":"VariableDeclaration","scope":799,"src":"1245:83:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":312,"keyName":"account","keyNameLocation":"1261:7:2","keyType":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":311,"keyName":"spender","keyNameLocation":"1288:7:2","keyType":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":315,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:2","nodeType":"VariableDeclaration","scope":799,"src":"1335:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":317,"mutability":"mutable","name":"_name","nameLocation":"1385:5:2","nodeType":"VariableDeclaration","scope":799,"src":"1370:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:2","nodeType":"VariableDeclaration","scope":799,"src":"1396:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":318,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":335,"nodeType":"Block","src":"1638:57:2","statements":[{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":327,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1648:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"1656:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":330,"nodeType":"ExpressionStatement","src":"1648:13:2"},{"expression":{"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":331,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1671:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":332,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1681:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":334,"nodeType":"ExpressionStatement","src":"1671:17:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"1425:152:2","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":336,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"name_","nameLocation":"1608:5:2","nodeType":"VariableDeclaration","scope":336,"src":"1594:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":321,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:2","nodeType":"VariableDeclaration","scope":336,"src":"1615:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":323,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"1638:0:2"},"scope":799,"src":"1582:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[890],"body":{"id":344,"nodeType":"Block","src":"1820:29:2","statements":[{"expression":{"id":342,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1837:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":341,"id":343,"nodeType":"Return","src":"1830:12:2"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1701:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":345,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:2","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"1773:2:2"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1805:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:2"},"scope":799,"src":"1760:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[896],"body":{"id":353,"nodeType":"Block","src":"2024:31:2","statements":[{"expression":{"id":351,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2041:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":350,"id":352,"nodeType":"Return","src":"2034:14:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1855:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":354,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:2","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"1977:2:2"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2009:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:2"},"scope":799,"src":"1962:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[902],"body":{"id":362,"nodeType":"Block","src":"2744:26:2","statements":[{"expression":{"hexValue":"3138","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":359,"id":361,"nodeType":"Return","src":"2754:9:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2061:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":363,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:2","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"2705:2:2"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"2737:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":357,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:2"},"scope":799,"src":"2688:82:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[826],"body":{"id":371,"nodeType":"Block","src":"2891:36:2","statements":[{"expression":{"id":369,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"2908:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":368,"id":370,"nodeType":"Return","src":"2901:19:2"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"2776:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":372,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2839:11:2","nodeType":"FunctionDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"2850:2:2"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"2882:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2881:9:2"},"scope":799,"src":"2830:97:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[834],"body":{"id":384,"nodeType":"Block","src":"3059:42:2","statements":[{"expression":{"baseExpression":{"id":380,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"3076:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":382,"indexExpression":{"id":381,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"3086:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3076:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":379,"id":383,"nodeType":"Return","src":"3069:25:2"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"2933:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2994:9:2","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"account","nameLocation":"3012:7:2","nodeType":"VariableDeclaration","scope":385,"src":"3004:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3003:17:2"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"3050:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:2"},"scope":799,"src":"2985:116:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[844],"body":{"id":408,"nodeType":"Block","src":"3371:103:2","statements":[{"assignments":[396],"declarations":[{"constant":false,"id":396,"mutability":"mutable","name":"owner","nameLocation":"3389:5:2","nodeType":"VariableDeclaration","scope":408,"src":"3381:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":399,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":397,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"3397:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3397:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3381:28:2"},{"expression":{"arguments":[{"id":401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3429:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":402,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3436:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"3440:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":400,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3419:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3419:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"ExpressionStatement","src":"3419:27:2"},{"expression":{"hexValue":"74727565","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3463:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":394,"id":407,"nodeType":"Return","src":"3456:11:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"3107:184:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":409,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3305:8:2","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"to","nameLocation":"3322:2:2","nodeType":"VariableDeclaration","scope":409,"src":"3314:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"3314:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"value","nameLocation":"3334:5:2","nodeType":"VariableDeclaration","scope":409,"src":"3326:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3313:27:2"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"3365:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":392,"name":"bool","nodeType":"ElementaryTypeName","src":"3365:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3364:6:2"},"scope":799,"src":"3296:178:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[854],"body":{"id":425,"nodeType":"Block","src":"3621:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":419,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"3638:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":421,"indexExpression":{"id":420,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"3650:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":423,"indexExpression":{"id":422,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"3657:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":418,"id":424,"nodeType":"Return","src":"3631:34:2"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"3480:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3541:9:2","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"owner","nameLocation":"3559:5:2","nodeType":"VariableDeclaration","scope":426,"src":"3551:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"3551:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"spender","nameLocation":"3574:7:2","nodeType":"VariableDeclaration","scope":426,"src":"3566:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"3566:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3550:32:2"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"3612:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:9:2"},"scope":799,"src":"3532:140:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[864],"body":{"id":449,"nodeType":"Block","src":"4058:107:2","statements":[{"assignments":[437],"declarations":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"4076:5:2","nodeType":"VariableDeclaration","scope":449,"src":"4068:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":440,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":438,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"4084:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4084:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4068:28:2"},{"expression":{"arguments":[{"id":442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4115:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"4122:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"4131:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":441,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":690,"src":"4106:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4106:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"4106:31:2"},{"expression":{"hexValue":"74727565","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4154:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":435,"id":448,"nodeType":"Return","src":"4147:11:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"3678:296:2","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3988:7:2","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"spender","nameLocation":"4004:7:2","nodeType":"VariableDeclaration","scope":450,"src":"3996:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"3996:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"value","nameLocation":"4021:5:2","nodeType":"VariableDeclaration","scope":450,"src":"4013:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:32:2"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":450,"src":"4052:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":433,"name":"bool","nodeType":"ElementaryTypeName","src":"4052:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4051:6:2"},"scope":799,"src":"3979:186:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[876],"body":{"id":481,"nodeType":"Block","src":"4850:151:2","statements":[{"assignments":[463],"declarations":[{"constant":false,"id":463,"mutability":"mutable","name":"spender","nameLocation":"4868:7:2","nodeType":"VariableDeclaration","scope":481,"src":"4860:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":466,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":464,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"4878:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4860:30:2"},{"expression":{"arguments":[{"id":468,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4916:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4922:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"4931:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":467,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"4900:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4900:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":472,"nodeType":"ExpressionStatement","src":"4900:37:2"},{"expression":{"arguments":[{"id":474,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4957:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":475,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"4963:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"4967:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":473,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"4947:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4947:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"4947:26:2"},{"expression":{"hexValue":"74727565","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4990:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":461,"id":480,"nodeType":"Return","src":"4983:11:2"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"4171:581:2","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":482,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4766:12:2","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"from","nameLocation":"4787:4:2","nodeType":"VariableDeclaration","scope":482,"src":"4779:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"4779:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"to","nameLocation":"4801:2:2","nodeType":"VariableDeclaration","scope":482,"src":"4793:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"4793:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"value","nameLocation":"4813:5:2","nodeType":"VariableDeclaration","scope":482,"src":"4805:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"4805:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:41:2"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"4844:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":459,"name":"bool","nodeType":"ElementaryTypeName","src":"4844:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4843:6:2"},"scope":799,"src":"4757:244:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":528,"nodeType":"Block","src":"5443:231:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":492,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5457:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5473:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5465:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"5465:7:2","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5465:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5457:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"5453:86:2","trueBody":{"id":505,"nodeType":"Block","src":"5477:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5517:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:2","typeDescriptions":{}}},"id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":498,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5498:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"RevertStatement","src":"5491:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":507,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5552:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5566:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5558:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:2","typeDescriptions":{}}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5558:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5552:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":521,"nodeType":"IfStatement","src":"5548:86:2","trueBody":{"id":520,"nodeType":"Block","src":"5570:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5620:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"5612:7:2","typeDescriptions":{}}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":513,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5591:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5591:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":519,"nodeType":"RevertStatement","src":"5584:39:2"}]}},{"expression":{"arguments":[{"id":523,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5651:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":524,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5657:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5661:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":522,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"5643:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":527,"nodeType":"ExpressionStatement","src":"5643:24:2"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"5007:362:2","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":529,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5383:9:2","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"from","nameLocation":"5401:4:2","nodeType":"VariableDeclaration","scope":529,"src":"5393:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"5393:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"to","nameLocation":"5415:2:2","nodeType":"VariableDeclaration","scope":529,"src":"5407:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"5407:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"value","nameLocation":"5427:5:2","nodeType":"VariableDeclaration","scope":529,"src":"5419:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"5419:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5392:41:2"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"5443:0:2"},"scope":799,"src":"5374:300:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"6064:1032:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6078:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6094:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6086:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"6086:7:2","typeDescriptions":{}}},"id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6078:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":576,"nodeType":"Block","src":"6252:362:2","statements":[{"assignments":[551],"declarations":[{"constant":false,"id":551,"mutability":"mutable","name":"fromBalance","nameLocation":"6274:11:2","nodeType":"VariableDeclaration","scope":576,"src":"6266:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"6266:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":555,"initialValue":{"baseExpression":{"id":552,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6288:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":554,"indexExpression":{"id":553,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6298:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6288:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6266:37:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":556,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6321:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6335:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6321:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":566,"nodeType":"IfStatement","src":"6317:115:2","trueBody":{"id":565,"nodeType":"Block","src":"6342:90:2","statements":[{"errorCall":{"arguments":[{"id":560,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6392:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":561,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6398:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6411:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":559,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6367:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6367:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":564,"nodeType":"RevertStatement","src":"6360:57:2"}]}},{"id":575,"nodeType":"UncheckedBlock","src":"6445:159:2","statements":[{"expression":{"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":567,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6552:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":569,"indexExpression":{"id":568,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6562:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6552:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":570,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6570:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6584:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6570:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6552:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":574,"nodeType":"ExpressionStatement","src":"6552:37:2"}]}]},"id":577,"nodeType":"IfStatement","src":"6074:540:2","trueBody":{"id":549,"nodeType":"Block","src":"6098:148:2","statements":[{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6214:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6230:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6214:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":548,"nodeType":"ExpressionStatement","src":"6214:21:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":578,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"6628:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6642:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6634:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:2","typeDescriptions":{}}},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6634:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6628:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":597,"nodeType":"Block","src":"6843:206:2","statements":[{"id":596,"nodeType":"UncheckedBlock","src":"6857:182:2","statements":[{"expression":{"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":590,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"7002:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":592,"indexExpression":{"id":591,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7012:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7002:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7019:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7002:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":595,"nodeType":"ExpressionStatement","src":"7002:22:2"}]}]},"id":598,"nodeType":"IfStatement","src":"6624:425:2","trueBody":{"id":589,"nodeType":"Block","src":"6646:191:2","statements":[{"id":588,"nodeType":"UncheckedBlock","src":"6660:167:2","statements":[{"expression":{"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":584,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6791:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6807:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6791:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":587,"nodeType":"ExpressionStatement","src":"6791:21:2"}]}]}},{"eventCall":{"arguments":[{"id":600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"7073:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":601,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7079:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7083:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":599,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"7064:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7064:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"EmitStatement","src":"7059:30:2"}]},"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"5680:304:2","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5998:7:2","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"from","nameLocation":"6014:4:2","nodeType":"VariableDeclaration","scope":606,"src":"6006:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"6006:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"to","nameLocation":"6028:2:2","nodeType":"VariableDeclaration","scope":606,"src":"6020:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"6020:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"value","nameLocation":"6040:5:2","nodeType":"VariableDeclaration","scope":606,"src":"6032:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"6032:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6005:41:2"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[],"src":"6064:0:2"},"scope":799,"src":"5989:1107:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"7495:152:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7509:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7528:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7520:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"7520:7:2","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7520:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7509:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":628,"nodeType":"IfStatement","src":"7505:91:2","trueBody":{"id":627,"nodeType":"Block","src":"7532:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7574:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"7574:7:2","typeDescriptions":{}}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":620,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"7553:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7553:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":626,"nodeType":"RevertStatement","src":"7546:39:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7621:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7613:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"7613:7:2","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7625:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"7634:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7605:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7605:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"ExpressionStatement","src":"7605:35:2"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"7102:332:2","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":639,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7448:5:2","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"account","nameLocation":"7462:7:2","nodeType":"VariableDeclaration","scope":639,"src":"7454:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"7454:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"value","nameLocation":"7479:5:2","nodeType":"VariableDeclaration","scope":639,"src":"7471:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"7471:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7453:32:2"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"7495:0:2"},"scope":799,"src":"7439:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":671,"nodeType":"Block","src":"8021:150:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":647,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8035:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8046:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"8046:7:2","typeDescriptions":{}}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8035:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"IfStatement","src":"8031:89:2","trueBody":{"id":660,"nodeType":"Block","src":"8058:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8106:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8098:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"8098:7:2","typeDescriptions":{}}},"id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":653,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"8079:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":659,"nodeType":"RevertStatement","src":"8072:37:2"}]}},{"expression":{"arguments":[{"id":663,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8137:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8154:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8146:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"8146:7:2","typeDescriptions":{}}},"id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8146:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"8158:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":662,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"8129:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"8129:35:2"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"7653:307:2","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":672,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7974:5:2","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"account","nameLocation":"7988:7:2","nodeType":"VariableDeclaration","scope":672,"src":"7980:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"7980:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"value","nameLocation":"8005:5:2","nodeType":"VariableDeclaration","scope":672,"src":"7997:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"7997:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:32:2"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[],"src":"8021:0:2"},"scope":799,"src":"7965:206:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"8781:54:2","statements":[{"expression":{"arguments":[{"id":683,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"8800:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"8807:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"8816:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8823:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":682,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"8791:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8791:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"8791:37:2"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"8177:525:2","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8716:8:2","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"owner","nameLocation":"8733:5:2","nodeType":"VariableDeclaration","scope":690,"src":"8725:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"8725:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"spender","nameLocation":"8748:7:2","nodeType":"VariableDeclaration","scope":690,"src":"8740:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"8740:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"value","nameLocation":"8765:5:2","nodeType":"VariableDeclaration","scope":690,"src":"8757:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"8757:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8724:47:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"8781:0:2"},"scope":799,"src":"8707:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":749,"nodeType":"Block","src":"9780:334:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":702,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"9794:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9811:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"9803:7:2","typeDescriptions":{}}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9794:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":716,"nodeType":"IfStatement","src":"9790:89:2","trueBody":{"id":715,"nodeType":"Block","src":"9815:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9865:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9857:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"9857:7:2","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9857:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":708,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"9836:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9836:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":714,"nodeType":"RevertStatement","src":"9829:39:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":717,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"9892:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9911:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9903:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"9903:7:2","typeDescriptions":{}}},"id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9892:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":731,"nodeType":"IfStatement","src":"9888:90:2","trueBody":{"id":730,"nodeType":"Block","src":"9915:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9964:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9956:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"9956:7:2","typeDescriptions":{}}},"id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9956:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":723,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"9936:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9936:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":729,"nodeType":"RevertStatement","src":"9929:38:2"}]}},{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":732,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"9987:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":735,"indexExpression":{"id":733,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"9999:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9987:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":736,"indexExpression":{"id":734,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10006:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9987:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10017:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":739,"nodeType":"ExpressionStatement","src":"9987:35:2"},{"condition":{"id":740,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"10036:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":748,"nodeType":"IfStatement","src":"10032:76:2","trueBody":{"id":747,"nodeType":"Block","src":"10047:61:2","statements":[{"eventCall":{"arguments":[{"id":742,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10075:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10082:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10091:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":741,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10066:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"10061:36:2"}]}}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"8841:836:2","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9691:8:2","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"owner","nameLocation":"9708:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9700:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"9700:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"spender","nameLocation":"9723:7:2","nodeType":"VariableDeclaration","scope":750,"src":"9715:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"9715:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"value","nameLocation":"9740:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9732:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"9732:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"emitEvent","nameLocation":"9752:9:2","nodeType":"VariableDeclaration","scope":750,"src":"9747:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":698,"name":"bool","nodeType":"ElementaryTypeName","src":"9747:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9699:63:2"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"9780:0:2"},"scope":799,"src":"9682:432:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":797,"nodeType":"Block","src":"10485:387:2","statements":[{"assignments":[761],"declarations":[{"constant":false,"id":761,"mutability":"mutable","name":"currentAllowance","nameLocation":"10503:16:2","nodeType":"VariableDeclaration","scope":797,"src":"10495:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"10495:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":766,"initialValue":{"arguments":[{"id":763,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"10532:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10539:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":762,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"10522:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10522:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10495:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10561:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10585:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10580:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10580:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10594:3:2","memberName":"max","nodeType":"MemberAccess","src":"10580:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10561:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":796,"nodeType":"IfStatement","src":"10557:309:2","trueBody":{"id":795,"nodeType":"Block","src":"10599:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":774,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10617:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10636:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10617:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":784,"nodeType":"IfStatement","src":"10613:130:2","trueBody":{"id":783,"nodeType":"Block","src":"10643:100:2","statements":[{"errorCall":{"arguments":[{"id":778,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10695:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":779,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10704:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10722:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"10668:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10668:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":782,"nodeType":"RevertStatement","src":"10661:67:2"}]}},{"id":794,"nodeType":"UncheckedBlock","src":"10756:100:2","statements":[{"expression":{"arguments":[{"id":786,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"10793:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10800:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10809:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10828:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10809:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10835:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":785,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"10784:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10784:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"10784:57:2"}]}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"10120:271:2","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10405:15:2","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"owner","nameLocation":"10429:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10421:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"spender","nameLocation":"10444:7:2","nodeType":"VariableDeclaration","scope":798,"src":"10436:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"10436:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"value","nameLocation":"10461:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10453:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"10453:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10420:47:2"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"10485:0:2"},"scope":799,"src":"10396:476:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":800,"src":"1106:9768:2","usedErrors":[159,164,169,178,183,188],"usedEvents":[811,820]}],"src":"105:10770:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[877]},"id":878,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":801,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"132:71:3","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":877,"linearizedBaseContracts":[877],"name":"IERC20","nameLocation":"214:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"227:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":811,"name":"Transfer","nameLocation":"396:8:3","nodeType":"EventDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:3","nodeType":"VariableDeclaration","scope":811,"src":"405:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":807,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:3","nodeType":"VariableDeclaration","scope":811,"src":"427:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":809,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:3","nodeType":"VariableDeclaration","scope":811,"src":"447:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:3"},"src":"390:72:3"},{"anonymous":false,"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"468:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":820,"name":"Approval","nameLocation":"627:8:3","nodeType":"EventDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:3","nodeType":"VariableDeclaration","scope":820,"src":"636:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:3","nodeType":"VariableDeclaration","scope":820,"src":"659:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:3","nodeType":"VariableDeclaration","scope":820,"src":"684:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:3"},"src":"621:78:3"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"705:65:3","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":826,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:3","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"795:2:3"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"821:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:3"},"scope":877,"src":"775:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"836:71:3","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":834,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":834,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":834,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":877,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"986:213:3","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":844,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:3","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"to","nameLocation":"1230:2:3","nodeType":"VariableDeclaration","scope":844,"src":"1222:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"1242:5:3","nodeType":"VariableDeclaration","scope":844,"src":"1234:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:3"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"1267:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":841,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:3"},"scope":877,"src":"1204:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"1279:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":854,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:3","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"owner","nameLocation":"1575:5:3","nodeType":"VariableDeclaration","scope":854,"src":"1567:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"spender","nameLocation":"1590:7:3","nodeType":"VariableDeclaration","scope":854,"src":"1582:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:3"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"1622:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:3"},"scope":877,"src":"1548:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"1637:667:3","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":864,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:3","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"spender","nameLocation":"2334:7:3","nodeType":"VariableDeclaration","scope":864,"src":"2326:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"value","nameLocation":"2351:5:3","nodeType":"VariableDeclaration","scope":864,"src":"2343:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:3"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":864,"src":"2376:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":861,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:3"},"scope":877,"src":"2309:73:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"2388:297:3","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:3","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"from","nameLocation":"2720:4:3","nodeType":"VariableDeclaration","scope":876,"src":"2712:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"to","nameLocation":"2734:2:3","nodeType":"VariableDeclaration","scope":876,"src":"2726:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"value","nameLocation":"2746:5:3","nodeType":"VariableDeclaration","scope":876,"src":"2738:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:3"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"2771:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:3"},"scope":877,"src":"2690:87:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":878,"src":"204:2575:3","usedErrors":[],"usedEvents":[811,820]}],"src":"106:2674:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[877],"IERC20Metadata":[903]},"id":904,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":879,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":904,"sourceUnit":878,"src":"151:37:4","symbolAliases":[{"foreign":{"id":880,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"159:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":883,"name":"IERC20","nameLocations":["306:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"306:6:4"},"id":884,"nodeType":"InheritanceSpecifier","src":"306:6:4"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"190:87:4","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":903,"linearizedBaseContracts":[903,877],"name":"IERC20Metadata","nameLocation":"288:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"319:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":890,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:4","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"391:2:4"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":890,"src":"417:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":887,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:4"},"scope":903,"src":"378:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"438:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":896,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:4","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"514:2:4"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"540:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":893,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:4"},"scope":903,"src":"499:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"561:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":902,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:4","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"648:2:4"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":902,"src":"674:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":899,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:4"},"scope":903,"src":"631:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":904,"src":"278:405:4","usedErrors":[],"usedEvents":[811,820]}],"src":"125:559:4"},"id":4},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[2130],"ERC165":[3677],"ERC721":[1860],"ERC721Utils":[2100],"IERC165":[3689],"IERC721":[1977],"IERC721Errors":[237],"IERC721Metadata":[2023],"Strings":[3653]},"id":1861,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":905,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":907,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1861,"sourceUnit":1978,"src":"133:38:5","symbolAliases":[{"foreign":{"id":906,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"141:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":909,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1861,"sourceUnit":2024,"src":"172:65:5","symbolAliases":[{"foreign":{"id":908,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"180:15:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":911,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1861,"sourceUnit":2101,"src":"238:52:5","symbolAliases":[{"foreign":{"id":910,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"246:11:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":913,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1861,"sourceUnit":2131,"src":"291:48:5","symbolAliases":[{"foreign":{"id":912,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"299:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":915,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1861,"sourceUnit":3654,"src":"340:48:5","symbolAliases":[{"foreign":{"id":914,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"348:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":918,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1861,"sourceUnit":3678,"src":"389:69:5","symbolAliases":[{"foreign":{"id":916,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"397:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":917,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"406:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":920,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1861,"sourceUnit":285,"src":"459:66:5","symbolAliases":[{"foreign":{"id":919,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"467:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":922,"name":"Context","nameLocations":["803:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":2130,"src":"803:7:5"},"id":923,"nodeType":"InheritanceSpecifier","src":"803:7:5"},{"baseName":{"id":924,"name":"ERC165","nameLocations":["812:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3677,"src":"812:6:5"},"id":925,"nodeType":"InheritanceSpecifier","src":"812:6:5"},{"baseName":{"id":926,"name":"IERC721","nameLocations":["820:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1977,"src":"820:7:5"},"id":927,"nodeType":"InheritanceSpecifier","src":"820:7:5"},{"baseName":{"id":928,"name":"IERC721Metadata","nameLocations":["829:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":2023,"src":"829:15:5"},"id":929,"nodeType":"InheritanceSpecifier","src":"829:15:5"},{"baseName":{"id":930,"name":"IERC721Errors","nameLocations":["846:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":237,"src":"846:13:5"},"id":931,"nodeType":"InheritanceSpecifier","src":"846:13:5"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"527:247:5","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1860,"linearizedBaseContracts":[1860,237,2023,1977,3677,3689,2130],"name":"ERC721","nameLocation":"793:6:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":934,"libraryName":{"id":932,"name":"Strings","nameLocations":["872:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":3653,"src":"872:7:5"},"nodeType":"UsingForDirective","src":"866:26:5","typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":936,"mutability":"mutable","name":"_name","nameLocation":"931:5:5","nodeType":"VariableDeclaration","scope":1860,"src":"916:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":935,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":938,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:5","nodeType":"VariableDeclaration","scope":1860,"src":"963:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":937,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":942,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:5","nodeType":"VariableDeclaration","scope":1860,"src":"992:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":941,"keyName":"tokenId","keyNameLocation":"1008:7:5","keyType":{"id":939,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":946,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:5","nodeType":"VariableDeclaration","scope":1860,"src":"1050:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":945,"keyName":"owner","keyNameLocation":"1066:5:5","keyType":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":950,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:5","nodeType":"VariableDeclaration","scope":1860,"src":"1108:59:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":949,"keyName":"tokenId","keyNameLocation":"1124:7:5","keyType":{"id":947,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":956,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:5","nodeType":"VariableDeclaration","scope":1860,"src":"1174:86:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":955,"keyName":"owner","keyNameLocation":"1190:5:5","keyType":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":954,"keyName":"operator","keyNameLocation":"1215:8:5","keyType":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":953,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":972,"nodeType":"Block","src":"1436:57:5","statements":[{"expression":{"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":964,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"1446:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":965,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"1454:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":967,"nodeType":"ExpressionStatement","src":"1446:13:5"},{"expression":{"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":968,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"1469:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":969,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"1479:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":971,"nodeType":"ExpressionStatement","src":"1469:17:5"}]},"documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"1267:108:5","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":973,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"name_","nameLocation":"1406:5:5","nodeType":"VariableDeclaration","scope":973,"src":"1392:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":958,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:5","nodeType":"VariableDeclaration","scope":973,"src":"1413:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":960,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:5"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[],"src":"1436:0:5"},"scope":1860,"src":"1380:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3676,3688],"body":{"id":1003,"nodeType":"Block","src":"1668:192:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":984,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"1697:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":986,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"1717:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1977_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1977_$","typeString":"type(contract IERC721)"}],"id":985,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1977","typeString":"type(contract IERC721)"}},"id":988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":990,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"1753:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":992,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"1773:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2023_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2023_$","typeString":"type(contract IERC721Metadata)"}],"id":991,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2023","typeString":"type(contract IERC721Metadata)"}},"id":994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":999,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"1841:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":997,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1860_$","typeString":"type(contract super ERC721)"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:5","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3676,"src":"1817:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":983,"id":1002,"nodeType":"Return","src":"1678:175:5"}]},"documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"1499:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1004,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:5","nodeType":"FunctionDefinition","overrides":{"id":980,"nodeType":"OverrideSpecifier","overrides":[{"id":978,"name":"ERC165","nameLocations":["1636:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3677,"src":"1636:6:5"},{"id":979,"name":"IERC165","nameLocations":["1644:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":3689,"src":"1644:7:5"}],"src":"1627:25:5"},"parameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:5","nodeType":"VariableDeclaration","scope":1004,"src":"1587:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":975,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:5"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1004,"src":"1662:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":981,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:5"},"scope":1860,"src":"1560:300:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1902],"body":{"id":1031,"nodeType":"Block","src":"1991:136:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1012,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"2005:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:5","typeDescriptions":{}}},"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1026,"nodeType":"IfStatement","src":"2001:87:5","trueBody":{"id":1025,"nodeType":"Block","src":"2026:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:5","typeDescriptions":{}}},"id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1018,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2047:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1024,"nodeType":"RevertStatement","src":"2040:37:5"}]}},{"expression":{"baseExpression":{"id":1027,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2104:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1029,"indexExpression":{"id":1028,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"2114:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1011,"id":1030,"nodeType":"Return","src":"2097:23:5"}]},"documentation":{"id":1005,"nodeType":"StructuredDocumentation","src":"1866:48:5","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1032,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:5","nodeType":"FunctionDefinition","parameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1007,"mutability":"mutable","name":"owner","nameLocation":"1946:5:5","nodeType":"VariableDeclaration","scope":1032,"src":"1938:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:5"},"returnParameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1032,"src":"1982:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:5"},"scope":1860,"src":"1919:208:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1910],"body":{"id":1044,"nodeType":"Block","src":"2256:46:5","statements":[{"expression":{"arguments":[{"id":1041,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"2287:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1040,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"2273:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1039,"id":1043,"nodeType":"Return","src":"2266:29:5"}]},"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"2133:46:5","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1045,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:5","nodeType":"FunctionDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:5","nodeType":"VariableDeclaration","scope":1045,"src":"2201:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:5"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1045,"src":"2247:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:5"},"scope":1860,"src":"2184:118:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2008],"body":{"id":1053,"nodeType":"Block","src":"2424:29:5","statements":[{"expression":{"id":1051,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"2441:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1050,"id":1052,"nodeType":"Return","src":"2434:12:5"}]},"documentation":{"id":1046,"nodeType":"StructuredDocumentation","src":"2308:51:5","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1054,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:5","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[],"src":"2377:2:5"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1054,"src":"2409:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1048,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:5"},"scope":1860,"src":"2364:89:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2014],"body":{"id":1062,"nodeType":"Block","src":"2579:31:5","statements":[{"expression":{"id":1060,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"2596:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1059,"id":1061,"nodeType":"Return","src":"2589:14:5"}]},"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"2459:53:5","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1063,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:5","nodeType":"FunctionDefinition","parameters":{"id":1056,"nodeType":"ParameterList","parameters":[],"src":"2532:2:5"},"returnParameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1063,"src":"2564:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1057,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:5"},"scope":1860,"src":"2517:93:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2022],"body":{"id":1098,"nodeType":"Block","src":"2755:176:5","statements":[{"expression":{"arguments":[{"id":1072,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"2779:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1071,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"2765:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1074,"nodeType":"ExpressionStatement","src":"2765:22:5"},{"assignments":[1076],"declarations":[{"constant":false,"id":1076,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:5","nodeType":"VariableDeclaration","scope":1098,"src":"2798:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1075,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1079,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1077,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"2822:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:5"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1082,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"2855:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1080,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:5","typeDescriptions":{}}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:5","memberName":"length","nodeType":"MemberAccess","src":"2849:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:5","trueExpression":{"arguments":[{"id":1090,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"2891:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1091,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"2900:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:5","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2365,"src":"2900:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1087,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:5","typeDescriptions":{}}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:5","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1070,"id":1097,"nodeType":"Return","src":"2842:82:5"}]},"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"2616:55:5","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:5","nodeType":"FunctionDefinition","parameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:5","nodeType":"VariableDeclaration","scope":1099,"src":"2694:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:5"},"returnParameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1099,"src":"2740:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1068,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:5"},"scope":1860,"src":"2676:255:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1107,"nodeType":"Block","src":"3239:26:5","statements":[{"expression":{"hexValue":"","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1104,"id":1106,"nodeType":"Return","src":"3249:9:5"}]},"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"2937:231:5","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1108,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:5","nodeType":"FunctionDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[],"src":"3190:2:5"},"returnParameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1108,"src":"3224:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1102,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:5"},"scope":1860,"src":"3173:92:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1950],"body":{"id":1123,"nodeType":"Block","src":"3383:52:5","statements":[{"expression":{"arguments":[{"id":1117,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"3402:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1118,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"3406:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1119,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"3415:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1116,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1727,1793],"referencedDeclaration":1727,"src":"3393:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1122,"nodeType":"ExpressionStatement","src":"3393:35:5"}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"3271:46:5","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1124,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:5","nodeType":"FunctionDefinition","parameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"to","nameLocation":"3347:2:5","nodeType":"VariableDeclaration","scope":1124,"src":"3339:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:5","nodeType":"VariableDeclaration","scope":1124,"src":"3351:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:5"},"returnParameters":{"id":1115,"nodeType":"ParameterList","parameters":[],"src":"3383:0:5"},"scope":1860,"src":"3322:113:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1966],"body":{"id":1140,"nodeType":"Block","src":"3572:78:5","statements":[{"expression":{"arguments":[{"id":1133,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"3596:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1132,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"3582:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1135,"nodeType":"ExpressionStatement","src":"3582:22:5"},{"expression":{"arguments":[{"id":1137,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"3635:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1136,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"3622:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1131,"id":1139,"nodeType":"Return","src":"3615:28:5"}]},"documentation":{"id":1125,"nodeType":"StructuredDocumentation","src":"3441:50:5","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1141,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:5","nodeType":"FunctionDefinition","parameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:5","nodeType":"VariableDeclaration","scope":1141,"src":"3517:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:5"},"returnParameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1141,"src":"3563:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:5"},"scope":1860,"src":"3496:154:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1958],"body":{"id":1156,"nodeType":"Block","src":"3792:69:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1150,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"3821:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1152,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"3835:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1153,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"3845:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1149,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"3802:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1155,"nodeType":"ExpressionStatement","src":"3802:52:5"}]},"documentation":{"id":1142,"nodeType":"StructuredDocumentation","src":"3656:56:5","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1157,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:5","nodeType":"FunctionDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1144,"mutability":"mutable","name":"operator","nameLocation":"3752:8:5","nodeType":"VariableDeclaration","scope":1157,"src":"3744:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"approved","nameLocation":"3767:8:5","nodeType":"VariableDeclaration","scope":1157,"src":"3762:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1145,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:5"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[],"src":"3792:0:5"},"scope":1860,"src":"3717:144:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1976],"body":{"id":1173,"nodeType":"Block","src":"4021:59:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1167,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"4038:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1169,"indexExpression":{"id":1168,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"4057:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1171,"indexExpression":{"id":1170,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"4064:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1166,"id":1172,"nodeType":"Return","src":"4031:42:5"}]},"documentation":{"id":1158,"nodeType":"StructuredDocumentation","src":"3867:55:5","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1174,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:5","nodeType":"FunctionDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"owner","nameLocation":"3961:5:5","nodeType":"VariableDeclaration","scope":1174,"src":"3953:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1162,"mutability":"mutable","name":"operator","nameLocation":"3976:8:5","nodeType":"VariableDeclaration","scope":1174,"src":"3968:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:5"},"returnParameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1174,"src":"4015:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1164,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:5"},"scope":1860,"src":"3927:153:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1942],"body":{"id":1219,"nodeType":"Block","src":"4222:498:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1184,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"4236:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:5","typeDescriptions":{}}},"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1198,"nodeType":"IfStatement","src":"4232:87:5","trueBody":{"id":1197,"nodeType":"Block","src":"4254:65:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:5","typeDescriptions":{}}},"id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1190,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"4275:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1196,"nodeType":"RevertStatement","src":"4268:40:5"}]}},{"assignments":[1200],"declarations":[{"constant":false,"id":1200,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:5","nodeType":"VariableDeclaration","scope":1219,"src":"4537:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1207,"initialValue":{"arguments":[{"id":1202,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"4569:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1203,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"4573:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1204,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"4582:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1201,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"4561:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1208,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"4609:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1209,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"4626:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1218,"nodeType":"IfStatement","src":"4605:109:5","trueBody":{"id":1217,"nodeType":"Block","src":"4632:82:5","statements":[{"errorCall":{"arguments":[{"id":1212,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"4674:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1213,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"4680:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1214,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"4689:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1211,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"4653:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1216,"nodeType":"RevertStatement","src":"4646:57:5"}]}}]},"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"4086:51:5","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1220,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:5","nodeType":"FunctionDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"from","nameLocation":"4172:4:5","nodeType":"VariableDeclaration","scope":1220,"src":"4164:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"to","nameLocation":"4186:2:5","nodeType":"VariableDeclaration","scope":1220,"src":"4178:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:5","nodeType":"VariableDeclaration","scope":1220,"src":"4190:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:5"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[],"src":"4222:0:5"},"scope":1860,"src":"4142:578:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1932],"body":{"id":1237,"nodeType":"Block","src":"4862:56:5","statements":[{"expression":{"arguments":[{"id":1231,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"4889:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1232,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"4895:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1233,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"4899:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1230,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1238,1268],"referencedDeclaration":1268,"src":"4872:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1236,"nodeType":"ExpressionStatement","src":"4872:39:5"}]},"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"4726:55:5","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1238,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:5","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"from","nameLocation":"4820:4:5","nodeType":"VariableDeclaration","scope":1238,"src":"4812:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"to","nameLocation":"4834:2:5","nodeType":"VariableDeclaration","scope":1238,"src":"4826:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:5","nodeType":"VariableDeclaration","scope":1238,"src":"4838:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:5"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[],"src":"4862:0:5"},"scope":1860,"src":"4786:132:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1922],"body":{"id":1267,"nodeType":"Block","src":"5087:130:5","statements":[{"expression":{"arguments":[{"id":1251,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"5110:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1252,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"5116:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1253,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"5120:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1250,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"5097:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1255,"nodeType":"ExpressionStatement","src":"5097:31:5"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1259,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"5172:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1261,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"5186:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1262,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"5192:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1263,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"5196:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1264,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"5205:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1256,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"5138:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2100_$","typeString":"type(library ERC721Utils)"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:5","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2099,"src":"5138:33:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1266,"nodeType":"ExpressionStatement","src":"5138:72:5"}]},"documentation":{"id":1239,"nodeType":"StructuredDocumentation","src":"4924:55:5","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1268,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:5","nodeType":"FunctionDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1241,"mutability":"mutable","name":"from","nameLocation":"5018:4:5","nodeType":"VariableDeclaration","scope":1268,"src":"5010:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"to","nameLocation":"5032:2:5","nodeType":"VariableDeclaration","scope":1268,"src":"5024:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:5","nodeType":"VariableDeclaration","scope":1268,"src":"5036:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1244,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"data","nameLocation":"5066:4:5","nodeType":"VariableDeclaration","scope":1268,"src":"5053:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1246,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:5"},"returnParameters":{"id":1249,"nodeType":"ParameterList","parameters":[],"src":"5087:0:5"},"scope":1860,"src":"4984:233:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1280,"nodeType":"Block","src":"5807:40:5","statements":[{"expression":{"baseExpression":{"id":1276,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"5824:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1278,"indexExpression":{"id":1277,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"5832:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1275,"id":1279,"nodeType":"Return","src":"5817:23:5"}]},"documentation":{"id":1269,"nodeType":"StructuredDocumentation","src":"5223:504:5","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1281,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:5","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:5","nodeType":"VariableDeclaration","scope":1281,"src":"5750:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:5"},"returnParameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1281,"src":"5798:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:5"},"scope":1860,"src":"5732:115:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1293,"nodeType":"Block","src":"6042:48:5","statements":[{"expression":{"baseExpression":{"id":1289,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"6059:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1291,"indexExpression":{"id":1290,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"6075:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1288,"id":1292,"nodeType":"Return","src":"6052:31:5"}]},"documentation":{"id":1282,"nodeType":"StructuredDocumentation","src":"5853:105:5","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1294,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:5","nodeType":"FunctionDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1284,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:5","nodeType":"VariableDeclaration","scope":1294,"src":"5985:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1283,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:5"},"returnParameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1294,"src":"6033:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:5"},"scope":1860,"src":"5963:127:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1329,"nodeType":"Block","src":"6510:163:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1306,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"6539:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:5","typeDescriptions":{}}},"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1312,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"6577:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1313,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"6586:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1316,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"6614:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1317,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"6621:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1315,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"6597:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1321,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"6646:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1320,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"6633:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1323,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"6658:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1305,"id":1328,"nodeType":"Return","src":"6520:146:5"}]},"documentation":{"id":1295,"nodeType":"StructuredDocumentation","src":"6096:300:5","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1330,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:5","nodeType":"FunctionDefinition","parameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"owner","nameLocation":"6432:5:5","nodeType":"VariableDeclaration","scope":1330,"src":"6424:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1299,"mutability":"mutable","name":"spender","nameLocation":"6447:7:5","nodeType":"VariableDeclaration","scope":1330,"src":"6439:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:5","nodeType":"VariableDeclaration","scope":1330,"src":"6456:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:5"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1330,"src":"6504:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1303,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:5"},"scope":1860,"src":"6401:272:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1366,"nodeType":"Block","src":"7202:271:5","statements":[{"condition":{"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:5","subExpression":{"arguments":[{"id":1341,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"7231:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1342,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7238:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1343,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"7247:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1340,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"7217:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1365,"nodeType":"IfStatement","src":"7212:255:5","trueBody":{"id":1364,"nodeType":"Block","src":"7257:210:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1346,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"7275:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:5","typeDescriptions":{}}},"id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1362,"nodeType":"Block","src":"7373:84:5","statements":[{"errorCall":{"arguments":[{"id":1358,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7425:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1359,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"7434:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1357,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7398:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1361,"nodeType":"RevertStatement","src":"7391:51:5"}]},"id":1363,"nodeType":"IfStatement","src":"7271:186:5","trueBody":{"id":1356,"nodeType":"Block","src":"7296:71:5","statements":[{"errorCall":{"arguments":[{"id":1353,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"7344:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1352,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"7321:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1355,"nodeType":"RevertStatement","src":"7314:38:5"}]}}]}}]},"documentation":{"id":1331,"nodeType":"StructuredDocumentation","src":"6679:421:5","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1367,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:5","nodeType":"FunctionDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"owner","nameLocation":"7139:5:5","nodeType":"VariableDeclaration","scope":1367,"src":"7131:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1332,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1335,"mutability":"mutable","name":"spender","nameLocation":"7154:7:5","nodeType":"VariableDeclaration","scope":1367,"src":"7146:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:5","nodeType":"VariableDeclaration","scope":1367,"src":"7163:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1336,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:5"},"returnParameters":{"id":1339,"nodeType":"ParameterList","parameters":[],"src":"7202:0:5"},"scope":1860,"src":"7105:368:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1382,"nodeType":"Block","src":"8190:78:5","statements":[{"id":1381,"nodeType":"UncheckedBlock","src":"8200:62:5","statements":[{"expression":{"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1375,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"8224:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1377,"indexExpression":{"id":1376,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"8234:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"8246:5:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1380,"nodeType":"ExpressionStatement","src":"8224:27:5"}]}]},"documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"7479:631:5","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":1383,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:5","nodeType":"FunctionDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"account","nameLocation":"8149:7:5","nodeType":"VariableDeclaration","scope":1383,"src":"8141:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"value","nameLocation":"8166:5:5","nodeType":"VariableDeclaration","scope":1383,"src":"8158:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1371,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:5"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[],"src":"8190:0:5"},"scope":1860,"src":"8115:153:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1472,"nodeType":"Block","src":"8956:700:5","statements":[{"assignments":[1396],"declarations":[{"constant":false,"id":1396,"mutability":"mutable","name":"from","nameLocation":"8974:4:5","nodeType":"VariableDeclaration","scope":1472,"src":"8966:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1400,"initialValue":{"arguments":[{"id":1398,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"8990:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1397,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"8981:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1401,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"9058:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1402,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:5","typeDescriptions":{}}},"id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1414,"nodeType":"IfStatement","src":"9054:86:5","trueBody":{"id":1413,"nodeType":"Block","src":"9078:62:5","statements":[{"expression":{"arguments":[{"id":1408,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"9109:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1409,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"9115:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1410,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"9121:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1407,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"9092:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1412,"nodeType":"ExpressionStatement","src":"9092:37:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1415,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"9184:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:5","typeDescriptions":{}}},"id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1442,"nodeType":"IfStatement","src":"9180:256:5","trueBody":{"id":1441,"nodeType":"Block","src":"9204:232:5","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1422,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:5","typeDescriptions":{}}},"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1426,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"9321:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1427,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:5","typeDescriptions":{}}},"id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1421,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1727,1793],"referencedDeclaration":1793,"src":"9300:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1433,"nodeType":"ExpressionStatement","src":"9300:48:5"},{"id":1440,"nodeType":"UncheckedBlock","src":"9363:63:5","statements":[{"expression":{"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1434,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"9391:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1436,"indexExpression":{"id":1435,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"9401:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1439,"nodeType":"ExpressionStatement","src":"9391:20:5"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"9450:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1444,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:5","typeDescriptions":{}}},"id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1457,"nodeType":"IfStatement","src":"9446:107:5","trueBody":{"id":1456,"nodeType":"Block","src":"9468:85:5","statements":[{"id":1455,"nodeType":"UncheckedBlock","src":"9482:61:5","statements":[{"expression":{"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1449,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"9510:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1451,"indexExpression":{"id":1450,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"9520:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1454,"nodeType":"ExpressionStatement","src":"9510:18:5"}]}]}},{"expression":{"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1458,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"9563:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1460,"indexExpression":{"id":1459,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"9571:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1461,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"9582:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1463,"nodeType":"ExpressionStatement","src":"9563:21:5"},{"eventCall":{"arguments":[{"id":1465,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"9609:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1466,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"9615:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1467,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"9619:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1464,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"9600:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1469,"nodeType":"EmitStatement","src":"9595:32:5"},{"expression":{"id":1470,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"9645:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1394,"id":1471,"nodeType":"Return","src":"9638:11:5"}]},"documentation":{"id":1384,"nodeType":"StructuredDocumentation","src":"8274:582:5","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":1473,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:5","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"to","nameLocation":"8886:2:5","nodeType":"VariableDeclaration","scope":1473,"src":"8878:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:5","nodeType":"VariableDeclaration","scope":1473,"src":"8890:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"auth","nameLocation":"8915:4:5","nodeType":"VariableDeclaration","scope":1473,"src":"8907:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:5"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1473,"src":"8947:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:5"},"scope":1860,"src":"8861:795:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1522,"nodeType":"Block","src":"10031:274:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1481,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"10045:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:5","typeDescriptions":{}}},"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1495,"nodeType":"IfStatement","src":"10041:87:5","trueBody":{"id":1494,"nodeType":"Block","src":"10063:65:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1488,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:5","typeDescriptions":{}}},"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1487,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"10084:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1493,"nodeType":"RevertStatement","src":"10077:40:5"}]}},{"assignments":[1497],"declarations":[{"constant":false,"id":1497,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:5","nodeType":"VariableDeclaration","scope":1522,"src":"10137:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1506,"initialValue":{"arguments":[{"id":1499,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"10169:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1500,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"10173:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1501,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:5","typeDescriptions":{}}},"id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1498,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"10161:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1507,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"10207:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1508,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:5","typeDescriptions":{}}},"id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1521,"nodeType":"IfStatement","src":"10203:96:5","trueBody":{"id":1520,"nodeType":"Block","src":"10236:63:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1514,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:5","typeDescriptions":{}}},"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1513,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"10257:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1519,"nodeType":"RevertStatement","src":"10250:38:5"}]}}]},"documentation":{"id":1474,"nodeType":"StructuredDocumentation","src":"9662:311:5","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1523,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:5","nodeType":"FunctionDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"mutability":"mutable","name":"to","nameLocation":"10001:2:5","nodeType":"VariableDeclaration","scope":1523,"src":"9993:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1475,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1478,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:5","nodeType":"VariableDeclaration","scope":1523,"src":"10005:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:5"},"returnParameters":{"id":1480,"nodeType":"ParameterList","parameters":[],"src":"10031:0:5"},"scope":1860,"src":"9978:327:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1537,"nodeType":"Block","src":"10713:43:5","statements":[{"expression":{"arguments":[{"id":1532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"10733:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1533,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"10737:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1531,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1538,1568],"referencedDeclaration":1568,"src":"10723:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1536,"nodeType":"ExpressionStatement","src":"10723:26:5"}]},"documentation":{"id":1524,"nodeType":"StructuredDocumentation","src":"10311:340:5","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1538,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:5","nodeType":"FunctionDefinition","parameters":{"id":1529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"to","nameLocation":"10683:2:5","nodeType":"VariableDeclaration","scope":1538,"src":"10675:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1528,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:5","nodeType":"VariableDeclaration","scope":1538,"src":"10687:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1527,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:5"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[],"src":"10713:0:5"},"scope":1860,"src":"10656:100:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1567,"nodeType":"Block","src":"11061:123:5","statements":[{"expression":{"arguments":[{"id":1549,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"11077:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1550,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"11081:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1548,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"11071:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1552,"nodeType":"ExpressionStatement","src":"11071:18:5"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1556,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"11133:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1558,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:5","typeDescriptions":{}}},"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1562,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"11159:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1563,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"11163:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1564,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"11172:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1553,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"11099:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2100_$","typeString":"type(library ERC721Utils)"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:5","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2099,"src":"11099:33:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1566,"nodeType":"ExpressionStatement","src":"11099:78:5"}]},"documentation":{"id":1539,"nodeType":"StructuredDocumentation","src":"10762:210:5","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1568,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:5","nodeType":"FunctionDefinition","parameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"to","nameLocation":"11004:2:5","nodeType":"VariableDeclaration","scope":1568,"src":"10996:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:5","nodeType":"VariableDeclaration","scope":1568,"src":"11008:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1545,"mutability":"mutable","name":"data","nameLocation":"11038:4:5","nodeType":"VariableDeclaration","scope":1568,"src":"11025:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1544,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:5"},"returnParameters":{"id":1547,"nodeType":"ParameterList","parameters":[],"src":"11061:0:5"},"scope":1860,"src":"10977:207:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1600,"nodeType":"Block","src":"11551:186:5","statements":[{"assignments":[1575],"declarations":[{"constant":false,"id":1575,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:5","nodeType":"VariableDeclaration","scope":1600,"src":"11561:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1574,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1587,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1577,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:5","typeDescriptions":{}}},"id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1581,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"11605:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1582,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:5","typeDescriptions":{}}},"id":1585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1576,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"11585:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1588,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"11639:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1589,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:5","typeDescriptions":{}}},"id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1599,"nodeType":"IfStatement","src":"11635:96:5","trueBody":{"id":1598,"nodeType":"Block","src":"11668:63:5","statements":[{"errorCall":{"arguments":[{"id":1595,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"11712:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1594,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"11689:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1597,"nodeType":"RevertStatement","src":"11682:38:5"}]}}]},"documentation":{"id":1569,"nodeType":"StructuredDocumentation","src":"11190:315:5","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1601,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:5","nodeType":"FunctionDefinition","parameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:5","nodeType":"VariableDeclaration","scope":1601,"src":"11525:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:5"},"returnParameters":{"id":1573,"nodeType":"ParameterList","parameters":[],"src":"11551:0:5"},"scope":1860,"src":"11510:227:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1660,"nodeType":"Block","src":"12132:389:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1611,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"12146:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1612,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:5","typeDescriptions":{}}},"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1625,"nodeType":"IfStatement","src":"12142:87:5","trueBody":{"id":1624,"nodeType":"Block","src":"12164:65:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1618,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:5","typeDescriptions":{}}},"id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1617,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"12185:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1623,"nodeType":"RevertStatement","src":"12178:40:5"}]}},{"assignments":[1627],"declarations":[{"constant":false,"id":1627,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:5","nodeType":"VariableDeclaration","scope":1660,"src":"12238:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1626,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1636,"initialValue":{"arguments":[{"id":1629,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"12270:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1630,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"12274:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1631,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:5","typeDescriptions":{}}},"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1628,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"12262:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1637,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"12308:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:5","typeDescriptions":{}}},"id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1648,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"12410:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1649,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"12427:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1658,"nodeType":"IfStatement","src":"12406:109:5","trueBody":{"id":1657,"nodeType":"Block","src":"12433:82:5","statements":[{"errorCall":{"arguments":[{"id":1652,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"12475:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1653,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"12481:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1654,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"12490:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1651,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"12454:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1656,"nodeType":"RevertStatement","src":"12447:57:5"}]}},"id":1659,"nodeType":"IfStatement","src":"12304:211:5","trueBody":{"id":1647,"nodeType":"Block","src":"12337:63:5","statements":[{"errorCall":{"arguments":[{"id":1644,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"12381:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1643,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"12358:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1646,"nodeType":"RevertStatement","src":"12351:38:5"}]}}]},"documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"11743:313:5","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1661,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:5","nodeType":"FunctionDefinition","parameters":{"id":1609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"from","nameLocation":"12088:4:5","nodeType":"VariableDeclaration","scope":1661,"src":"12080:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1603,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1606,"mutability":"mutable","name":"to","nameLocation":"12102:2:5","nodeType":"VariableDeclaration","scope":1661,"src":"12094:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1608,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:5","nodeType":"VariableDeclaration","scope":1661,"src":"12106:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1607,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:5"},"returnParameters":{"id":1610,"nodeType":"ParameterList","parameters":[],"src":"12132:0:5"},"scope":1860,"src":"12061:460:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1678,"nodeType":"Block","src":"13530:53:5","statements":[{"expression":{"arguments":[{"id":1672,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"13554:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1673,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"13560:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1674,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"13564:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1671,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1679,1709],"referencedDeclaration":1709,"src":"13540:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1677,"nodeType":"ExpressionStatement","src":"13540:36:5"}]},"documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"12527:923:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1679,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:5","nodeType":"FunctionDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"from","nameLocation":"13486:4:5","nodeType":"VariableDeclaration","scope":1679,"src":"13478:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1663,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1666,"mutability":"mutable","name":"to","nameLocation":"13500:2:5","nodeType":"VariableDeclaration","scope":1679,"src":"13492:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:5","nodeType":"VariableDeclaration","scope":1679,"src":"13504:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:5"},"returnParameters":{"id":1670,"nodeType":"ParameterList","parameters":[],"src":"13530:0:5"},"scope":1860,"src":"13455:128:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1708,"nodeType":"Block","src":"13922:127:5","statements":[{"expression":{"arguments":[{"id":1692,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"13942:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1693,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"13948:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1694,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"13952:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1691,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"13932:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1696,"nodeType":"ExpressionStatement","src":"13932:28:5"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1700,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"14004:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1702,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"14018:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1703,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"14024:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1704,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"14028:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1705,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"14037:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1697,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"13970:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2100_$","typeString":"type(library ERC721Utils)"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:5","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2099,"src":"13970:33:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1707,"nodeType":"ExpressionStatement","src":"13970:72:5"}]},"documentation":{"id":1680,"nodeType":"StructuredDocumentation","src":"13589:226:5","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1709,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:5","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"from","nameLocation":"13851:4:5","nodeType":"VariableDeclaration","scope":1709,"src":"13843:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1681,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1684,"mutability":"mutable","name":"to","nameLocation":"13865:2:5","nodeType":"VariableDeclaration","scope":1709,"src":"13857:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1683,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1686,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:5","nodeType":"VariableDeclaration","scope":1709,"src":"13869:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1685,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"data","nameLocation":"13899:4:5","nodeType":"VariableDeclaration","scope":1709,"src":"13886:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1687,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:5"},"returnParameters":{"id":1690,"nodeType":"ParameterList","parameters":[],"src":"13922:0:5"},"scope":1860,"src":"13820:229:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1726,"nodeType":"Block","src":"14562:50:5","statements":[{"expression":{"arguments":[{"id":1720,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"14581:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1721,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"14585:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1722,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"14594:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1719,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1727,1793],"referencedDeclaration":1793,"src":"14572:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1725,"nodeType":"ExpressionStatement","src":"14572:33:5"}]},"documentation":{"id":1710,"nodeType":"StructuredDocumentation","src":"14055:432:5","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1727,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:5","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"to","nameLocation":"14518:2:5","nodeType":"VariableDeclaration","scope":1727,"src":"14510:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1711,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1714,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:5","nodeType":"VariableDeclaration","scope":1727,"src":"14522:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1713,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"auth","nameLocation":"14547:4:5","nodeType":"VariableDeclaration","scope":1727,"src":"14539:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:5"},"returnParameters":{"id":1718,"nodeType":"ParameterList","parameters":[],"src":"14562:0:5"},"scope":1860,"src":"14492:120:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1792,"nodeType":"Block","src":"14888:568:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1739,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"14954:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1740,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"14967:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1741,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:5","typeDescriptions":{}}},"id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1785,"nodeType":"IfStatement","src":"14950:460:5","trueBody":{"id":1784,"nodeType":"Block","src":"14987:423:5","statements":[{"assignments":[1748],"declarations":[{"constant":false,"id":1748,"mutability":"mutable","name":"owner","nameLocation":"15009:5:5","nodeType":"VariableDeclaration","scope":1784,"src":"15001:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1747,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1752,"initialValue":{"arguments":[{"id":1750,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"15031:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1749,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"15017:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1753,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"15167:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1754,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:5","typeDescriptions":{}}},"id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1759,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"15189:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1760,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"15198:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:5","subExpression":{"arguments":[{"id":1764,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"15224:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1765,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"15231:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1763,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"15207:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1774,"nodeType":"IfStatement","src":"15163:142:5","trueBody":{"id":1773,"nodeType":"Block","src":"15238:67:5","statements":[{"errorCall":{"arguments":[{"id":1770,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"15285:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1769,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"15263:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1772,"nodeType":"RevertStatement","src":"15256:34:5"}]}},{"condition":{"id":1775,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"15323:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1783,"nodeType":"IfStatement","src":"15319:81:5","trueBody":{"id":1782,"nodeType":"Block","src":"15334:66:5","statements":[{"eventCall":{"arguments":[{"id":1777,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"15366:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1778,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"15373:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1779,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"15377:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1776,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"15357:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1781,"nodeType":"EmitStatement","src":"15352:33:5"}]}}]}},{"expression":{"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1786,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"15420:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1788,"indexExpression":{"id":1787,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"15436:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1789,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"15447:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1791,"nodeType":"ExpressionStatement","src":"15420:29:5"}]},"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"14618:171:5","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1793,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:5","nodeType":"FunctionDefinition","parameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"to","nameLocation":"14820:2:5","nodeType":"VariableDeclaration","scope":1793,"src":"14812:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:5","nodeType":"VariableDeclaration","scope":1793,"src":"14824:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1734,"mutability":"mutable","name":"auth","nameLocation":"14849:4:5","nodeType":"VariableDeclaration","scope":1793,"src":"14841:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1733,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1736,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:5","nodeType":"VariableDeclaration","scope":1793,"src":"14855:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1735,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:5"},"returnParameters":{"id":1738,"nodeType":"ParameterList","parameters":[],"src":"14888:0:5"},"scope":1860,"src":"14794:662:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1829,"nodeType":"Block","src":"15758:219:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1803,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"15772:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1804,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:5","typeDescriptions":{}}},"id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1814,"nodeType":"IfStatement","src":"15768:91:5","trueBody":{"id":1813,"nodeType":"Block","src":"15796:63:5","statements":[{"errorCall":{"arguments":[{"id":1810,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"15839:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1809,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"15817:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1812,"nodeType":"RevertStatement","src":"15810:38:5"}]}},{"expression":{"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1815,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"15868:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1818,"indexExpression":{"id":1816,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"15887:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1819,"indexExpression":{"id":1817,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"15894:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1820,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"15906:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1822,"nodeType":"ExpressionStatement","src":"15868:46:5"},{"eventCall":{"arguments":[{"id":1824,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"15944:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1825,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"15951:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1826,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"15961:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1823,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"15929:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1828,"nodeType":"EmitStatement","src":"15924:46:5"}]},"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"15462:198:5","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1830,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:5","nodeType":"FunctionDefinition","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"owner","nameLocation":"15701:5:5","nodeType":"VariableDeclaration","scope":1830,"src":"15693:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"operator","nameLocation":"15716:8:5","nodeType":"VariableDeclaration","scope":1830,"src":"15708:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1797,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"approved","nameLocation":"15731:8:5","nodeType":"VariableDeclaration","scope":1830,"src":"15726:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1799,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:5"},"returnParameters":{"id":1802,"nodeType":"ParameterList","parameters":[],"src":"15758:0:5"},"scope":1860,"src":"15665:312:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1858,"nodeType":"Block","src":"16284:169:5","statements":[{"assignments":[1839],"declarations":[{"constant":false,"id":1839,"mutability":"mutable","name":"owner","nameLocation":"16302:5:5","nodeType":"VariableDeclaration","scope":1858,"src":"16294:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1838,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1843,"initialValue":{"arguments":[{"id":1841,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"16319:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1840,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"16310:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1844,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"16341:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1845,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:5","typeDescriptions":{}}},"id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1855,"nodeType":"IfStatement","src":"16337:88:5","trueBody":{"id":1854,"nodeType":"Block","src":"16362:63:5","statements":[{"errorCall":{"arguments":[{"id":1851,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"16406:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1850,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"16383:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1853,"nodeType":"RevertStatement","src":"16376:38:5"}]}},{"expression":{"id":1856,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"16441:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1837,"id":1857,"nodeType":"Return","src":"16434:12:5"}]},"documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"15983:224:5","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1859,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:5","nodeType":"FunctionDefinition","parameters":{"id":1834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1833,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:5","nodeType":"VariableDeclaration","scope":1859,"src":"16235:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1832,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:5"},"returnParameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1859,"src":"16275:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:5"},"scope":1860,"src":"16212:241:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1861,"src":"775:15680:5","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[1876,1885,1894]}],"src":"107:16349:5"},"id":5},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3689],"IERC721":[1977]},"id":1978,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1862,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1864,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1978,"sourceUnit":3690,"src":"134:62:6","symbolAliases":[{"foreign":{"id":1863,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"142:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1866,"name":"IERC165","nameLocations":["288:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":3689,"src":"288:7:6"},"id":1867,"nodeType":"InheritanceSpecifier","src":"288:7:6"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1865,"nodeType":"StructuredDocumentation","src":"198:68:6","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1977,"linearizedBaseContracts":[1977,3689],"name":"IERC721","nameLocation":"277:7:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"302:88:6","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1876,"name":"Transfer","nameLocation":"401:8:6","nodeType":"EventDefinition","parameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:6","nodeType":"VariableDeclaration","scope":1876,"src":"410:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1869,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1872,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:6","nodeType":"VariableDeclaration","scope":1876,"src":"432:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1871,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1874,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:6","nodeType":"VariableDeclaration","scope":1876,"src":"452:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:6"},"src":"395:82:6"},{"anonymous":false,"documentation":{"id":1877,"nodeType":"StructuredDocumentation","src":"483:94:6","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1885,"name":"Approval","nameLocation":"588:8:6","nodeType":"EventDefinition","parameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:6","nodeType":"VariableDeclaration","scope":1885,"src":"597:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1881,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:6","nodeType":"VariableDeclaration","scope":1885,"src":"620:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1883,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:6","nodeType":"VariableDeclaration","scope":1885,"src":"646:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:6"},"src":"582:89:6"},{"anonymous":false,"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"677:117:6","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1894,"name":"ApprovalForAll","nameLocation":"805:14:6","nodeType":"EventDefinition","parameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:6","nodeType":"VariableDeclaration","scope":1894,"src":"820:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1887,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1890,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:6","nodeType":"VariableDeclaration","scope":1894,"src":"843:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1889,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1892,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:6","nodeType":"VariableDeclaration","scope":1894,"src":"869:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1891,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:6"},"src":"799:85:6"},{"documentation":{"id":1895,"nodeType":"StructuredDocumentation","src":"890:76:6","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1902,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:6","nodeType":"FunctionDefinition","parameters":{"id":1898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"mutability":"mutable","name":"owner","nameLocation":"998:5:6","nodeType":"VariableDeclaration","scope":1902,"src":"990:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1896,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:6"},"returnParameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"balance","nameLocation":"1036:7:6","nodeType":"VariableDeclaration","scope":1902,"src":"1028:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:6"},"scope":1977,"src":"971:74:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1903,"nodeType":"StructuredDocumentation","src":"1051:131:6","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1910,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:6","nodeType":"FunctionDefinition","parameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:6","nodeType":"VariableDeclaration","scope":1910,"src":"1204:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1904,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:6"},"returnParameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1908,"mutability":"mutable","name":"owner","nameLocation":"1252:5:6","nodeType":"VariableDeclaration","scope":1910,"src":"1244:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1907,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:6"},"scope":1977,"src":"1187:72:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1911,"nodeType":"StructuredDocumentation","src":"1265:565:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1922,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:6","nodeType":"FunctionDefinition","parameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"from","nameLocation":"1869:4:6","nodeType":"VariableDeclaration","scope":1922,"src":"1861:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1912,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1915,"mutability":"mutable","name":"to","nameLocation":"1883:2:6","nodeType":"VariableDeclaration","scope":1922,"src":"1875:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1914,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1917,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:6","nodeType":"VariableDeclaration","scope":1922,"src":"1887:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1919,"mutability":"mutable","name":"data","nameLocation":"1919:4:6","nodeType":"VariableDeclaration","scope":1922,"src":"1904:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1918,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:6"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[],"src":"1933:0:6"},"scope":1977,"src":"1835:99:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1923,"nodeType":"StructuredDocumentation","src":"1940:706:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1932,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:6","nodeType":"FunctionDefinition","parameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"from","nameLocation":"2685:4:6","nodeType":"VariableDeclaration","scope":1932,"src":"2677:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1924,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"to","nameLocation":"2699:2:6","nodeType":"VariableDeclaration","scope":1932,"src":"2691:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1926,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:6","nodeType":"VariableDeclaration","scope":1932,"src":"2703:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:6"},"returnParameters":{"id":1931,"nodeType":"ParameterList","parameters":[],"src":"2728:0:6"},"scope":1977,"src":"2651:78:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"2735:733:6","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1942,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:6","nodeType":"FunctionDefinition","parameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"from","nameLocation":"3503:4:6","nodeType":"VariableDeclaration","scope":1942,"src":"3495:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1934,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1937,"mutability":"mutable","name":"to","nameLocation":"3517:2:6","nodeType":"VariableDeclaration","scope":1942,"src":"3509:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1936,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1939,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:6","nodeType":"VariableDeclaration","scope":1942,"src":"3521:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:6"},"returnParameters":{"id":1941,"nodeType":"ParameterList","parameters":[],"src":"3546:0:6"},"scope":1977,"src":"3473:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"3553:452:6","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1950,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:6","nodeType":"FunctionDefinition","parameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"to","nameLocation":"4035:2:6","nodeType":"VariableDeclaration","scope":1950,"src":"4027:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1944,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1947,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:6","nodeType":"VariableDeclaration","scope":1950,"src":"4039:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1946,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:6"},"returnParameters":{"id":1949,"nodeType":"ParameterList","parameters":[],"src":"4064:0:6"},"scope":1977,"src":"4010:55:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1951,"nodeType":"StructuredDocumentation","src":"4071:315:6","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1958,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:6","nodeType":"FunctionDefinition","parameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1953,"mutability":"mutable","name":"operator","nameLocation":"4426:8:6","nodeType":"VariableDeclaration","scope":1958,"src":"4418:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1952,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1955,"mutability":"mutable","name":"approved","nameLocation":"4441:8:6","nodeType":"VariableDeclaration","scope":1958,"src":"4436:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1954,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:6"},"returnParameters":{"id":1957,"nodeType":"ParameterList","parameters":[],"src":"4459:0:6"},"scope":1977,"src":"4391:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1959,"nodeType":"StructuredDocumentation","src":"4466:139:6","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1966,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:6","nodeType":"FunctionDefinition","parameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:6","nodeType":"VariableDeclaration","scope":1966,"src":"4631:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:6"},"returnParameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1964,"mutability":"mutable","name":"operator","nameLocation":"4679:8:6","nodeType":"VariableDeclaration","scope":1966,"src":"4671:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1963,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:6"},"scope":1977,"src":"4610:79:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1967,"nodeType":"StructuredDocumentation","src":"4695:138:6","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1976,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:6","nodeType":"FunctionDefinition","parameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"owner","nameLocation":"4872:5:6","nodeType":"VariableDeclaration","scope":1976,"src":"4864:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1968,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"operator","nameLocation":"4887:8:6","nodeType":"VariableDeclaration","scope":1976,"src":"4879:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1970,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:6"},"returnParameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1976,"src":"4920:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1973,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:6"},"scope":1977,"src":"4838:88:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1978,"src":"267:4661:6","usedErrors":[],"usedEvents":[1876,1885,1894]}],"src":"108:4821:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1995]},"id":1996,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1979,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1980,"nodeType":"StructuredDocumentation","src":"142:154:7","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1995,"linearizedBaseContracts":[1995],"name":"IERC721Receiver","nameLocation":"307:15:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1981,"nodeType":"StructuredDocumentation","src":"329:500:7","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1994,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:7","nodeType":"FunctionDefinition","parameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"operator","nameLocation":"877:8:7","nodeType":"VariableDeclaration","scope":1994,"src":"869:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1982,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1985,"mutability":"mutable","name":"from","nameLocation":"903:4:7","nodeType":"VariableDeclaration","scope":1994,"src":"895:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:7","nodeType":"VariableDeclaration","scope":1994,"src":"917:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1989,"mutability":"mutable","name":"data","nameLocation":"957:4:7","nodeType":"VariableDeclaration","scope":1994,"src":"942:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1988,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:7"},"returnParameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1994,"src":"986:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1991,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:7"},"scope":1995,"src":"834:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1996,"src":"297:699:7","usedErrors":[],"usedEvents":[]}],"src":"116:881:7"},"id":7},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1977],"IERC721Metadata":[2023]},"id":2024,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1997,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1999,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2024,"sourceUnit":1978,"src":"153:39:8","symbolAliases":[{"foreign":{"id":1998,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"161:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2001,"name":"IERC721","nameLocations":["357:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1977,"src":"357:7:8"},"id":2002,"nodeType":"InheritanceSpecifier","src":"357:7:8"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2000,"nodeType":"StructuredDocumentation","src":"194:133:8","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2023,"linearizedBaseContracts":[2023,1977,3689],"name":"IERC721Metadata","nameLocation":"338:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2003,"nodeType":"StructuredDocumentation","src":"371:58:8","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2008,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:8","nodeType":"FunctionDefinition","parameters":{"id":2004,"nodeType":"ParameterList","parameters":[],"src":"447:2:8"},"returnParameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2008,"src":"473:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2005,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:8"},"scope":2023,"src":"434:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2009,"nodeType":"StructuredDocumentation","src":"494:60:8","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2014,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:8","nodeType":"FunctionDefinition","parameters":{"id":2010,"nodeType":"ParameterList","parameters":[],"src":"574:2:8"},"returnParameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2014,"src":"600:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2011,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:8"},"scope":2023,"src":"559:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2015,"nodeType":"StructuredDocumentation","src":"621:90:8","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2022,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:8","nodeType":"FunctionDefinition","parameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:8","nodeType":"VariableDeclaration","scope":2022,"src":"734:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2016,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:8"},"returnParameters":{"id":2021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2022,"src":"774:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2019,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:8"},"scope":2023,"src":"716:73:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2024,"src":"328:463:8","usedErrors":[],"usedEvents":[1876,1885,1894]}],"src":"127:665:8"},"id":8},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[2100],"IERC721Errors":[237],"IERC721Receiver":[1995]},"id":2101,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2025,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":2027,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2101,"sourceUnit":1996,"src":"144:55:9","symbolAliases":[{"foreign":{"id":2026,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"152:15:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2029,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2101,"sourceUnit":285,"src":"200:69:9","symbolAliases":[{"foreign":{"id":2028,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"208:13:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"271:159:9","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":2100,"linearizedBaseContracts":[2100],"name":"ERC721Utils","nameLocation":"439:11:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":2098,"nodeType":"Block","src":"1159:758:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2044,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"1173:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:9","memberName":"code","nodeType":"MemberAccess","src":"1173:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:9","memberName":"length","nodeType":"MemberAccess","src":"1173:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2097,"nodeType":"IfStatement","src":"1169:742:9","trueBody":{"id":2096,"nodeType":"Block","src":"1193:718:9","statements":[{"clauses":[{"block":{"id":2074,"nodeType":"Block","src":"1303:214:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2061,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"1325:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2062,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"1335:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1995_$","typeString":"type(contract IERC721Receiver)"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:9","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"1335:32:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:9","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2073,"nodeType":"IfStatement","src":"1321:182:9","trueBody":{"id":2072,"nodeType":"Block","src":"1378:125:9","statements":[{"errorCall":{"arguments":[{"id":2069,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"1481:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2066,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1445:13:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:9","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1445:35:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2071,"nodeType":"RevertStatement","src":"1438:46:9"}]}}]},"errorName":"","id":2075,"nodeType":"TryCatchClause","parameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"retval","nameLocation":"1295:6:9","nodeType":"VariableDeclaration","scope":2075,"src":"1288:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2058,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:9"},"src":"1279:238:9"},{"block":{"id":2093,"nodeType":"Block","src":"1546:355:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2079,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"1568:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:9","memberName":"length","nodeType":"MemberAccess","src":"1568:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2091,"nodeType":"Block","src":"1736:151:9","statements":[{"AST":{"nodeType":"YulBlock","src":"1783:86:9","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1820:2:9","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1824:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1816:3:9"},"nodeType":"YulFunctionCall","src":"1816:15:9"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1839:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1833:5:9"},"nodeType":"YulFunctionCall","src":"1833:13:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1809:6:9"},"nodeType":"YulFunctionCall","src":"1809:38:9"},"nodeType":"YulExpressionStatement","src":"1809:38:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":2077,"isOffset":false,"isSlot":false,"src":"1824:6:9","valueSize":1},{"declaration":2077,"isOffset":false,"isSlot":false,"src":"1839:6:9","valueSize":1}],"flags":["memory-safe"],"id":2090,"nodeType":"InlineAssembly","src":"1758:111:9"}]},"id":2092,"nodeType":"IfStatement","src":"1564:323:9","trueBody":{"id":2089,"nodeType":"Block","src":"1588:142:9","statements":[{"errorCall":{"arguments":[{"id":2086,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"1708:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2083,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1672:13:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:9","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1672:35:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2088,"nodeType":"RevertStatement","src":"1665:46:9"}]}}]},"errorName":"","id":2094,"nodeType":"TryCatchClause","parameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"reason","nameLocation":"1538:6:9","nodeType":"VariableDeclaration","scope":2094,"src":"1525:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2076,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:9"},"src":"1518:383:9"}],"externalCall":{"arguments":[{"id":2053,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1248:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2054,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"1258:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2055,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"1264:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2056,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"1273:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2050,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"1227:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2049,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"1211:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1995_$","typeString":"type(contract IERC721Receiver)"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1995","typeString":"contract IERC721Receiver"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:9","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"1211:36:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2095,"nodeType":"TryStatement","src":"1207:694:9"}]}}]},"documentation":{"id":2031,"nodeType":"StructuredDocumentation","src":"457:531:9","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":2099,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:9","nodeType":"FunctionDefinition","parameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"operator","nameLocation":"1041:8:9","nodeType":"VariableDeclaration","scope":2099,"src":"1033:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2032,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2035,"mutability":"mutable","name":"from","nameLocation":"1067:4:9","nodeType":"VariableDeclaration","scope":2099,"src":"1059:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2034,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2037,"mutability":"mutable","name":"to","nameLocation":"1089:2:9","nodeType":"VariableDeclaration","scope":2099,"src":"1081:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2036,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2039,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:9","nodeType":"VariableDeclaration","scope":2099,"src":"1101:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2041,"mutability":"mutable","name":"data","nameLocation":"1139:4:9","nodeType":"VariableDeclaration","scope":2099,"src":"1126:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2040,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:9"},"returnParameters":{"id":2043,"nodeType":"ParameterList","parameters":[],"src":"1159:0:9"},"scope":2100,"src":"993:924:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2101,"src":"431:1488:9","usedErrors":[],"usedEvents":[]}],"src":"118:1802:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2130]},"id":2131,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2102,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2103,"nodeType":"StructuredDocumentation","src":"127:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2130,"linearizedBaseContracts":[2130],"name":"Context","nameLocation":"642:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2111,"nodeType":"Block","src":"718:34:10","statements":[{"expression":{"expression":{"id":2108,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:10","memberName":"sender","nodeType":"MemberAccess","src":"735:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2107,"id":2110,"nodeType":"Return","src":"728:17:10"}]},"id":2112,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:10","nodeType":"FunctionDefinition","parameters":{"id":2104,"nodeType":"ParameterList","parameters":[],"src":"675:2:10"},"returnParameters":{"id":2107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2112,"src":"709:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2105,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:10"},"scope":2130,"src":"656:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2120,"nodeType":"Block","src":"825:32:10","statements":[{"expression":{"expression":{"id":2117,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:10","memberName":"data","nodeType":"MemberAccess","src":"842:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2116,"id":2119,"nodeType":"Return","src":"835:15:10"}]},"id":2121,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:10","nodeType":"FunctionDefinition","parameters":{"id":2113,"nodeType":"ParameterList","parameters":[],"src":"775:2:10"},"returnParameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2121,"src":"809:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2114,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:10"},"scope":2130,"src":"758:99:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2128,"nodeType":"Block","src":"935:25:10","statements":[{"expression":{"hexValue":"30","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2125,"id":2127,"nodeType":"Return","src":"945:8:10"}]},"id":2129,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:10","nodeType":"FunctionDefinition","parameters":{"id":2122,"nodeType":"ParameterList","parameters":[],"src":"892:2:10"},"returnParameters":{"id":2125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2129,"src":"926:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:10"},"scope":2130,"src":"863:97:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2131,"src":"624:338:10","usedErrors":[],"usedEvents":[]}],"src":"101:862:10"},"id":10},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2182]},"id":2183,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2132,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2133,"nodeType":"StructuredDocumentation","src":"125:489:11","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2182,"linearizedBaseContracts":[2182],"name":"Panic","nameLocation":"665:5:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2134,"nodeType":"StructuredDocumentation","src":"677:36:11","text":"@dev generic / unspecified error"},"id":2137,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:11","nodeType":"VariableDeclaration","scope":2182,"src":"718:40:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2135,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2138,"nodeType":"StructuredDocumentation","src":"764:37:11","text":"@dev used by the assert() builtin"},"id":2141,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:11","nodeType":"VariableDeclaration","scope":2182,"src":"806:39:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2142,"nodeType":"StructuredDocumentation","src":"851:41:11","text":"@dev arithmetic underflow or overflow"},"id":2145,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:11","nodeType":"VariableDeclaration","scope":2182,"src":"897:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2143,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:11","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2146,"nodeType":"StructuredDocumentation","src":"950:35:11","text":"@dev division or modulo by zero"},"id":2149,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:11","nodeType":"VariableDeclaration","scope":2182,"src":"990:49:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2147,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:11","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"1045:30:11","text":"@dev enum conversion error"},"id":2153,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:11","nodeType":"VariableDeclaration","scope":2182,"src":"1080:54:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:11","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"1140:36:11","text":"@dev invalid encoding in storage"},"id":2157,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:11","nodeType":"VariableDeclaration","scope":2182,"src":"1181:55:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:11","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2158,"nodeType":"StructuredDocumentation","src":"1242:24:11","text":"@dev empty array pop"},"id":2161,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:11","nodeType":"VariableDeclaration","scope":2182,"src":"1271:48:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2159,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:11","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2162,"nodeType":"StructuredDocumentation","src":"1325:35:11","text":"@dev array out of bounds access"},"id":2165,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:11","nodeType":"VariableDeclaration","scope":2182,"src":"1365:52:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:11","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2166,"nodeType":"StructuredDocumentation","src":"1423:65:11","text":"@dev resource error (too large allocation or too large array)"},"id":2169,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:11","nodeType":"VariableDeclaration","scope":2182,"src":"1493:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:11","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2170,"nodeType":"StructuredDocumentation","src":"1546:42:11","text":"@dev calling invalid internal function"},"id":2173,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:11","nodeType":"VariableDeclaration","scope":2182,"src":"1593:58:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:11","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2180,"nodeType":"Block","src":"1819:151:11","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:11"},"nodeType":"YulFunctionCall","src":"1868:24:11"},"nodeType":"YulExpressionStatement","src":"1868:24:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:11","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:11"},"nodeType":"YulFunctionCall","src":"1905:18:11"},"nodeType":"YulExpressionStatement","src":"1905:18:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:11","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:11"},"nodeType":"YulFunctionCall","src":"1936:18:11"},"nodeType":"YulExpressionStatement","src":"1936:18:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":2176,"isOffset":false,"isSlot":false,"src":"1918:4:11","valueSize":1}],"flags":["memory-safe"],"id":2179,"nodeType":"InlineAssembly","src":"1829:135:11"}]},"documentation":{"id":2174,"nodeType":"StructuredDocumentation","src":"1658:113:11","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2181,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:11","nodeType":"FunctionDefinition","parameters":{"id":2177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"code","nameLocation":"1799:4:11","nodeType":"VariableDeclaration","scope":2181,"src":"1791:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:11"},"returnParameters":{"id":2178,"nodeType":"ParameterList","parameters":[],"src":"1819:0:11"},"scope":2182,"src":"1776:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2183,"src":"657:1315:11","usedErrors":[],"usedEvents":[]}],"src":"99:1874:11"},"id":11},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2251]},"id":2252,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2184,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2185,"nodeType":"StructuredDocumentation","src":"135:894:12","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2251,"linearizedBaseContracts":[2251],"name":"ReentrancyGuard","nameLocation":"1048:15:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2188,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:12","nodeType":"VariableDeclaration","scope":2251,"src":"1818:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2186,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2191,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:12","nodeType":"VariableDeclaration","scope":2251,"src":"1864:36:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2189,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2193,"mutability":"mutable","name":"_status","nameLocation":"1923:7:12","nodeType":"VariableDeclaration","scope":2251,"src":"1907:23:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":2194,"nodeType":"StructuredDocumentation","src":"1937:52:12","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2196,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:12","nodeType":"ErrorDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[],"src":"2028:2:12"},"src":"1994:37:12"},{"body":{"id":2203,"nodeType":"Block","src":"2051:38:12","statements":[{"expression":{"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2199,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"2061:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2200,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"2071:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2202,"nodeType":"ExpressionStatement","src":"2061:21:12"}]},"id":2204,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2197,"nodeType":"ParameterList","parameters":[],"src":"2048:2:12"},"returnParameters":{"id":2198,"nodeType":"ParameterList","parameters":[],"src":"2051:0:12"},"scope":2251,"src":"2037:52:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2214,"nodeType":"Block","src":"2490:79:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2207,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"2500:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2209,"nodeType":"ExpressionStatement","src":"2500:21:12"},{"id":2210,"nodeType":"PlaceholderStatement","src":"2531:1:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2211,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"2542:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2213,"nodeType":"ExpressionStatement","src":"2542:20:12"}]},"documentation":{"id":2205,"nodeType":"StructuredDocumentation","src":"2095:366:12","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2215,"name":"nonReentrant","nameLocation":"2475:12:12","nodeType":"ModifierDefinition","parameters":{"id":2206,"nodeType":"ParameterList","parameters":[],"src":"2487:2:12"},"src":"2466:103:12","virtual":false,"visibility":"internal"},{"body":{"id":2230,"nodeType":"Block","src":"2614:268:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2218,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"2702:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2219,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"2713:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2225,"nodeType":"IfStatement","src":"2698:86:12","trueBody":{"id":2224,"nodeType":"Block","src":"2722:62:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2221,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"2743:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2223,"nodeType":"RevertStatement","src":"2736:37:12"}]}},{"expression":{"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2226,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"2858:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2227,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"2868:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2229,"nodeType":"ExpressionStatement","src":"2858:17:12"}]},"id":2231,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:12","nodeType":"FunctionDefinition","parameters":{"id":2216,"nodeType":"ParameterList","parameters":[],"src":"2603:2:12"},"returnParameters":{"id":2217,"nodeType":"ParameterList","parameters":[],"src":"2614:0:12"},"scope":2251,"src":"2575:307:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2238,"nodeType":"Block","src":"2926:170:12","statements":[{"expression":{"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2234,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"3068:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2235,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"3078:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2237,"nodeType":"ExpressionStatement","src":"3068:21:12"}]},"id":2239,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:12","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[],"src":"2915:2:12"},"returnParameters":{"id":2233,"nodeType":"ParameterList","parameters":[],"src":"2926:0:12"},"scope":2251,"src":"2888:208:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2249,"nodeType":"Block","src":"3339:42:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2245,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"3356:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2246,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"3367:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2244,"id":2248,"nodeType":"Return","src":"3349:25:12"}]},"documentation":{"id":2240,"nodeType":"StructuredDocumentation","src":"3102:168:12","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2250,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:12","nodeType":"FunctionDefinition","parameters":{"id":2241,"nodeType":"ParameterList","parameters":[],"src":"3307:2:12"},"returnParameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2250,"src":"3333:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2242,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:12"},"scope":2251,"src":"3275:106:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2252,"src":"1030:2353:12","usedErrors":[2196],"usedEvents":[]}],"src":"109:3275:12"},"id":12},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5310],"SafeCast":[7075],"SignedMath":[7219],"Strings":[3653]},"id":3654,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2253,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2255,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3654,"sourceUnit":5311,"src":"127:37:13","symbolAliases":[{"foreign":{"id":2254,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"135:4:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2257,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3654,"sourceUnit":7076,"src":"165:45:13","symbolAliases":[{"foreign":{"id":2256,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"173:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2259,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3654,"sourceUnit":7220,"src":"211:49:13","symbolAliases":[{"foreign":{"id":2258,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"219:10:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2260,"nodeType":"StructuredDocumentation","src":"262:34:13","text":" @dev String operations."},"fullyImplemented":true,"id":3653,"linearizedBaseContracts":[3653],"name":"Strings","nameLocation":"305:7:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2262,"libraryName":{"id":2261,"name":"SafeCast","nameLocations":["325:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":7075,"src":"325:8:13"},"nodeType":"UsingForDirective","src":"319:21:13"},{"constant":true,"id":2265,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:13","nodeType":"VariableDeclaration","scope":3653,"src":"346:56:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2263,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2268,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:13","nodeType":"VariableDeclaration","scope":3653,"src":"408:42:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2266,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:13","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2304,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:13","nodeType":"VariableDeclaration","scope":3653,"src":"456:302:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:13","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:13","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2277,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:13","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:13","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:13","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:13","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:13","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:13","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:13","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2287,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:13","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:13","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:13","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:13","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2292,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:13","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:13","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:13","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:13","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2297,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:13","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:13","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:13","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:13","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:13","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:13","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2305,"nodeType":"StructuredDocumentation","src":"778:81:13","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2311,"name":"StringsInsufficientHexLength","nameLocation":"870:28:13","nodeType":"ErrorDefinition","parameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"value","nameLocation":"907:5:13","nodeType":"VariableDeclaration","scope":2311,"src":"899:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2306,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2309,"mutability":"mutable","name":"length","nameLocation":"922:6:13","nodeType":"VariableDeclaration","scope":2311,"src":"914:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:13"},"src":"864:66:13"},{"documentation":{"id":2312,"nodeType":"StructuredDocumentation","src":"936:108:13","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2314,"name":"StringsInvalidChar","nameLocation":"1055:18:13","nodeType":"ErrorDefinition","parameters":{"id":2313,"nodeType":"ParameterList","parameters":[],"src":"1073:2:13"},"src":"1049:27:13"},{"documentation":{"id":2315,"nodeType":"StructuredDocumentation","src":"1082:84:13","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2317,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:13","nodeType":"ErrorDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[],"src":"1204:2:13"},"src":"1171:36:13"},{"body":{"id":2364,"nodeType":"Block","src":"1379:561:13","statements":[{"id":2363,"nodeType":"UncheckedBlock","src":"1389:545:13","statements":[{"assignments":[2326],"declarations":[{"constant":false,"id":2326,"mutability":"mutable","name":"length","nameLocation":"1421:6:13","nodeType":"VariableDeclaration","scope":2363,"src":"1413:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2333,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"1441:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2327,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"1430:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5310_$","typeString":"type(library Math)"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:13","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5142,"src":"1430:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:13"},{"assignments":[2335],"declarations":[{"constant":false,"id":2335,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:13","nodeType":"VariableDeclaration","scope":2363,"src":"1465:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2334,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2340,"initialValue":{"arguments":[{"id":2338,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"1499:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2336,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:13"},{"assignments":[2342],"declarations":[{"constant":false,"id":2342,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:13","nodeType":"VariableDeclaration","scope":2363,"src":"1520:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2341,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2343,"nodeType":"VariableDeclarationStatement","src":"1520:11:13"},{"AST":{"nodeType":"YulBlock","src":"1570:67:13","statements":[{"nodeType":"YulAssignment","src":"1588:35:13","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1599:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1611:2:13","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1615:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1607:3:13"},"nodeType":"YulFunctionCall","src":"1607:15:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:13"},"nodeType":"YulFunctionCall","src":"1595:28:13"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2335,"isOffset":false,"isSlot":false,"src":"1599:6:13","valueSize":1},{"declaration":2326,"isOffset":false,"isSlot":false,"src":"1615:6:13","valueSize":1},{"declaration":2342,"isOffset":false,"isSlot":false,"src":"1588:3:13","valueSize":1}],"flags":["memory-safe"],"id":2344,"nodeType":"InlineAssembly","src":"1545:92:13"},{"body":{"id":2359,"nodeType":"Block","src":"1663:234:13","statements":[{"expression":{"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:13","subExpression":{"id":2346,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"1681:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2348,"nodeType":"ExpressionStatement","src":"1681:5:13"},{"AST":{"nodeType":"YulBlock","src":"1729:86:13","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1759:3:13"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1780:2:13","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1769:3:13"},"nodeType":"YulFunctionCall","src":"1769:14:13"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1785:10:13"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1764:4:13"},"nodeType":"YulFunctionCall","src":"1764:32:13"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1751:7:13"},"nodeType":"YulFunctionCall","src":"1751:46:13"},"nodeType":"YulExpressionStatement","src":"1751:46:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":2265,"isOffset":false,"isSlot":false,"src":"1785:10:13","valueSize":1},{"declaration":2342,"isOffset":false,"isSlot":false,"src":"1759:3:13","valueSize":1},{"declaration":2320,"isOffset":false,"isSlot":false,"src":"1773:5:13","valueSize":1}],"flags":["memory-safe"],"id":2349,"nodeType":"InlineAssembly","src":"1704:111:13"},{"expression":{"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"1832:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2353,"nodeType":"ExpressionStatement","src":"1832:11:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"1865:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2358,"nodeType":"IfStatement","src":"1861:21:13","trueBody":{"id":2357,"nodeType":"Break","src":"1877:5:13"}}]},"condition":{"hexValue":"74727565","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2360,"nodeType":"WhileStatement","src":"1650:247:13"},{"expression":{"id":2361,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"1917:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2324,"id":2362,"nodeType":"Return","src":"1910:13:13"}]}]},"documentation":{"id":2318,"nodeType":"StructuredDocumentation","src":"1213:90:13","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2365,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:13","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"value","nameLocation":"1334:5:13","nodeType":"VariableDeclaration","scope":2365,"src":"1326:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2319,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:13"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2365,"src":"1364:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2322,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:13"},"scope":3653,"src":"1308:632:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2390,"nodeType":"Block","src":"2116:92:13","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"2147:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:13","trueExpression":{"hexValue":"2d","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"2193:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2383,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"2178:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7219_$","typeString":"type(library SignedMath)"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:13","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7218,"src":"2178:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2382,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"2169:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2373,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:13","typeDescriptions":{}}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:13","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:13","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2372,"id":2389,"nodeType":"Return","src":"2126:75:13"}]},"documentation":{"id":2366,"nodeType":"StructuredDocumentation","src":"1946:89:13","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2391,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:13","nodeType":"FunctionDefinition","parameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"value","nameLocation":"2071:5:13","nodeType":"VariableDeclaration","scope":2391,"src":"2064:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2367,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:13"},"returnParameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2391,"src":"2101:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2370,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:13"},"scope":3653,"src":"2040:168:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2410,"nodeType":"Block","src":"2387:100:13","statements":[{"id":2409,"nodeType":"UncheckedBlock","src":"2397:84:13","statements":[{"expression":{"arguments":[{"id":2400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"2440:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"2459:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2401,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"2447:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5310_$","typeString":"type(library Math)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:13","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5253,"src":"2447:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2399,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2411,2494,2514],"referencedDeclaration":2494,"src":"2428:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2398,"id":2408,"nodeType":"Return","src":"2421:49:13"}]}]},"documentation":{"id":2392,"nodeType":"StructuredDocumentation","src":"2214:94:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2411,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:13","nodeType":"FunctionDefinition","parameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"value","nameLocation":"2342:5:13","nodeType":"VariableDeclaration","scope":2411,"src":"2334:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2393,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:13"},"returnParameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2411,"src":"2372:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2396,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:13"},"scope":3653,"src":"2313:174:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2493,"nodeType":"Block","src":"2700:435:13","statements":[{"assignments":[2422],"declarations":[{"constant":false,"id":2422,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:13","nodeType":"VariableDeclaration","scope":2493,"src":"2710:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2424,"initialValue":{"id":2423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"2731:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:13"},{"assignments":[2426],"declarations":[{"constant":false,"id":2426,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:13","nodeType":"VariableDeclaration","scope":2493,"src":"2746:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2425,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2435,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2430,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"2782:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2427,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:13"},{"expression":{"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2436,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"2803:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2438,"indexExpression":{"hexValue":"30","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2441,"nodeType":"ExpressionStatement","src":"2803:15:13"},{"expression":{"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2442,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"2828:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2444,"indexExpression":{"hexValue":"31","id":2443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2447,"nodeType":"ExpressionStatement","src":"2828:15:13"},{"body":{"id":2476,"nodeType":"Block","src":"2898:95:13","statements":[{"expression":{"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2462,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"2912:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2464,"indexExpression":{"id":2463,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"2919:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2465,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"2924:10:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2469,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2466,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"2935:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2471,"nodeType":"ExpressionStatement","src":"2912:40:13"},{"expression":{"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2472,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"2966:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2475,"nodeType":"ExpressionStatement","src":"2966:16:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2456,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"2886:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2477,"initializationExpression":{"assignments":[2449],"declarations":[{"constant":false,"id":2449,"mutability":"mutable","name":"i","nameLocation":"2866:1:13","nodeType":"VariableDeclaration","scope":2477,"src":"2858:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2448,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2455,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2451,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"2874:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:13"},"loopExpression":{"expression":{"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:13","subExpression":{"id":2459,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"2895:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2461,"nodeType":"ExpressionStatement","src":"2893:3:13"},"nodeType":"ForStatement","src":"2853:140:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2478,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"3006:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2487,"nodeType":"IfStatement","src":"3002:96:13","trueBody":{"id":2486,"nodeType":"Block","src":"3023:75:13","statements":[{"errorCall":{"arguments":[{"id":2482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"3073:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2483,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"3080:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2481,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"3044:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2485,"nodeType":"RevertStatement","src":"3037:50:13"}]}},{"expression":{"arguments":[{"id":2490,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"3121:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2488,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:13","typeDescriptions":{}}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2420,"id":2492,"nodeType":"Return","src":"3107:21:13"}]},"documentation":{"id":2412,"nodeType":"StructuredDocumentation","src":"2493:112:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2494,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:13","nodeType":"FunctionDefinition","parameters":{"id":2417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"value","nameLocation":"2639:5:13","nodeType":"VariableDeclaration","scope":2494,"src":"2631:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2413,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2416,"mutability":"mutable","name":"length","nameLocation":"2654:6:13","nodeType":"VariableDeclaration","scope":2494,"src":"2646:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2415,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:13"},"returnParameters":{"id":2420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2494,"src":"2685:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2418,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:13"},"scope":3653,"src":"2610:525:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2513,"nodeType":"Block","src":"3367:75:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2507,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"3412:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2505,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:13","typeDescriptions":{}}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:13","typeDescriptions":{}}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2510,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"3420:14:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2502,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2411,2494,2514],"referencedDeclaration":2494,"src":"3384:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2501,"id":2512,"nodeType":"Return","src":"3377:58:13"}]},"documentation":{"id":2495,"nodeType":"StructuredDocumentation","src":"3141:148:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2514,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:13","nodeType":"FunctionDefinition","parameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"addr","nameLocation":"3323:4:13","nodeType":"VariableDeclaration","scope":2514,"src":"3315:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2496,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:13"},"returnParameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2514,"src":"3352:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2499,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:13"},"scope":3653,"src":"3294:148:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2578,"nodeType":"Block","src":"3699:642:13","statements":[{"assignments":[2523],"declarations":[{"constant":false,"id":2523,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:13","nodeType":"VariableDeclaration","scope":2578,"src":"3709:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2522,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2530,"initialValue":{"arguments":[{"arguments":[{"id":2527,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"3749:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2526,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2411,2494,2514],"referencedDeclaration":2514,"src":"3737:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2524,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:13","typeDescriptions":{}}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:13"},{"assignments":[2532],"declarations":[{"constant":false,"id":2532,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:13","nodeType":"VariableDeclaration","scope":2578,"src":"3840:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2531,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2533,"nodeType":"VariableDeclarationStatement","src":"3840:17:13"},{"AST":{"nodeType":"YulBlock","src":"3892:78:13","statements":[{"nodeType":"YulAssignment","src":"3906:54:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3923:2:13","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3941:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3949:4:13","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:13"},"nodeType":"YulFunctionCall","src":"3937:17:13"},{"kind":"number","nodeType":"YulLiteral","src":"3956:2:13","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3927:9:13"},"nodeType":"YulFunctionCall","src":"3927:32:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3919:3:13"},"nodeType":"YulFunctionCall","src":"3919:41:13"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3906:9:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2523,"isOffset":false,"isSlot":false,"src":"3941:6:13","valueSize":1},{"declaration":2532,"isOffset":false,"isSlot":false,"src":"3906:9:13","valueSize":1}],"flags":["memory-safe"],"id":2534,"nodeType":"InlineAssembly","src":"3867:103:13"},{"body":{"id":2571,"nodeType":"Block","src":"4013:291:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2545,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"4119:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:13","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2552,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"4148:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2554,"indexExpression":{"id":2553,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"4155:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2550,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:13","typeDescriptions":{}}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2566,"nodeType":"IfStatement","src":"4115:150:13","trueBody":{"id":2565,"nodeType":"Block","src":"4165:100:13","statements":[{"expression":{"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2559,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"4233:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2561,"indexExpression":{"id":2560,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"4240:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2564,"nodeType":"ExpressionStatement","src":"4233:17:13"}]}},{"expression":{"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2567,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"4278:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2570,"nodeType":"ExpressionStatement","src":"4278:15:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2539,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"4001:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2572,"initializationExpression":{"assignments":[2536],"declarations":[{"constant":false,"id":2536,"mutability":"mutable","name":"i","nameLocation":"3993:1:13","nodeType":"VariableDeclaration","scope":2572,"src":"3985:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2538,"initialValue":{"hexValue":"3431","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:13","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:13"},"loopExpression":{"expression":{"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:13","subExpression":{"id":2542,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"4010:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2544,"nodeType":"ExpressionStatement","src":"4008:3:13"},"nodeType":"ForStatement","src":"3980:324:13"},{"expression":{"arguments":[{"id":2575,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"4327:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2573,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:13","typeDescriptions":{}}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2521,"id":2577,"nodeType":"Return","src":"4313:21:13"}]},"documentation":{"id":2515,"nodeType":"StructuredDocumentation","src":"3448:165:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2579,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:13","nodeType":"FunctionDefinition","parameters":{"id":2518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2517,"mutability":"mutable","name":"addr","nameLocation":"3655:4:13","nodeType":"VariableDeclaration","scope":2579,"src":"3647:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2516,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:13"},"returnParameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2579,"src":"3684:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2519,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:13"},"scope":3653,"src":"3618:723:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2615,"nodeType":"Block","src":"4496:104:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2591,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"4519:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2589,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:13","typeDescriptions":{}}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:13","memberName":"length","nodeType":"MemberAccess","src":"4513:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2596,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"4538:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2594,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:13","typeDescriptions":{}}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:13","memberName":"length","nodeType":"MemberAccess","src":"4532:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2603,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"4567:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2601,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:13","typeDescriptions":{}}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2600,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2609,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"4590:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2607,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:13","typeDescriptions":{}}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2606,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2588,"id":2614,"nodeType":"Return","src":"4506:87:13"}]},"documentation":{"id":2580,"nodeType":"StructuredDocumentation","src":"4347:66:13","text":" @dev Returns true if the two strings are equal."},"id":2616,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:13","nodeType":"FunctionDefinition","parameters":{"id":2585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"a","nameLocation":"4447:1:13","nodeType":"VariableDeclaration","scope":2616,"src":"4433:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2581,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2584,"mutability":"mutable","name":"b","nameLocation":"4464:1:13","nodeType":"VariableDeclaration","scope":2616,"src":"4450:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2583,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:13"},"returnParameters":{"id":2588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2616,"src":"4490:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2586,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:13"},"scope":3653,"src":"4418:182:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2634,"nodeType":"Block","src":"4897:64:13","statements":[{"expression":{"arguments":[{"id":2625,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"4924:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2629,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"4940:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2627,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:13","typeDescriptions":{}}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:13","memberName":"length","nodeType":"MemberAccess","src":"4934:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2624,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2635,2666],"referencedDeclaration":2666,"src":"4914:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2623,"id":2633,"nodeType":"Return","src":"4907:47:13"}]},"documentation":{"id":2617,"nodeType":"StructuredDocumentation","src":"4606:214:13","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2635,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:13","nodeType":"FunctionDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"input","nameLocation":"4858:5:13","nodeType":"VariableDeclaration","scope":2635,"src":"4844:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2618,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:13"},"returnParameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2635,"src":"4888:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2621,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:13"},"scope":3653,"src":"4825:136:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2665,"nodeType":"Block","src":"5366:153:13","statements":[{"assignments":[2648,2650],"declarations":[{"constant":false,"id":2648,"mutability":"mutable","name":"success","nameLocation":"5382:7:13","nodeType":"VariableDeclaration","scope":2665,"src":"5377:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2647,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2650,"mutability":"mutable","name":"value","nameLocation":"5399:5:13","nodeType":"VariableDeclaration","scope":2665,"src":"5391:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2649,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2656,"initialValue":{"arguments":[{"id":2652,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"5421:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2653,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"5428:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2654,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"5435:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2651,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2687,2724],"referencedDeclaration":2724,"src":"5408:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:13"},{"condition":{"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:13","subExpression":{"id":2657,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"5454:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2662,"nodeType":"IfStatement","src":"5449:41:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2659,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"5470:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2661,"nodeType":"RevertStatement","src":"5463:27:13"}},{"expression":{"id":2663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"5507:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2646,"id":2664,"nodeType":"Return","src":"5500:12:13"}]},"documentation":{"id":2636,"nodeType":"StructuredDocumentation","src":"4967:294:13","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2666,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:13","nodeType":"FunctionDefinition","parameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"input","nameLocation":"5299:5:13","nodeType":"VariableDeclaration","scope":2666,"src":"5285:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2637,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2640,"mutability":"mutable","name":"begin","nameLocation":"5314:5:13","nodeType":"VariableDeclaration","scope":2666,"src":"5306:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2642,"mutability":"mutable","name":"end","nameLocation":"5329:3:13","nodeType":"VariableDeclaration","scope":2666,"src":"5321:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:13"},"returnParameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2666,"src":"5357:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2644,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:13"},"scope":3653,"src":"5266:253:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2686,"nodeType":"Block","src":"5840:83:13","statements":[{"expression":{"arguments":[{"id":2677,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"5886:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2681,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"5902:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2679,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:13","typeDescriptions":{}}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:13","memberName":"length","nodeType":"MemberAccess","src":"5896:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2676,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"5857:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2675,"id":2685,"nodeType":"Return","src":"5850:66:13"}]},"documentation":{"id":2667,"nodeType":"StructuredDocumentation","src":"5525:215:13","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2687,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:13","nodeType":"FunctionDefinition","parameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2669,"mutability":"mutable","name":"input","nameLocation":"5781:5:13","nodeType":"VariableDeclaration","scope":2687,"src":"5767:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2668,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:13"},"returnParameters":{"id":2675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2672,"mutability":"mutable","name":"success","nameLocation":"5816:7:13","nodeType":"VariableDeclaration","scope":2687,"src":"5811:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2671,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2674,"mutability":"mutable","name":"value","nameLocation":"5833:5:13","nodeType":"VariableDeclaration","scope":2687,"src":"5825:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2673,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:13"},"scope":3653,"src":"5745:178:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2723,"nodeType":"Block","src":"6325:144:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2701,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"6339:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2704,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"6351:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2702,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:13","typeDescriptions":{}}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:13","memberName":"length","nodeType":"MemberAccess","src":"6345:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2708,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"6368:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2709,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"6376:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2716,"nodeType":"IfStatement","src":"6335:63:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2714,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2700,"id":2715,"nodeType":"Return","src":"6381:17:13"}},{"expression":{"arguments":[{"id":2718,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"6444:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2719,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"6451:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2720,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"6458:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2717,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"6415:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2700,"id":2722,"nodeType":"Return","src":"6408:54:13"}]},"documentation":{"id":2688,"nodeType":"StructuredDocumentation","src":"5929:238:13","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2724,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:13","nodeType":"FunctionDefinition","parameters":{"id":2695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"input","nameLocation":"6217:5:13","nodeType":"VariableDeclaration","scope":2724,"src":"6203:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2689,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2692,"mutability":"mutable","name":"begin","nameLocation":"6240:5:13","nodeType":"VariableDeclaration","scope":2724,"src":"6232:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2691,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2694,"mutability":"mutable","name":"end","nameLocation":"6263:3:13","nodeType":"VariableDeclaration","scope":2724,"src":"6255:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2693,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:13"},"returnParameters":{"id":2700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2697,"mutability":"mutable","name":"success","nameLocation":"6301:7:13","nodeType":"VariableDeclaration","scope":2724,"src":"6296:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2696,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2699,"mutability":"mutable","name":"value","nameLocation":"6318:5:13","nodeType":"VariableDeclaration","scope":2724,"src":"6310:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2698,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:13"},"scope":3653,"src":"6172:297:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2793,"nodeType":"Block","src":"6872:347:13","statements":[{"assignments":[2739],"declarations":[{"constant":false,"id":2739,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:13","nodeType":"VariableDeclaration","scope":2793,"src":"6882:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2738,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2744,"initialValue":{"arguments":[{"id":2742,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"6910:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2740,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:13","typeDescriptions":{}}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:13"},{"assignments":[2746],"declarations":[{"constant":false,"id":2746,"mutability":"mutable","name":"result","nameLocation":"6935:6:13","nodeType":"VariableDeclaration","scope":2793,"src":"6927:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2745,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2748,"initialValue":{"hexValue":"30","id":2747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:13"},{"body":{"id":2787,"nodeType":"Block","src":"6993:189:13","statements":[{"assignments":[2760],"declarations":[{"constant":false,"id":2760,"mutability":"mutable","name":"chr","nameLocation":"7013:3:13","nodeType":"VariableDeclaration","scope":2787,"src":"7007:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2759,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2770,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2765,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"7062:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2766,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"7070:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2764,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"7039:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2762,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:13","typeDescriptions":{}}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2761,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"7019:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2771,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"7092:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:13","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2778,"nodeType":"IfStatement","src":"7088:30:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2776,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2737,"id":2777,"nodeType":"Return","src":"7101:17:13"}},{"expression":{"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2779,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"7132:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2782,"nodeType":"ExpressionStatement","src":"7132:12:13"},{"expression":{"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"7158:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2784,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"7168:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2786,"nodeType":"ExpressionStatement","src":"7158:13:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2753,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"6979:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2754,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"6983:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2788,"initializationExpression":{"assignments":[2750],"declarations":[{"constant":false,"id":2750,"mutability":"mutable","name":"i","nameLocation":"6968:1:13","nodeType":"VariableDeclaration","scope":2788,"src":"6960:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2749,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2752,"initialValue":{"id":2751,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"6972:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:13"},"loopExpression":{"expression":{"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:13","subExpression":{"id":2756,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"6990:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2758,"nodeType":"ExpressionStatement","src":"6988:3:13"},"nodeType":"ForStatement","src":"6955:227:13"},{"expression":{"components":[{"hexValue":"74727565","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2790,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"7205:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2737,"id":2792,"nodeType":"Return","src":"7191:21:13"}]},"documentation":{"id":2725,"nodeType":"StructuredDocumentation","src":"6475:224:13","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2794,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:13","nodeType":"FunctionDefinition","parameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2727,"mutability":"mutable","name":"input","nameLocation":"6765:5:13","nodeType":"VariableDeclaration","scope":2794,"src":"6751:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2726,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2729,"mutability":"mutable","name":"begin","nameLocation":"6788:5:13","nodeType":"VariableDeclaration","scope":2794,"src":"6780:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2728,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2731,"mutability":"mutable","name":"end","nameLocation":"6811:3:13","nodeType":"VariableDeclaration","scope":2794,"src":"6803:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2730,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:13"},"returnParameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"success","nameLocation":"6848:7:13","nodeType":"VariableDeclaration","scope":2794,"src":"6843:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2733,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"value","nameLocation":"6865:5:13","nodeType":"VariableDeclaration","scope":2794,"src":"6857:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:13"},"scope":3653,"src":"6704:515:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2812,"nodeType":"Block","src":"7516:63:13","statements":[{"expression":{"arguments":[{"id":2803,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"7542:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2807,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"7558:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2805,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:13","typeDescriptions":{}}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:13","memberName":"length","nodeType":"MemberAccess","src":"7552:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2802,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2813,2844],"referencedDeclaration":2844,"src":"7533:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2801,"id":2811,"nodeType":"Return","src":"7526:46:13"}]},"documentation":{"id":2795,"nodeType":"StructuredDocumentation","src":"7225:216:13","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2813,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:13","nodeType":"FunctionDefinition","parameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2797,"mutability":"mutable","name":"input","nameLocation":"7478:5:13","nodeType":"VariableDeclaration","scope":2813,"src":"7464:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2796,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:13"},"returnParameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2813,"src":"7508:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2799,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:13"},"scope":3653,"src":"7446:133:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2843,"nodeType":"Block","src":"7984:151:13","statements":[{"assignments":[2826,2828],"declarations":[{"constant":false,"id":2826,"mutability":"mutable","name":"success","nameLocation":"8000:7:13","nodeType":"VariableDeclaration","scope":2843,"src":"7995:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2825,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2828,"mutability":"mutable","name":"value","nameLocation":"8016:5:13","nodeType":"VariableDeclaration","scope":2843,"src":"8009:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2827,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2834,"initialValue":{"arguments":[{"id":2830,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"8037:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2831,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"8044:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2832,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"8051:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2829,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2865,2907],"referencedDeclaration":2907,"src":"8025:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:13"},{"condition":{"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:13","subExpression":{"id":2835,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"8070:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2840,"nodeType":"IfStatement","src":"8065:41:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2837,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"8086:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2839,"nodeType":"RevertStatement","src":"8079:27:13"}},{"expression":{"id":2841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"8123:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2824,"id":2842,"nodeType":"Return","src":"8116:12:13"}]},"documentation":{"id":2814,"nodeType":"StructuredDocumentation","src":"7585:296:13","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2844,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:13","nodeType":"FunctionDefinition","parameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"input","nameLocation":"7918:5:13","nodeType":"VariableDeclaration","scope":2844,"src":"7904:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2815,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2818,"mutability":"mutable","name":"begin","nameLocation":"7933:5:13","nodeType":"VariableDeclaration","scope":2844,"src":"7925:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2817,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2820,"mutability":"mutable","name":"end","nameLocation":"7948:3:13","nodeType":"VariableDeclaration","scope":2844,"src":"7940:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2819,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:13"},"returnParameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2844,"src":"7976:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2822,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:13"},"scope":3653,"src":"7886:249:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2864,"nodeType":"Block","src":"8526:82:13","statements":[{"expression":{"arguments":[{"id":2855,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"8571:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2859,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"8587:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2857,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:13","typeDescriptions":{}}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:13","memberName":"length","nodeType":"MemberAccess","src":"8581:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2854,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"8543:27:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2853,"id":2863,"nodeType":"Return","src":"8536:65:13"}]},"documentation":{"id":2845,"nodeType":"StructuredDocumentation","src":"8141:287:13","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2865,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:13","nodeType":"FunctionDefinition","parameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"input","nameLocation":"8468:5:13","nodeType":"VariableDeclaration","scope":2865,"src":"8454:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2846,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:13"},"returnParameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"success","nameLocation":"8503:7:13","nodeType":"VariableDeclaration","scope":2865,"src":"8498:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2849,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2852,"mutability":"mutable","name":"value","nameLocation":"8519:5:13","nodeType":"VariableDeclaration","scope":2865,"src":"8512:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2851,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:13"},"scope":3653,"src":"8433:175:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2870,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:13","nodeType":"VariableDeclaration","scope":3653,"src":"8614:50:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2866,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2906,"nodeType":"Block","src":"9130:143:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2884,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"9144:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2887,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"9156:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2885,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:13","typeDescriptions":{}}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:13","memberName":"length","nodeType":"MemberAccess","src":"9150:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2891,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"9173:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2892,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"9181:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2899,"nodeType":"IfStatement","src":"9140:63:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2883,"id":2898,"nodeType":"Return","src":"9186:17:13"}},{"expression":{"arguments":[{"id":2901,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"9248:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2902,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"9255:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2903,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"9262:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2900,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"9220:27:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2883,"id":2905,"nodeType":"Return","src":"9213:53:13"}]},"documentation":{"id":2871,"nodeType":"StructuredDocumentation","src":"8671:303:13","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2907,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:13","nodeType":"FunctionDefinition","parameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"input","nameLocation":"9023:5:13","nodeType":"VariableDeclaration","scope":2907,"src":"9009:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2872,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2875,"mutability":"mutable","name":"begin","nameLocation":"9046:5:13","nodeType":"VariableDeclaration","scope":2907,"src":"9038:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2877,"mutability":"mutable","name":"end","nameLocation":"9069:3:13","nodeType":"VariableDeclaration","scope":2907,"src":"9061:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2876,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:13"},"returnParameters":{"id":2883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"success","nameLocation":"9107:7:13","nodeType":"VariableDeclaration","scope":2907,"src":"9102:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2879,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2882,"mutability":"mutable","name":"value","nameLocation":"9123:5:13","nodeType":"VariableDeclaration","scope":2907,"src":"9116:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2881,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:13"},"scope":3653,"src":"8979:294:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3027,"nodeType":"Block","src":"9673:812:13","statements":[{"assignments":[2922],"declarations":[{"constant":false,"id":2922,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:13","nodeType":"VariableDeclaration","scope":3027,"src":"9683:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2921,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2927,"initialValue":{"arguments":[{"id":2925,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"9711:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2923,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:13","typeDescriptions":{}}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:13"},{"assignments":[2929],"declarations":[{"constant":false,"id":2929,"mutability":"mutable","name":"sign","nameLocation":"9781:4:13","nodeType":"VariableDeclaration","scope":3027,"src":"9774:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2928,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2945,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2930,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"9788:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2931,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"9797:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2940,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"9845:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2941,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"9853:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2939,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"9822:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2937,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:13","typeDescriptions":{}}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:13","trueExpression":{"arguments":[{"hexValue":"30","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2933,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:13","typeDescriptions":{}}},"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:13"},{"assignments":[2947],"declarations":[{"constant":false,"id":2947,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:13","nodeType":"VariableDeclaration","scope":3027,"src":"9941:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2946,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2954,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2948,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"9961:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2949,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:13","typeDescriptions":{}}},"id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:13"},{"assignments":[2956],"declarations":[{"constant":false,"id":2956,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:13","nodeType":"VariableDeclaration","scope":3027,"src":"9990:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2955,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2963,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2957,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"10010:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2958,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:13","typeDescriptions":{}}},"id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:13"},{"assignments":[2965],"declarations":[{"constant":false,"id":2965,"mutability":"mutable","name":"offset","nameLocation":"10047:6:13","nodeType":"VariableDeclaration","scope":3027,"src":"10039:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2964,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2972,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2966,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"10057:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2967,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"10073:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2969,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"10056:37:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:13"},{"assignments":[2974,2976],"declarations":[{"constant":false,"id":2974,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:13","nodeType":"VariableDeclaration","scope":3027,"src":"10107:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2973,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:13","nodeType":"VariableDeclaration","scope":3027,"src":"10124:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2984,"initialValue":{"arguments":[{"id":2978,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"10157:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2979,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"10164:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2980,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"10172:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2982,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"10180:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2977,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2687,2724],"referencedDeclaration":2724,"src":"10144:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2985,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"10199:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2986,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"10213:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2987,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"10224:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3005,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"10341:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3006,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"10355:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3008,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"10371:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3009,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"10383:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3023,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2920,"id":3024,"nodeType":"Return","src":"10461:17:13"},"id":3025,"nodeType":"IfStatement","src":"10337:141:13","trueBody":{"id":3020,"nodeType":"Block","src":"10399:56:13","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3014,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3013,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:13","memberName":"min","nodeType":"MemberAccess","src":"10427:16:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3018,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2920,"id":3019,"nodeType":"Return","src":"10413:31:13"}]}},"id":3026,"nodeType":"IfStatement","src":"10195:283:13","trueBody":{"id":3004,"nodeType":"Block","src":"10240:91:13","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2991,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"10268:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2999,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"10310:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2997,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:13","typeDescriptions":{}}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:13","trueExpression":{"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:13","subExpression":{"arguments":[{"id":2994,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"10291:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2992,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:13","typeDescriptions":{}}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3002,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2920,"id":3003,"nodeType":"Return","src":"10254:66:13"}]}}]},"documentation":{"id":2908,"nodeType":"StructuredDocumentation","src":"9279:223:13","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3028,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:13","nodeType":"FunctionDefinition","parameters":{"id":2915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"input","nameLocation":"9567:5:13","nodeType":"VariableDeclaration","scope":3028,"src":"9553:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2909,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2912,"mutability":"mutable","name":"begin","nameLocation":"9590:5:13","nodeType":"VariableDeclaration","scope":3028,"src":"9582:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2911,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2914,"mutability":"mutable","name":"end","nameLocation":"9613:3:13","nodeType":"VariableDeclaration","scope":3028,"src":"9605:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:13"},"returnParameters":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2917,"mutability":"mutable","name":"success","nameLocation":"9650:7:13","nodeType":"VariableDeclaration","scope":3028,"src":"9645:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2916,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2919,"mutability":"mutable","name":"value","nameLocation":"9666:5:13","nodeType":"VariableDeclaration","scope":3028,"src":"9659:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2918,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:13"},"scope":3653,"src":"9507:978:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3046,"nodeType":"Block","src":"10830:67:13","statements":[{"expression":{"arguments":[{"id":3037,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"10860:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3041,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"10876:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3039,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:13","typeDescriptions":{}}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:13","memberName":"length","nodeType":"MemberAccess","src":"10870:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3036,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3047,3078],"referencedDeclaration":3078,"src":"10847:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3035,"id":3045,"nodeType":"Return","src":"10840:50:13"}]},"documentation":{"id":3029,"nodeType":"StructuredDocumentation","src":"10491:259:13","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3047,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:13","nodeType":"FunctionDefinition","parameters":{"id":3032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3031,"mutability":"mutable","name":"input","nameLocation":"10791:5:13","nodeType":"VariableDeclaration","scope":3047,"src":"10777:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3030,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:13"},"returnParameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3047,"src":"10821:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:13"},"scope":3653,"src":"10755:142:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3077,"nodeType":"Block","src":"11318:156:13","statements":[{"assignments":[3060,3062],"declarations":[{"constant":false,"id":3060,"mutability":"mutable","name":"success","nameLocation":"11334:7:13","nodeType":"VariableDeclaration","scope":3077,"src":"11329:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3059,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3062,"mutability":"mutable","name":"value","nameLocation":"11351:5:13","nodeType":"VariableDeclaration","scope":3077,"src":"11343:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3061,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3068,"initialValue":{"arguments":[{"id":3064,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"11376:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3065,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"11383:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3066,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"11390:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3063,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3099,3136],"referencedDeclaration":3136,"src":"11360:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:13"},{"condition":{"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:13","subExpression":{"id":3069,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"11409:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3074,"nodeType":"IfStatement","src":"11404:41:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3071,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"11425:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3073,"nodeType":"RevertStatement","src":"11418:27:13"}},{"expression":{"id":3075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"11462:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3058,"id":3076,"nodeType":"Return","src":"11455:12:13"}]},"documentation":{"id":3048,"nodeType":"StructuredDocumentation","src":"10903:307:13","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3078,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:13","nodeType":"FunctionDefinition","parameters":{"id":3055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"input","nameLocation":"11251:5:13","nodeType":"VariableDeclaration","scope":3078,"src":"11237:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3049,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3052,"mutability":"mutable","name":"begin","nameLocation":"11266:5:13","nodeType":"VariableDeclaration","scope":3078,"src":"11258:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3054,"mutability":"mutable","name":"end","nameLocation":"11281:3:13","nodeType":"VariableDeclaration","scope":3078,"src":"11273:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:13"},"returnParameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3078,"src":"11309:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3056,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:13"},"scope":3653,"src":"11215:259:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3098,"nodeType":"Block","src":"11801:86:13","statements":[{"expression":{"arguments":[{"id":3089,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"11850:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3093,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"11866:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3091,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:13","typeDescriptions":{}}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:13","memberName":"length","nodeType":"MemberAccess","src":"11860:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3088,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"11818:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3087,"id":3097,"nodeType":"Return","src":"11811:69:13"}]},"documentation":{"id":3079,"nodeType":"StructuredDocumentation","src":"11480:218:13","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3099,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:13","nodeType":"FunctionDefinition","parameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3081,"mutability":"mutable","name":"input","nameLocation":"11742:5:13","nodeType":"VariableDeclaration","scope":3099,"src":"11728:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3080,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:13"},"returnParameters":{"id":3087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"success","nameLocation":"11777:7:13","nodeType":"VariableDeclaration","scope":3099,"src":"11772:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3083,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3086,"mutability":"mutable","name":"value","nameLocation":"11794:5:13","nodeType":"VariableDeclaration","scope":3099,"src":"11786:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3085,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:13"},"scope":3653,"src":"11703:184:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3135,"nodeType":"Block","src":"12295:147:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3113,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"12309:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3116,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"12321:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3114,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:13","typeDescriptions":{}}},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:13","memberName":"length","nodeType":"MemberAccess","src":"12315:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3120,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"12338:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3121,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"12346:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3128,"nodeType":"IfStatement","src":"12305:63:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3126,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3112,"id":3127,"nodeType":"Return","src":"12351:17:13"}},{"expression":{"arguments":[{"id":3130,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"12417:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3131,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"12424:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3132,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"12431:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3129,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"12385:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3112,"id":3134,"nodeType":"Return","src":"12378:57:13"}]},"documentation":{"id":3100,"nodeType":"StructuredDocumentation","src":"11893:241:13","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3136,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:13","nodeType":"FunctionDefinition","parameters":{"id":3107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"input","nameLocation":"12187:5:13","nodeType":"VariableDeclaration","scope":3136,"src":"12173:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3101,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3104,"mutability":"mutable","name":"begin","nameLocation":"12210:5:13","nodeType":"VariableDeclaration","scope":3136,"src":"12202:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3106,"mutability":"mutable","name":"end","nameLocation":"12233:3:13","nodeType":"VariableDeclaration","scope":3136,"src":"12225:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3105,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:13"},"returnParameters":{"id":3112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3109,"mutability":"mutable","name":"success","nameLocation":"12271:7:13","nodeType":"VariableDeclaration","scope":3136,"src":"12266:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3108,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3111,"mutability":"mutable","name":"value","nameLocation":"12288:5:13","nodeType":"VariableDeclaration","scope":3136,"src":"12280:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3110,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:13"},"scope":3653,"src":"12139:303:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3238,"nodeType":"Block","src":"12851:881:13","statements":[{"assignments":[3151],"declarations":[{"constant":false,"id":3151,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:13","nodeType":"VariableDeclaration","scope":3238,"src":"12861:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3150,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3156,"initialValue":{"arguments":[{"id":3154,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"12889:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3152,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:13","typeDescriptions":{}}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:13"},{"assignments":[3158],"declarations":[{"constant":false,"id":3158,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:13","nodeType":"VariableDeclaration","scope":3238,"src":"12943:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3157,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3178,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3159,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"12961:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3160,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"12967:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3164,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3168,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"13011:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3169,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"13019:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3167,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"12988:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3165,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:13","typeDescriptions":{}}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3172,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:13","typeDescriptions":{}}},"id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:13"},{"assignments":[3180],"declarations":[{"constant":false,"id":3180,"mutability":"mutable","name":"offset","nameLocation":"13131:6:13","nodeType":"VariableDeclaration","scope":3238,"src":"13123:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3186,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3181,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"13140:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"13140:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:13"},{"assignments":[3188],"declarations":[{"constant":false,"id":3188,"mutability":"mutable","name":"result","nameLocation":"13181:6:13","nodeType":"VariableDeclaration","scope":3238,"src":"13173:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3190,"initialValue":{"hexValue":"30","id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:13"},{"body":{"id":3232,"nodeType":"Block","src":"13248:447:13","statements":[{"assignments":[3204],"declarations":[{"constant":false,"id":3204,"mutability":"mutable","name":"chr","nameLocation":"13268:3:13","nodeType":"VariableDeclaration","scope":3232,"src":"13262:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3203,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3214,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3209,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"13317:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3210,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"13325:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3208,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"13294:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3206,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:13","typeDescriptions":{}}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3205,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"13274:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3215,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"13347:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3222,"nodeType":"IfStatement","src":"13343:31:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3149,"id":3221,"nodeType":"Return","src":"13357:17:13"}},{"expression":{"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3223,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"13388:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3226,"nodeType":"ExpressionStatement","src":"13388:12:13"},{"id":3231,"nodeType":"UncheckedBlock","src":"13414:271:13","statements":[{"expression":{"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3227,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"13657:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3228,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"13667:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3230,"nodeType":"ExpressionStatement","src":"13657:13:13"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3197,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"13234:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3198,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"13238:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3233,"initializationExpression":{"assignments":[3192],"declarations":[{"constant":false,"id":3192,"mutability":"mutable","name":"i","nameLocation":"13214:1:13","nodeType":"VariableDeclaration","scope":3233,"src":"13206:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3191,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3196,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3193,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"13218:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3194,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"13226:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:13"},"loopExpression":{"expression":{"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:13","subExpression":{"id":3200,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"13245:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3202,"nodeType":"ExpressionStatement","src":"13243:3:13"},"nodeType":"ForStatement","src":"13201:494:13"},{"expression":{"components":[{"hexValue":"74727565","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"13718:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3149,"id":3237,"nodeType":"Return","src":"13704:21:13"}]},"documentation":{"id":3137,"nodeType":"StructuredDocumentation","src":"12448:227:13","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3239,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:13","nodeType":"FunctionDefinition","parameters":{"id":3144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"input","nameLocation":"12744:5:13","nodeType":"VariableDeclaration","scope":3239,"src":"12730:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3138,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3141,"mutability":"mutable","name":"begin","nameLocation":"12767:5:13","nodeType":"VariableDeclaration","scope":3239,"src":"12759:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3140,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3143,"mutability":"mutable","name":"end","nameLocation":"12790:3:13","nodeType":"VariableDeclaration","scope":3239,"src":"12782:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3142,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:13"},"returnParameters":{"id":3149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3146,"mutability":"mutable","name":"success","nameLocation":"12827:7:13","nodeType":"VariableDeclaration","scope":3239,"src":"12822:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3145,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3148,"mutability":"mutable","name":"value","nameLocation":"12844:5:13","nodeType":"VariableDeclaration","scope":3239,"src":"12836:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3147,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:13"},"scope":3653,"src":"12680:1052:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3257,"nodeType":"Block","src":"14030:67:13","statements":[{"expression":{"arguments":[{"id":3248,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"14060:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3252,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"14076:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3250,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:13","typeDescriptions":{}}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:13","memberName":"length","nodeType":"MemberAccess","src":"14070:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3247,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3258,3289],"referencedDeclaration":3289,"src":"14047:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3246,"id":3256,"nodeType":"Return","src":"14040:50:13"}]},"documentation":{"id":3240,"nodeType":"StructuredDocumentation","src":"13738:212:13","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3258,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:13","nodeType":"FunctionDefinition","parameters":{"id":3243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3242,"mutability":"mutable","name":"input","nameLocation":"13991:5:13","nodeType":"VariableDeclaration","scope":3258,"src":"13977:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3241,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:13"},"returnParameters":{"id":3246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3258,"src":"14021:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3244,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:13"},"scope":3653,"src":"13955:142:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3288,"nodeType":"Block","src":"14470:165:13","statements":[{"assignments":[3271,3273],"declarations":[{"constant":false,"id":3271,"mutability":"mutable","name":"success","nameLocation":"14486:7:13","nodeType":"VariableDeclaration","scope":3288,"src":"14481:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3270,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3273,"mutability":"mutable","name":"value","nameLocation":"14503:5:13","nodeType":"VariableDeclaration","scope":3288,"src":"14495:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3272,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3279,"initialValue":{"arguments":[{"id":3275,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"14528:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3276,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"14535:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3277,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"14542:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3274,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3310,3414],"referencedDeclaration":3414,"src":"14512:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:13"},{"condition":{"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:13","subExpression":{"id":3280,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"14561:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3285,"nodeType":"IfStatement","src":"14556:50:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3282,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"14577:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3284,"nodeType":"RevertStatement","src":"14570:36:13"}},{"expression":{"id":3286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"14623:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3269,"id":3287,"nodeType":"Return","src":"14616:12:13"}]},"documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"14103:259:13","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3289,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:13","nodeType":"FunctionDefinition","parameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"input","nameLocation":"14403:5:13","nodeType":"VariableDeclaration","scope":3289,"src":"14389:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3260,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3263,"mutability":"mutable","name":"begin","nameLocation":"14418:5:13","nodeType":"VariableDeclaration","scope":3289,"src":"14410:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3265,"mutability":"mutable","name":"end","nameLocation":"14433:3:13","nodeType":"VariableDeclaration","scope":3289,"src":"14425:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:13"},"returnParameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3289,"src":"14461:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3267,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:13"},"scope":3653,"src":"14367:268:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3309,"nodeType":"Block","src":"14942:70:13","statements":[{"expression":{"arguments":[{"id":3300,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"14975:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3304,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"14991:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3302,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:13","typeDescriptions":{}}},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:13","memberName":"length","nodeType":"MemberAccess","src":"14985:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3299,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3310,3414],"referencedDeclaration":3414,"src":"14959:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3298,"id":3308,"nodeType":"Return","src":"14952:53:13"}]},"documentation":{"id":3290,"nodeType":"StructuredDocumentation","src":"14641:198:13","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3310,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:13","nodeType":"FunctionDefinition","parameters":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3292,"mutability":"mutable","name":"input","nameLocation":"14883:5:13","nodeType":"VariableDeclaration","scope":3310,"src":"14869:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3291,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:13"},"returnParameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"success","nameLocation":"14918:7:13","nodeType":"VariableDeclaration","scope":3310,"src":"14913:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3294,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3297,"mutability":"mutable","name":"value","nameLocation":"14935:5:13","nodeType":"VariableDeclaration","scope":3310,"src":"14927:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3296,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:13"},"scope":3653,"src":"14844:168:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3413,"nodeType":"Block","src":"15405:733:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3324,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"15419:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3327,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"15431:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3325,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:13","typeDescriptions":{}}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:13","memberName":"length","nodeType":"MemberAccess","src":"15425:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3331,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"15448:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3332,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"15456:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3342,"nodeType":"IfStatement","src":"15415:72:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3336,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:13","typeDescriptions":{}}},"id":3339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3323,"id":3341,"nodeType":"Return","src":"15461:26:13"}},{"assignments":[3344],"declarations":[{"constant":false,"id":3344,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:13","nodeType":"VariableDeclaration","scope":3413,"src":"15498:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3343,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3367,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3345,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"15516:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3346,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"15522:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3350,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3356,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"15572:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3354,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:13","typeDescriptions":{}}},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3358,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"15580:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3353,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"15543:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3351,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:13","typeDescriptions":{}}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3361,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:13","typeDescriptions":{}}},"id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:13"},{"assignments":[3369],"declarations":[{"constant":false,"id":3369,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:13","nodeType":"VariableDeclaration","scope":3413,"src":"15684:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3368,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3377,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3371,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"15714:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"15714:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3378,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"15801:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3379,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"15807:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3381,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"15816:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3411,"nodeType":"Block","src":"16081:51:13","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3405,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:13","typeDescriptions":{}}},"id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3323,"id":3410,"nodeType":"Return","src":"16095:26:13"}]},"id":3412,"nodeType":"IfStatement","src":"15797:335:13","trueBody":{"id":3403,"nodeType":"Block","src":"15832:243:13","statements":[{"assignments":[3384,3386],"declarations":[{"constant":false,"id":3384,"mutability":"mutable","name":"s","nameLocation":"15953:1:13","nodeType":"VariableDeclaration","scope":3403,"src":"15948:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3383,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3386,"mutability":"mutable","name":"v","nameLocation":"15964:1:13","nodeType":"VariableDeclaration","scope":3403,"src":"15956:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3385,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3392,"initialValue":{"arguments":[{"id":3388,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"16001:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3389,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"16008:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3390,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"16015:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3387,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"15969:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:13"},{"expression":{"components":[{"id":3393,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"16041:1:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3398,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"16060:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3396,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:13","typeDescriptions":{}}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3394,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:13","typeDescriptions":{}}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3401,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3323,"id":3402,"nodeType":"Return","src":"16033:31:13"}]}}]},"documentation":{"id":3311,"nodeType":"StructuredDocumentation","src":"15018:226:13","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3414,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:13","nodeType":"FunctionDefinition","parameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"input","nameLocation":"15297:5:13","nodeType":"VariableDeclaration","scope":3414,"src":"15283:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3312,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3315,"mutability":"mutable","name":"begin","nameLocation":"15320:5:13","nodeType":"VariableDeclaration","scope":3414,"src":"15312:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3314,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3317,"mutability":"mutable","name":"end","nameLocation":"15343:3:13","nodeType":"VariableDeclaration","scope":3414,"src":"15335:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3316,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:13"},"returnParameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3320,"mutability":"mutable","name":"success","nameLocation":"15381:7:13","nodeType":"VariableDeclaration","scope":3414,"src":"15376:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3319,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3322,"mutability":"mutable","name":"value","nameLocation":"15398:5:13","nodeType":"VariableDeclaration","scope":3414,"src":"15390:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3321,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:13"},"scope":3653,"src":"15249:889:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3473,"nodeType":"Block","src":"16207:461:13","statements":[{"assignments":[3422],"declarations":[{"constant":false,"id":3422,"mutability":"mutable","name":"value","nameLocation":"16223:5:13","nodeType":"VariableDeclaration","scope":3473,"src":"16217:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3421,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3427,"initialValue":{"arguments":[{"id":3425,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"16237:3:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3423,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:13","typeDescriptions":{}}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:13"},{"id":3470,"nodeType":"UncheckedBlock","src":"16401:238:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"16429:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:13","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"16443:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:13","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"16489:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"16503:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:13","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"16550:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"16564:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:13","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3462,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3461,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:13","memberName":"max","nodeType":"MemberAccess","src":"16613:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3420,"id":3466,"nodeType":"Return","src":"16606:22:13"},"id":3467,"nodeType":"IfStatement","src":"16546:82:13","trueBody":{"expression":{"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"16576:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:13","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3460,"nodeType":"ExpressionStatement","src":"16576:11:13"}},"id":3468,"nodeType":"IfStatement","src":"16485:143:13","trueBody":{"expression":{"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"16516:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:13","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3449,"nodeType":"ExpressionStatement","src":"16516:11:13"}},"id":3469,"nodeType":"IfStatement","src":"16425:203:13","trueBody":{"expression":{"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"16455:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3438,"nodeType":"ExpressionStatement","src":"16455:11:13"}}]},{"expression":{"id":3471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"16656:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3420,"id":3472,"nodeType":"Return","src":"16649:12:13"}]},"id":3474,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:13","nodeType":"FunctionDefinition","parameters":{"id":3417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3416,"mutability":"mutable","name":"chr","nameLocation":"16173:3:13","nodeType":"VariableDeclaration","scope":3474,"src":"16166:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3415,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:13"},"returnParameters":{"id":3420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3474,"src":"16200:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3418,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:13"},"scope":3653,"src":"16144:524:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3639,"nodeType":"Block","src":"17334:1331:13","statements":[{"assignments":[3483],"declarations":[{"constant":false,"id":3483,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:13","nodeType":"VariableDeclaration","scope":3639,"src":"17344:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3482,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3488,"initialValue":{"arguments":[{"id":3486,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"17372:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3484,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:13","typeDescriptions":{}}},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:13"},{"assignments":[3490],"declarations":[{"constant":false,"id":3490,"mutability":"mutable","name":"output","nameLocation":"17401:6:13","nodeType":"VariableDeclaration","scope":3639,"src":"17388:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3489,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3498,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3494,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"17424:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:13","memberName":"length","nodeType":"MemberAccess","src":"17424:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3491,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:13"},{"assignments":[3500],"declarations":[{"constant":false,"id":3500,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:13","nodeType":"VariableDeclaration","scope":3639,"src":"17471:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3502,"initialValue":{"hexValue":"30","id":3501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:13"},{"body":{"id":3631,"nodeType":"Block","src":"17546:854:13","statements":[{"assignments":[3514],"declarations":[{"constant":false,"id":3514,"mutability":"mutable","name":"char","nameLocation":"17567:4:13","nodeType":"VariableDeclaration","scope":3631,"src":"17560:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3513,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3522,"initialValue":{"arguments":[{"arguments":[{"id":3518,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"17604:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3519,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"17612:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3517,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"17581:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3515,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:13","typeDescriptions":{}}},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:13"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3523,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"17635:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3527,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"17670:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3525,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:13","typeDescriptions":{}}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3530,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3532,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3629,"nodeType":"Block","src":"18328:62:13","statements":[{"expression":{"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3622,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"18346:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3625,"indexExpression":{"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:13","subExpression":{"id":3623,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"18353:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3626,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"18371:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3628,"nodeType":"ExpressionStatement","src":"18346:29:13"}]},"id":3630,"nodeType":"IfStatement","src":"17629:761:13","trueBody":{"id":3621,"nodeType":"Block","src":"17685:637:13","statements":[{"expression":{"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3536,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"17703:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3539,"indexExpression":{"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:13","subExpression":{"id":3537,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"17710:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3542,"nodeType":"ExpressionStatement","src":"17703:29:13"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3543,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"17754:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3553,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"17823:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:13","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3563,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"17892:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3573,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"17961:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:13","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3583,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"18030:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:13","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3593,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"18099:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:13","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3603,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"18169:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:13","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3614,"nodeType":"IfStatement","src":"18165:143:13","trueBody":{"id":3613,"nodeType":"Block","src":"18183:125:13","statements":[{"expression":{"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3606,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"18261:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3609,"indexExpression":{"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:13","subExpression":{"id":3607,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"18268:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3612,"nodeType":"ExpressionStatement","src":"18261:28:13"}]}},"id":3615,"nodeType":"IfStatement","src":"18095:213:13","trueBody":{"expression":{"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3596,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"18113:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3599,"indexExpression":{"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:13","subExpression":{"id":3597,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"18120:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3602,"nodeType":"ExpressionStatement","src":"18113:29:13"}},"id":3616,"nodeType":"IfStatement","src":"18026:282:13","trueBody":{"expression":{"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3586,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"18044:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3589,"indexExpression":{"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:13","subExpression":{"id":3587,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"18051:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3592,"nodeType":"ExpressionStatement","src":"18044:28:13"}},"id":3617,"nodeType":"IfStatement","src":"17957:351:13","trueBody":{"expression":{"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3576,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"17975:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3579,"indexExpression":{"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:13","subExpression":{"id":3577,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"17982:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3582,"nodeType":"ExpressionStatement","src":"17975:28:13"}},"id":3618,"nodeType":"IfStatement","src":"17888:420:13","trueBody":{"expression":{"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3566,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"17906:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3569,"indexExpression":{"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:13","subExpression":{"id":3567,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"17913:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3572,"nodeType":"ExpressionStatement","src":"17906:28:13"}},"id":3619,"nodeType":"IfStatement","src":"17819:489:13","trueBody":{"expression":{"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3556,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"17837:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3559,"indexExpression":{"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:13","subExpression":{"id":3557,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"17844:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3562,"nodeType":"ExpressionStatement","src":"17837:28:13"}},"id":3620,"nodeType":"IfStatement","src":"17750:558:13","trueBody":{"expression":{"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3546,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"17768:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3549,"indexExpression":{"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:13","subExpression":{"id":3547,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"17775:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3552,"nodeType":"ExpressionStatement","src":"17768:28:13"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3506,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"17522:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3507,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"17526:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:13","memberName":"length","nodeType":"MemberAccess","src":"17526:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3632,"initializationExpression":{"assignments":[3504],"declarations":[{"constant":false,"id":3504,"mutability":"mutable","name":"i","nameLocation":"17519:1:13","nodeType":"VariableDeclaration","scope":3632,"src":"17511:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3505,"nodeType":"VariableDeclarationStatement","src":"17511:9:13"},"loopExpression":{"expression":{"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:13","subExpression":{"id":3510,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"17543:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3512,"nodeType":"ExpressionStatement","src":"17541:3:13"},"nodeType":"ForStatement","src":"17506:894:13"},{"AST":{"nodeType":"YulBlock","src":"18498:129:13","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18519:6:13"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18527:12:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18512:6:13"},"nodeType":"YulFunctionCall","src":"18512:28:13"},"nodeType":"YulExpressionStatement","src":"18512:28:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:4:13","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18570:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18582:1:13","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18589:1:13","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18596:12:13"},{"kind":"number","nodeType":"YulLiteral","src":"18610:2:13","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18592:3:13"},"nodeType":"YulFunctionCall","src":"18592:21:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18585:3:13"},"nodeType":"YulFunctionCall","src":"18585:29:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18578:3:13"},"nodeType":"YulFunctionCall","src":"18578:37:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18566:3:13"},"nodeType":"YulFunctionCall","src":"18566:50:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18553:6:13"},"nodeType":"YulFunctionCall","src":"18553:64:13"},"nodeType":"YulExpressionStatement","src":"18553:64:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":3490,"isOffset":false,"isSlot":false,"src":"18519:6:13","valueSize":1},{"declaration":3490,"isOffset":false,"isSlot":false,"src":"18570:6:13","valueSize":1},{"declaration":3500,"isOffset":false,"isSlot":false,"src":"18527:12:13","valueSize":1},{"declaration":3500,"isOffset":false,"isSlot":false,"src":"18596:12:13","valueSize":1}],"flags":["memory-safe"],"id":3633,"nodeType":"InlineAssembly","src":"18473:154:13"},{"expression":{"arguments":[{"id":3636,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"18651:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3634,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:13","typeDescriptions":{}}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3481,"id":3638,"nodeType":"Return","src":"18637:21:13"}]},"documentation":{"id":3475,"nodeType":"StructuredDocumentation","src":"16674:576:13","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3640,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:13","nodeType":"FunctionDefinition","parameters":{"id":3478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"input","nameLocation":"17289:5:13","nodeType":"VariableDeclaration","scope":3640,"src":"17275:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3476,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:13"},"returnParameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3640,"src":"17319:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3479,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:13"},"scope":3653,"src":"17255:1410:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3651,"nodeType":"Block","src":"19050:225:13","statements":[{"AST":{"nodeType":"YulBlock","src":"19199:70:13","statements":[{"nodeType":"YulAssignment","src":"19213:46:13","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19232:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19244:4:13","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"19250:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19240:3:13"},"nodeType":"YulFunctionCall","src":"19240:17:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19228:3:13"},"nodeType":"YulFunctionCall","src":"19228:30:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19222:5:13"},"nodeType":"YulFunctionCall","src":"19222:37:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19213:5:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3643,"isOffset":false,"isSlot":false,"src":"19232:6:13","valueSize":1},{"declaration":3645,"isOffset":false,"isSlot":false,"src":"19250:6:13","valueSize":1},{"declaration":3648,"isOffset":false,"isSlot":false,"src":"19213:5:13","valueSize":1}],"flags":["memory-safe"],"id":3650,"nodeType":"InlineAssembly","src":"19174:95:13"}]},"documentation":{"id":3641,"nodeType":"StructuredDocumentation","src":"18671:268:13","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3652,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:13","nodeType":"FunctionDefinition","parameters":{"id":3646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3643,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:13","nodeType":"VariableDeclaration","scope":3652,"src":"18976:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3642,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3645,"mutability":"mutable","name":"offset","nameLocation":"19005:6:13","nodeType":"VariableDeclaration","scope":3652,"src":"18997:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3644,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:13"},"returnParameters":{"id":3649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3648,"mutability":"mutable","name":"value","nameLocation":"19043:5:13","nodeType":"VariableDeclaration","scope":3652,"src":"19035:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:13"},"scope":3653,"src":"18944:331:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3654,"src":"297:18980:13","usedErrors":[2311,2314,2317],"usedEvents":[]}],"src":"101:19177:13"},"id":13},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3677],"IERC165":[3689]},"id":3678,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3655,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3657,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3678,"sourceUnit":3690,"src":"140:38:14","symbolAliases":[{"foreign":{"id":3656,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"148:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3659,"name":"IERC165","nameLocations":["688:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3689,"src":"688:7:14"},"id":3660,"nodeType":"InheritanceSpecifier","src":"688:7:14"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3658,"nodeType":"StructuredDocumentation","src":"180:479:14","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3677,"linearizedBaseContracts":[3677,3689],"name":"ERC165","nameLocation":"678:6:14","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3688],"body":{"id":3675,"nodeType":"Block","src":"845:64:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3668,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"862:11:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3670,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"882:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3689_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3689_$","typeString":"type(contract IERC165)"}],"id":3669,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3689","typeString":"type(contract IERC165)"}},"id":3672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:14","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3667,"id":3674,"nodeType":"Return","src":"855:47:14"}]},"documentation":{"id":3661,"nodeType":"StructuredDocumentation","src":"702:56:14","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3676,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:14","nodeType":"FunctionDefinition","parameters":{"id":3664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:14","nodeType":"VariableDeclaration","scope":3676,"src":"790:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3662,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:14"},"returnParameters":{"id":3667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3676,"src":"839:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3665,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:14"},"scope":3677,"src":"763:146:14","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3678,"src":"660:251:14","usedErrors":[],"usedEvents":[]}],"src":"114:798:14"},"id":14},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3689]},"id":3690,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3679,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3680,"nodeType":"StructuredDocumentation","src":"141:280:15","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3689,"linearizedBaseContracts":[3689],"name":"IERC165","nameLocation":"432:7:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3681,"nodeType":"StructuredDocumentation","src":"446:340:15","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3688,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:15","nodeType":"FunctionDefinition","parameters":{"id":3684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:15","nodeType":"VariableDeclaration","scope":3688,"src":"818:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3682,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:15"},"returnParameters":{"id":3687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3688,"src":"861:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3685,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:15"},"scope":3689,"src":"791:76:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3690,"src":"422:447:15","usedErrors":[],"usedEvents":[]}],"src":"115:755:15"},"id":15},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5310],"Panic":[2182],"SafeCast":[7075]},"id":5311,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3691,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3693,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5311,"sourceUnit":2183,"src":"129:35:16","symbolAliases":[{"foreign":{"id":3692,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"137:5:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3695,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5311,"sourceUnit":7076,"src":"165:40:16","symbolAliases":[{"foreign":{"id":3694,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"173:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3696,"nodeType":"StructuredDocumentation","src":"207:73:16","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5310,"linearizedBaseContracts":[5310],"name":"Math","nameLocation":"289:4:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3701,"members":[{"id":3697,"name":"Floor","nameLocation":"324:5:16","nodeType":"EnumValue","src":"324:5:16"},{"id":3698,"name":"Ceil","nameLocation":"367:4:16","nodeType":"EnumValue","src":"367:4:16"},{"id":3699,"name":"Trunc","nameLocation":"409:5:16","nodeType":"EnumValue","src":"409:5:16"},{"id":3700,"name":"Expand","nameLocation":"439:6:16","nodeType":"EnumValue","src":"439:6:16"}],"name":"Rounding","nameLocation":"305:8:16","nodeType":"EnumDefinition","src":"300:169:16"},{"body":{"id":3714,"nodeType":"Block","src":"731:112:16","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:16","statements":[{"nodeType":"YulAssignment","src":"780:16:16","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:16"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:16"},"nodeType":"YulFunctionCall","src":"787:9:16"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:16"}]},{"nodeType":"YulAssignment","src":"809:18:16","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:16"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:16"},"nodeType":"YulFunctionCall","src":"817:10:16"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3704,"isOffset":false,"isSlot":false,"src":"791:1:16","valueSize":1},{"declaration":3704,"isOffset":false,"isSlot":false,"src":"825:1:16","valueSize":1},{"declaration":3706,"isOffset":false,"isSlot":false,"src":"794:1:16","valueSize":1},{"declaration":3709,"isOffset":false,"isSlot":false,"src":"809:4:16","valueSize":1},{"declaration":3711,"isOffset":false,"isSlot":false,"src":"780:3:16","valueSize":1},{"declaration":3711,"isOffset":false,"isSlot":false,"src":"820:3:16","valueSize":1}],"flags":["memory-safe"],"id":3713,"nodeType":"InlineAssembly","src":"741:96:16"}]},"documentation":{"id":3702,"nodeType":"StructuredDocumentation","src":"475:163:16","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3715,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:16","nodeType":"FunctionDefinition","parameters":{"id":3707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"a","nameLocation":"667:1:16","nodeType":"VariableDeclaration","scope":3715,"src":"659:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3706,"mutability":"mutable","name":"b","nameLocation":"678:1:16","nodeType":"VariableDeclaration","scope":3715,"src":"670:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:16"},"returnParameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"high","nameLocation":"712:4:16","nodeType":"VariableDeclaration","scope":3715,"src":"704:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3711,"mutability":"mutable","name":"low","nameLocation":"726:3:16","nodeType":"VariableDeclaration","scope":3715,"src":"718:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3710,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:16"},"scope":5310,"src":"643:200:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3728,"nodeType":"Block","src":"1115:462:16","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:16","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:16"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:16"},"nodeType":"YulFunctionCall","src":"1474:6:16"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:16"},"nodeType":"YulFunctionCall","src":"1461:20:16"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:16","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:16","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:16"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:16"},"nodeType":"YulFunctionCall","src":"1501:9:16"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:16"}]},{"nodeType":"YulAssignment","src":"1523:38:16","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:16"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:16"},"nodeType":"YulFunctionCall","src":"1535:12:16"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:16"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:16"},"nodeType":"YulFunctionCall","src":"1549:11:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:16"},"nodeType":"YulFunctionCall","src":"1531:30:16"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3718,"isOffset":false,"isSlot":false,"src":"1468:1:16","valueSize":1},{"declaration":3718,"isOffset":false,"isSlot":false,"src":"1505:1:16","valueSize":1},{"declaration":3720,"isOffset":false,"isSlot":false,"src":"1471:1:16","valueSize":1},{"declaration":3720,"isOffset":false,"isSlot":false,"src":"1508:1:16","valueSize":1},{"declaration":3723,"isOffset":false,"isSlot":false,"src":"1523:4:16","valueSize":1},{"declaration":3725,"isOffset":false,"isSlot":false,"src":"1494:3:16","valueSize":1},{"declaration":3725,"isOffset":false,"isSlot":false,"src":"1543:3:16","valueSize":1},{"declaration":3725,"isOffset":false,"isSlot":false,"src":"1556:3:16","valueSize":1}],"flags":["memory-safe"],"id":3727,"nodeType":"InlineAssembly","src":"1412:159:16"}]},"documentation":{"id":3716,"nodeType":"StructuredDocumentation","src":"849:173:16","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3729,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:16","nodeType":"FunctionDefinition","parameters":{"id":3721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3718,"mutability":"mutable","name":"a","nameLocation":"1051:1:16","nodeType":"VariableDeclaration","scope":3729,"src":"1043:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3717,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3720,"mutability":"mutable","name":"b","nameLocation":"1062:1:16","nodeType":"VariableDeclaration","scope":3729,"src":"1054:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3719,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:16"},"returnParameters":{"id":3726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3723,"mutability":"mutable","name":"high","nameLocation":"1096:4:16","nodeType":"VariableDeclaration","scope":3729,"src":"1088:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3722,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3725,"mutability":"mutable","name":"low","nameLocation":"1110:3:16","nodeType":"VariableDeclaration","scope":3729,"src":"1102:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:16"},"scope":5310,"src":"1027:550:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3763,"nodeType":"Block","src":"1784:149:16","statements":[{"id":3762,"nodeType":"UncheckedBlock","src":"1794:133:16","statements":[{"assignments":[3742],"declarations":[{"constant":false,"id":3742,"mutability":"mutable","name":"c","nameLocation":"1826:1:16","nodeType":"VariableDeclaration","scope":3762,"src":"1818:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3741,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3746,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3743,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"1830:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3744,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"1834:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:16"},{"expression":{"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3747,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"1849:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3748,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"1859:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3749,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"1864:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3752,"nodeType":"ExpressionStatement","src":"1849:16:16"},{"expression":{"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3753,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"1879:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3754,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"1888:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3757,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"1908:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3755,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"1892:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"1892:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3761,"nodeType":"ExpressionStatement","src":"1879:37:16"}]}]},"documentation":{"id":3730,"nodeType":"StructuredDocumentation","src":"1583:105:16","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3764,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:16","nodeType":"FunctionDefinition","parameters":{"id":3735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3732,"mutability":"mutable","name":"a","nameLocation":"1717:1:16","nodeType":"VariableDeclaration","scope":3764,"src":"1709:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3731,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3734,"mutability":"mutable","name":"b","nameLocation":"1728:1:16","nodeType":"VariableDeclaration","scope":3764,"src":"1720:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3733,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:16"},"returnParameters":{"id":3740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3737,"mutability":"mutable","name":"success","nameLocation":"1759:7:16","nodeType":"VariableDeclaration","scope":3764,"src":"1754:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3736,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3739,"mutability":"mutable","name":"result","nameLocation":"1776:6:16","nodeType":"VariableDeclaration","scope":3764,"src":"1768:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:16"},"scope":5310,"src":"1693:240:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3798,"nodeType":"Block","src":"2143:149:16","statements":[{"id":3797,"nodeType":"UncheckedBlock","src":"2153:133:16","statements":[{"assignments":[3777],"declarations":[{"constant":false,"id":3777,"mutability":"mutable","name":"c","nameLocation":"2185:1:16","nodeType":"VariableDeclaration","scope":3797,"src":"2177:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3781,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3778,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"2189:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3779,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"2193:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:16"},{"expression":{"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3782,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"2208:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3783,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"2218:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3784,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"2223:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3787,"nodeType":"ExpressionStatement","src":"2208:16:16"},{"expression":{"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3788,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"2238:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3789,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"2247:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3792,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"2267:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3790,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"2251:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"2251:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3796,"nodeType":"ExpressionStatement","src":"2238:37:16"}]}]},"documentation":{"id":3765,"nodeType":"StructuredDocumentation","src":"1939:108:16","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3799,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:16","nodeType":"FunctionDefinition","parameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3767,"mutability":"mutable","name":"a","nameLocation":"2076:1:16","nodeType":"VariableDeclaration","scope":3799,"src":"2068:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3766,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3769,"mutability":"mutable","name":"b","nameLocation":"2087:1:16","nodeType":"VariableDeclaration","scope":3799,"src":"2079:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3768,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:16"},"returnParameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"success","nameLocation":"2118:7:16","nodeType":"VariableDeclaration","scope":3799,"src":"2113:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3771,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3774,"mutability":"mutable","name":"result","nameLocation":"2135:6:16","nodeType":"VariableDeclaration","scope":3799,"src":"2127:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:16"},"scope":5310,"src":"2052:240:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3828,"nodeType":"Block","src":"2505:391:16","statements":[{"id":3827,"nodeType":"UncheckedBlock","src":"2515:375:16","statements":[{"assignments":[3812],"declarations":[{"constant":false,"id":3812,"mutability":"mutable","name":"c","nameLocation":"2547:1:16","nodeType":"VariableDeclaration","scope":3827,"src":"2539:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3811,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3816,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3813,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"2551:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3814,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"2555:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:16"},{"AST":{"nodeType":"YulBlock","src":"2595:188:16","statements":[{"nodeType":"YulAssignment","src":"2727:42:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:16"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:16"},"nodeType":"YulFunctionCall","src":"2744:9:16"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:16"},"nodeType":"YulFunctionCall","src":"2741:16:16"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:16"},"nodeType":"YulFunctionCall","src":"2759:9:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:16"},"nodeType":"YulFunctionCall","src":"2738:31:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3802,"isOffset":false,"isSlot":false,"src":"2751:1:16","valueSize":1},{"declaration":3802,"isOffset":false,"isSlot":false,"src":"2766:1:16","valueSize":1},{"declaration":3804,"isOffset":false,"isSlot":false,"src":"2755:1:16","valueSize":1},{"declaration":3812,"isOffset":false,"isSlot":false,"src":"2748:1:16","valueSize":1},{"declaration":3807,"isOffset":false,"isSlot":false,"src":"2727:7:16","valueSize":1}],"flags":["memory-safe"],"id":3817,"nodeType":"InlineAssembly","src":"2570:213:16"},{"expression":{"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3818,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"2842:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3819,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"2851:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3822,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"2871:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3820,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"2855:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"2855:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3826,"nodeType":"ExpressionStatement","src":"2842:37:16"}]}]},"documentation":{"id":3800,"nodeType":"StructuredDocumentation","src":"2298:111:16","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3829,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:16","nodeType":"FunctionDefinition","parameters":{"id":3805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3802,"mutability":"mutable","name":"a","nameLocation":"2438:1:16","nodeType":"VariableDeclaration","scope":3829,"src":"2430:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3804,"mutability":"mutable","name":"b","nameLocation":"2449:1:16","nodeType":"VariableDeclaration","scope":3829,"src":"2441:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3803,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:16"},"returnParameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3807,"mutability":"mutable","name":"success","nameLocation":"2480:7:16","nodeType":"VariableDeclaration","scope":3829,"src":"2475:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3806,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3809,"mutability":"mutable","name":"result","nameLocation":"2497:6:16","nodeType":"VariableDeclaration","scope":3829,"src":"2489:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3808,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:16"},"scope":5310,"src":"2414:482:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3849,"nodeType":"Block","src":"3111:231:16","statements":[{"id":3848,"nodeType":"UncheckedBlock","src":"3121:215:16","statements":[{"expression":{"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3841,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"3145:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3842,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"3155:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3846,"nodeType":"ExpressionStatement","src":"3145:15:16"},{"AST":{"nodeType":"YulBlock","src":"3199:127:16","statements":[{"nodeType":"YulAssignment","src":"3293:19:16","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:16"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:16"},"nodeType":"YulFunctionCall","src":"3303:9:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3832,"isOffset":false,"isSlot":false,"src":"3307:1:16","valueSize":1},{"declaration":3834,"isOffset":false,"isSlot":false,"src":"3310:1:16","valueSize":1},{"declaration":3839,"isOffset":false,"isSlot":false,"src":"3293:6:16","valueSize":1}],"flags":["memory-safe"],"id":3847,"nodeType":"InlineAssembly","src":"3174:152:16"}]}]},"documentation":{"id":3830,"nodeType":"StructuredDocumentation","src":"2902:113:16","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3850,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:16","nodeType":"FunctionDefinition","parameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3832,"mutability":"mutable","name":"a","nameLocation":"3044:1:16","nodeType":"VariableDeclaration","scope":3850,"src":"3036:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3831,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3834,"mutability":"mutable","name":"b","nameLocation":"3055:1:16","nodeType":"VariableDeclaration","scope":3850,"src":"3047:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:16"},"returnParameters":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3837,"mutability":"mutable","name":"success","nameLocation":"3086:7:16","nodeType":"VariableDeclaration","scope":3850,"src":"3081:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3836,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"result","nameLocation":"3103:6:16","nodeType":"VariableDeclaration","scope":3850,"src":"3095:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:16"},"scope":5310,"src":"3020:322:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3870,"nodeType":"Block","src":"3567:231:16","statements":[{"id":3869,"nodeType":"UncheckedBlock","src":"3577:215:16","statements":[{"expression":{"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3862,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"3601:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3863,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"3611:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3867,"nodeType":"ExpressionStatement","src":"3601:15:16"},{"AST":{"nodeType":"YulBlock","src":"3655:127:16","statements":[{"nodeType":"YulAssignment","src":"3749:19:16","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:16"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:16"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:16"},"nodeType":"YulFunctionCall","src":"3759:9:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3853,"isOffset":false,"isSlot":false,"src":"3763:1:16","valueSize":1},{"declaration":3855,"isOffset":false,"isSlot":false,"src":"3766:1:16","valueSize":1},{"declaration":3860,"isOffset":false,"isSlot":false,"src":"3749:6:16","valueSize":1}],"flags":["memory-safe"],"id":3868,"nodeType":"InlineAssembly","src":"3630:152:16"}]}]},"documentation":{"id":3851,"nodeType":"StructuredDocumentation","src":"3348:123:16","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3871,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:16","nodeType":"FunctionDefinition","parameters":{"id":3856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3853,"mutability":"mutable","name":"a","nameLocation":"3500:1:16","nodeType":"VariableDeclaration","scope":3871,"src":"3492:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3852,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3855,"mutability":"mutable","name":"b","nameLocation":"3511:1:16","nodeType":"VariableDeclaration","scope":3871,"src":"3503:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3854,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:16"},"returnParameters":{"id":3861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3858,"mutability":"mutable","name":"success","nameLocation":"3542:7:16","nodeType":"VariableDeclaration","scope":3871,"src":"3537:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3857,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3860,"mutability":"mutable","name":"result","nameLocation":"3559:6:16","nodeType":"VariableDeclaration","scope":3871,"src":"3551:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3859,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:16"},"scope":5310,"src":"3476:322:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3900,"nodeType":"Block","src":"3989:122:16","statements":[{"assignments":[3882,3884],"declarations":[{"constant":false,"id":3882,"mutability":"mutable","name":"success","nameLocation":"4005:7:16","nodeType":"VariableDeclaration","scope":3900,"src":"4000:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3881,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3884,"mutability":"mutable","name":"result","nameLocation":"4022:6:16","nodeType":"VariableDeclaration","scope":3900,"src":"4014:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3883,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3889,"initialValue":{"arguments":[{"id":3886,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"4039:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3887,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"4042:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3885,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"4032:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:16"},{"expression":{"arguments":[{"id":3891,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"4069:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3892,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"4078:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3893,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:16","memberName":"max","nodeType":"MemberAccess","src":"4086:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3890,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"4061:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3880,"id":3899,"nodeType":"Return","src":"4054:50:16"}]},"documentation":{"id":3872,"nodeType":"StructuredDocumentation","src":"3804:103:16","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3901,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:16","nodeType":"FunctionDefinition","parameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3874,"mutability":"mutable","name":"a","nameLocation":"3943:1:16","nodeType":"VariableDeclaration","scope":3901,"src":"3935:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3873,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3876,"mutability":"mutable","name":"b","nameLocation":"3954:1:16","nodeType":"VariableDeclaration","scope":3901,"src":"3946:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:16"},"returnParameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3901,"src":"3980:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:16"},"scope":5310,"src":"3912:199:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3920,"nodeType":"Block","src":"4294:73:16","statements":[{"assignments":[null,3912],"declarations":[null,{"constant":false,"id":3912,"mutability":"mutable","name":"result","nameLocation":"4315:6:16","nodeType":"VariableDeclaration","scope":3920,"src":"4307:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3911,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3917,"initialValue":{"arguments":[{"id":3914,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"4332:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3915,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"4335:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3913,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"4325:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:16"},{"expression":{"id":3918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"4354:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3910,"id":3919,"nodeType":"Return","src":"4347:13:16"}]},"documentation":{"id":3902,"nodeType":"StructuredDocumentation","src":"4117:95:16","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3921,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:16","nodeType":"FunctionDefinition","parameters":{"id":3907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"a","nameLocation":"4248:1:16","nodeType":"VariableDeclaration","scope":3921,"src":"4240:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3903,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3906,"mutability":"mutable","name":"b","nameLocation":"4259:1:16","nodeType":"VariableDeclaration","scope":3921,"src":"4251:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3905,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:16"},"returnParameters":{"id":3910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3921,"src":"4285:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3908,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:16"},"scope":5310,"src":"4217:150:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3950,"nodeType":"Block","src":"4564:122:16","statements":[{"assignments":[3932,3934],"declarations":[{"constant":false,"id":3932,"mutability":"mutable","name":"success","nameLocation":"4580:7:16","nodeType":"VariableDeclaration","scope":3950,"src":"4575:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3931,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3934,"mutability":"mutable","name":"result","nameLocation":"4597:6:16","nodeType":"VariableDeclaration","scope":3950,"src":"4589:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3933,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3939,"initialValue":{"arguments":[{"id":3936,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"4614:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3937,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"4617:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3935,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"4607:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:16"},{"expression":{"arguments":[{"id":3941,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"4644:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3942,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"4653:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3944,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3943,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:16","memberName":"max","nodeType":"MemberAccess","src":"4661:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3940,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"4636:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3930,"id":3949,"nodeType":"Return","src":"4629:50:16"}]},"documentation":{"id":3922,"nodeType":"StructuredDocumentation","src":"4373:109:16","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3951,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:16","nodeType":"FunctionDefinition","parameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3924,"mutability":"mutable","name":"a","nameLocation":"4518:1:16","nodeType":"VariableDeclaration","scope":3951,"src":"4510:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3926,"mutability":"mutable","name":"b","nameLocation":"4529:1:16","nodeType":"VariableDeclaration","scope":3951,"src":"4521:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:16"},"returnParameters":{"id":3930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3951,"src":"4555:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:16"},"scope":5310,"src":"4487:199:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3977,"nodeType":"Block","src":"5158:207:16","statements":[{"id":3976,"nodeType":"UncheckedBlock","src":"5168:191:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3963,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"5306:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3964,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"5312:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3965,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"5316:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3967,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3970,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"5337:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3968,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"5321:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"5321:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3962,"id":3975,"nodeType":"Return","src":"5299:49:16"}]}]},"documentation":{"id":3952,"nodeType":"StructuredDocumentation","src":"4692:374:16","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3978,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:16","nodeType":"FunctionDefinition","parameters":{"id":3959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3954,"mutability":"mutable","name":"condition","nameLocation":"5093:9:16","nodeType":"VariableDeclaration","scope":3978,"src":"5088:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3953,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3956,"mutability":"mutable","name":"a","nameLocation":"5112:1:16","nodeType":"VariableDeclaration","scope":3978,"src":"5104:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3955,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3958,"mutability":"mutable","name":"b","nameLocation":"5123:1:16","nodeType":"VariableDeclaration","scope":3978,"src":"5115:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3957,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:16"},"returnParameters":{"id":3962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3978,"src":"5149:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3960,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:16"},"scope":5310,"src":"5071:294:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3996,"nodeType":"Block","src":"5502:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3989,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"5527:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3990,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"5531:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3992,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"5534:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3993,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"5537:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3988,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"5519:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3987,"id":3995,"nodeType":"Return","src":"5512:27:16"}]},"documentation":{"id":3979,"nodeType":"StructuredDocumentation","src":"5371:59:16","text":" @dev Returns the largest of two numbers."},"id":3997,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:16","nodeType":"FunctionDefinition","parameters":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"a","nameLocation":"5456:1:16","nodeType":"VariableDeclaration","scope":3997,"src":"5448:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3980,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3983,"mutability":"mutable","name":"b","nameLocation":"5467:1:16","nodeType":"VariableDeclaration","scope":3997,"src":"5459:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3982,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:16"},"returnParameters":{"id":3987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3997,"src":"5493:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3985,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:16"},"scope":5310,"src":"5435:111:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4015,"nodeType":"Block","src":"5684:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4008,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"5709:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4009,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"5713:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4011,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"5716:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4012,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"5719:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4007,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"5701:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4006,"id":4014,"nodeType":"Return","src":"5694:27:16"}]},"documentation":{"id":3998,"nodeType":"StructuredDocumentation","src":"5552:60:16","text":" @dev Returns the smallest of two numbers."},"id":4016,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:16","nodeType":"FunctionDefinition","parameters":{"id":4003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4000,"mutability":"mutable","name":"a","nameLocation":"5638:1:16","nodeType":"VariableDeclaration","scope":4016,"src":"5630:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3999,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4002,"mutability":"mutable","name":"b","nameLocation":"5649:1:16","nodeType":"VariableDeclaration","scope":4016,"src":"5641:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:16"},"returnParameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4016,"src":"5675:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:16"},"scope":5310,"src":"5617:111:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4038,"nodeType":"Block","src":"5912:82:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4026,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"5967:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4027,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"5971:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4029,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4030,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"5977:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4031,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"5981:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4033,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4025,"id":4037,"nodeType":"Return","src":"5959:28:16"}]},"documentation":{"id":4017,"nodeType":"StructuredDocumentation","src":"5734:102:16","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4039,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:16","nodeType":"FunctionDefinition","parameters":{"id":4022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4019,"mutability":"mutable","name":"a","nameLocation":"5866:1:16","nodeType":"VariableDeclaration","scope":4039,"src":"5858:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4021,"mutability":"mutable","name":"b","nameLocation":"5877:1:16","nodeType":"VariableDeclaration","scope":4039,"src":"5869:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:16"},"returnParameters":{"id":4025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4039,"src":"5903:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4023,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:16"},"scope":5310,"src":"5841:153:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4079,"nodeType":"Block","src":"6286:633:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4049,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"6300:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4060,"nodeType":"IfStatement","src":"6296:150:16","trueBody":{"id":4059,"nodeType":"Block","src":"6308:138:16","statements":[{"expression":{"arguments":[{"expression":{"id":4055,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"6412:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2182_$","typeString":"type(library Panic)"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2149,"src":"6412:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4052,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"6400:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2182_$","typeString":"type(library Panic)"}},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2181,"src":"6400:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4058,"nodeType":"ExpressionStatement","src":"6400:35:16"}]}},{"id":4078,"nodeType":"UncheckedBlock","src":"6829:84:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4063,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"6876:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4061,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"6860:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"6860:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4067,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"6887:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4071,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"6896:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4048,"id":4077,"nodeType":"Return","src":"6853:49:16"}]}]},"documentation":{"id":4040,"nodeType":"StructuredDocumentation","src":"6000:210:16","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4080,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:16","nodeType":"FunctionDefinition","parameters":{"id":4045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4042,"mutability":"mutable","name":"a","nameLocation":"6240:1:16","nodeType":"VariableDeclaration","scope":4080,"src":"6232:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4041,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4044,"mutability":"mutable","name":"b","nameLocation":"6251:1:16","nodeType":"VariableDeclaration","scope":4080,"src":"6243:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4043,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:16"},"returnParameters":{"id":4048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4080,"src":"6277:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4046,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:16"},"scope":5310,"src":"6215:704:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4215,"nodeType":"Block","src":"7340:3585:16","statements":[{"id":4214,"nodeType":"UncheckedBlock","src":"7350:3569:16","statements":[{"assignments":[4093,4095],"declarations":[{"constant":false,"id":4093,"mutability":"mutable","name":"high","nameLocation":"7383:4:16","nodeType":"VariableDeclaration","scope":4214,"src":"7375:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4095,"mutability":"mutable","name":"low","nameLocation":"7397:3:16","nodeType":"VariableDeclaration","scope":4214,"src":"7389:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4100,"initialValue":{"arguments":[{"id":4097,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"7411:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4098,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"7414:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4096,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"7404:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4101,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"7498:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4109,"nodeType":"IfStatement","src":"7494:365:16","trueBody":{"id":4108,"nodeType":"Block","src":"7509:350:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4104,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"7827:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4105,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"7833:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4091,"id":4107,"nodeType":"Return","src":"7820:24:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4110,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"7969:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4111,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"7984:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4128,"nodeType":"IfStatement","src":"7965:142:16","trueBody":{"id":4127,"nodeType":"Block","src":"7990:117:16","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4117,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"8028:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4120,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"8046:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2182_$","typeString":"type(library Panic)"}},"id":4121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2149,"src":"8046:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4122,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"8070:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2182_$","typeString":"type(library Panic)"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:16","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2145,"src":"8070:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4116,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"8020:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4113,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"8008:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2182_$","typeString":"type(library Panic)"}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2181,"src":"8008:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4126,"nodeType":"ExpressionStatement","src":"8008:84:16"}]}},{"assignments":[4130],"declarations":[{"constant":false,"id":4130,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:16","nodeType":"VariableDeclaration","scope":4214,"src":"8359:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4129,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4131,"nodeType":"VariableDeclarationStatement","src":"8359:17:16"},{"AST":{"nodeType":"YulBlock","src":"8415:283:16","statements":[{"nodeType":"YulAssignment","src":"8484:38:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:16"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:16"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:16"},"nodeType":"YulFunctionCall","src":"8497:25:16"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:16"}]},{"nodeType":"YulAssignment","src":"8604:37:16","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:16"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:16"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:16"},"nodeType":"YulFunctionCall","src":"8622:18:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:16"},"nodeType":"YulFunctionCall","src":"8612:29:16"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:16"}]},{"nodeType":"YulAssignment","src":"8658:26:16","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:16"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:16"},"nodeType":"YulFunctionCall","src":"8665:19:16"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4087,"isOffset":false,"isSlot":false,"src":"8510:11:16","valueSize":1},{"declaration":4093,"isOffset":false,"isSlot":false,"src":"8604:4:16","valueSize":1},{"declaration":4093,"isOffset":false,"isSlot":false,"src":"8616:4:16","valueSize":1},{"declaration":4095,"isOffset":false,"isSlot":false,"src":"8636:3:16","valueSize":1},{"declaration":4095,"isOffset":false,"isSlot":false,"src":"8658:3:16","valueSize":1},{"declaration":4095,"isOffset":false,"isSlot":false,"src":"8669:3:16","valueSize":1},{"declaration":4130,"isOffset":false,"isSlot":false,"src":"8484:9:16","valueSize":1},{"declaration":4130,"isOffset":false,"isSlot":false,"src":"8625:9:16","valueSize":1},{"declaration":4130,"isOffset":false,"isSlot":false,"src":"8674:9:16","valueSize":1},{"declaration":4083,"isOffset":false,"isSlot":false,"src":"8504:1:16","valueSize":1},{"declaration":4085,"isOffset":false,"isSlot":false,"src":"8507:1:16","valueSize":1}],"flags":["memory-safe"],"id":4132,"nodeType":"InlineAssembly","src":"8390:308:16"},{"assignments":[4134],"declarations":[{"constant":false,"id":4134,"mutability":"mutable","name":"twos","nameLocation":"8910:4:16","nodeType":"VariableDeclaration","scope":4214,"src":"8902:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4133,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4141,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4135,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"8917:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4137,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"8936:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4139,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:16"},{"AST":{"nodeType":"YulBlock","src":"8987:359:16","statements":[{"nodeType":"YulAssignment","src":"9052:37:16","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:16"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:16"},"nodeType":"YulFunctionCall","src":"9067:22:16"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:16"}]},{"nodeType":"YulAssignment","src":"9153:21:16","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:16"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:16"},"nodeType":"YulFunctionCall","src":"9160:14:16"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:16"}]},{"nodeType":"YulAssignment","src":"9293:39:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:16","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:16"},"nodeType":"YulFunctionCall","src":"9309:12:16"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:16"},"nodeType":"YulFunctionCall","src":"9305:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:16"},"nodeType":"YulFunctionCall","src":"9301:31:16"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4087,"isOffset":false,"isSlot":false,"src":"9052:11:16","valueSize":1},{"declaration":4087,"isOffset":false,"isSlot":false,"src":"9071:11:16","valueSize":1},{"declaration":4095,"isOffset":false,"isSlot":false,"src":"9153:3:16","valueSize":1},{"declaration":4095,"isOffset":false,"isSlot":false,"src":"9164:3:16","valueSize":1},{"declaration":4134,"isOffset":false,"isSlot":false,"src":"9084:4:16","valueSize":1},{"declaration":4134,"isOffset":false,"isSlot":false,"src":"9169:4:16","valueSize":1},{"declaration":4134,"isOffset":false,"isSlot":false,"src":"9293:4:16","valueSize":1},{"declaration":4134,"isOffset":false,"isSlot":false,"src":"9316:4:16","valueSize":1},{"declaration":4134,"isOffset":false,"isSlot":false,"src":"9323:4:16","valueSize":1}],"flags":["memory-safe"],"id":4142,"nodeType":"InlineAssembly","src":"8962:384:16"},{"expression":{"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4143,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"9409:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4144,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"9416:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4145,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"9423:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4148,"nodeType":"ExpressionStatement","src":"9409:18:16"},{"assignments":[4150],"declarations":[{"constant":false,"id":4150,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:16","nodeType":"VariableDeclaration","scope":4214,"src":"9762:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4149,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4157,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4152,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"9785:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4154,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:16"},{"expression":{"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4158,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10018:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4160,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"10033:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4161,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10047:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4165,"nodeType":"ExpressionStatement","src":"10018:36:16"},{"expression":{"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4166,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10088:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4168,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"10103:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4169,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10117:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4173,"nodeType":"ExpressionStatement","src":"10088:36:16"},{"expression":{"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4174,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10160:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4176,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"10175:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4177,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10189:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4181,"nodeType":"ExpressionStatement","src":"10160:36:16"},{"expression":{"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4182,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10231:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4184,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"10246:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4185,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10260:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4189,"nodeType":"ExpressionStatement","src":"10231:36:16"},{"expression":{"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4190,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10304:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4192,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"10319:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4193,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10333:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4197,"nodeType":"ExpressionStatement","src":"10304:36:16"},{"expression":{"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4198,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10378:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4200,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"10393:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4201,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10407:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4205,"nodeType":"ExpressionStatement","src":"10378:36:16"},{"expression":{"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4206,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"10859:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4207,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"10868:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4208,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10874:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4211,"nodeType":"ExpressionStatement","src":"10859:22:16"},{"expression":{"id":4212,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"10902:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4091,"id":4213,"nodeType":"Return","src":"10895:13:16"}]}]},"documentation":{"id":4081,"nodeType":"StructuredDocumentation","src":"6925:312:16","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4216,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:16","nodeType":"FunctionDefinition","parameters":{"id":4088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"x","nameLocation":"7266:1:16","nodeType":"VariableDeclaration","scope":4216,"src":"7258:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4085,"mutability":"mutable","name":"y","nameLocation":"7277:1:16","nodeType":"VariableDeclaration","scope":4216,"src":"7269:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4084,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4087,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:16","nodeType":"VariableDeclaration","scope":4216,"src":"7280:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4086,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:16"},"returnParameters":{"id":4091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4090,"mutability":"mutable","name":"result","nameLocation":"7332:6:16","nodeType":"VariableDeclaration","scope":4216,"src":"7324:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4089,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:16"},"scope":5310,"src":"7242:3683:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4252,"nodeType":"Block","src":"11164:128:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4232,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"11188:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4233,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"11191:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4234,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"11194:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4231,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4216,4253],"referencedDeclaration":4216,"src":"11181:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4239,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"11242:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}],"id":4238,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"11225:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3701_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4242,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"11262:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4243,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"11265:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4244,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"11268:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4241,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4236,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"11209:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"11209:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4230,"id":4251,"nodeType":"Return","src":"11174:111:16"}]},"documentation":{"id":4217,"nodeType":"StructuredDocumentation","src":"10931:118:16","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4253,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:16","nodeType":"FunctionDefinition","parameters":{"id":4227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4219,"mutability":"mutable","name":"x","nameLocation":"11078:1:16","nodeType":"VariableDeclaration","scope":4253,"src":"11070:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4218,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4221,"mutability":"mutable","name":"y","nameLocation":"11089:1:16","nodeType":"VariableDeclaration","scope":4253,"src":"11081:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4223,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:16","nodeType":"VariableDeclaration","scope":4253,"src":"11092:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4222,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4226,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:16","nodeType":"VariableDeclaration","scope":4253,"src":"11113:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"},"typeName":{"id":4225,"nodeType":"UserDefinedTypeName","pathNode":{"id":4224,"name":"Rounding","nameLocations":["11113:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":3701,"src":"11113:8:16"},"referencedDeclaration":3701,"src":"11113:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:16"},"returnParameters":{"id":4230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4253,"src":"11155:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4228,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:16"},"scope":5310,"src":"11054:238:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4302,"nodeType":"Block","src":"11500:245:16","statements":[{"id":4301,"nodeType":"UncheckedBlock","src":"11510:229:16","statements":[{"assignments":[4266,4268],"declarations":[{"constant":false,"id":4266,"mutability":"mutable","name":"high","nameLocation":"11543:4:16","nodeType":"VariableDeclaration","scope":4301,"src":"11535:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4265,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4268,"mutability":"mutable","name":"low","nameLocation":"11557:3:16","nodeType":"VariableDeclaration","scope":4301,"src":"11549:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4267,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4273,"initialValue":{"arguments":[{"id":4270,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"11571:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4271,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"11574:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4269,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"11564:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4274,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"11594:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4276,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"11607:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4287,"nodeType":"IfStatement","src":"11590:86:16","trueBody":{"id":4286,"nodeType":"Block","src":"11610:66:16","statements":[{"expression":{"arguments":[{"expression":{"id":4282,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"11640:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2182_$","typeString":"type(library Panic)"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:16","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2145,"src":"11640:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4279,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"11628:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2182_$","typeString":"type(library Panic)"}},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2181,"src":"11628:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4285,"nodeType":"ExpressionStatement","src":"11628:33:16"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4288,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"11697:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4290,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"11712:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4292,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"11719:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4296,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"11726:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4264,"id":4300,"nodeType":"Return","src":"11689:39:16"}]}]},"documentation":{"id":4254,"nodeType":"StructuredDocumentation","src":"11298:111:16","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4303,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:16","nodeType":"FunctionDefinition","parameters":{"id":4261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"x","nameLocation":"11438:1:16","nodeType":"VariableDeclaration","scope":4303,"src":"11430:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4258,"mutability":"mutable","name":"y","nameLocation":"11449:1:16","nodeType":"VariableDeclaration","scope":4303,"src":"11441:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4257,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4260,"mutability":"mutable","name":"n","nameLocation":"11458:1:16","nodeType":"VariableDeclaration","scope":4303,"src":"11452:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4259,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:16"},"returnParameters":{"id":4264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"result","nameLocation":"11492:6:16","nodeType":"VariableDeclaration","scope":4303,"src":"11484:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4262,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:16"},"scope":5310,"src":"11414:331:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4341,"nodeType":"Block","src":"11963:113:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4319,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"11987:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4320,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"11990:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4321,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"11993:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4318,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4303,4342],"referencedDeclaration":4303,"src":"11980:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4326,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"12031:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}],"id":4325,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"12014:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3701_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4329,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"12051:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4330,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"12054:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4332,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"12062:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4328,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4323,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"11998:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"11998:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4317,"id":4340,"nodeType":"Return","src":"11973:96:16"}]},"documentation":{"id":4304,"nodeType":"StructuredDocumentation","src":"11751:109:16","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4342,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:16","nodeType":"FunctionDefinition","parameters":{"id":4314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4306,"mutability":"mutable","name":"x","nameLocation":"11889:1:16","nodeType":"VariableDeclaration","scope":4342,"src":"11881:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4305,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4308,"mutability":"mutable","name":"y","nameLocation":"11900:1:16","nodeType":"VariableDeclaration","scope":4342,"src":"11892:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4307,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4310,"mutability":"mutable","name":"n","nameLocation":"11909:1:16","nodeType":"VariableDeclaration","scope":4342,"src":"11903:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4309,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4313,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:16","nodeType":"VariableDeclaration","scope":4342,"src":"11912:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"},"typeName":{"id":4312,"nodeType":"UserDefinedTypeName","pathNode":{"id":4311,"name":"Rounding","nameLocations":["11912:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":3701,"src":"11912:8:16"},"referencedDeclaration":3701,"src":"11912:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:16"},"returnParameters":{"id":4317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4342,"src":"11954:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4315,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:16"},"scope":5310,"src":"11865:211:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4438,"nodeType":"Block","src":"12710:1849:16","statements":[{"id":4437,"nodeType":"UncheckedBlock","src":"12720:1833:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4352,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"12748:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4357,"nodeType":"IfStatement","src":"12744:20:16","trueBody":{"expression":{"hexValue":"30","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4351,"id":4356,"nodeType":"Return","src":"12756:8:16"}},{"assignments":[4359],"declarations":[{"constant":false,"id":4359,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:16","nodeType":"VariableDeclaration","scope":4437,"src":"13235:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4358,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4363,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4360,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"13255:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4361,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"13259:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:16"},{"assignments":[4365],"declarations":[{"constant":false,"id":4365,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:16","nodeType":"VariableDeclaration","scope":4437,"src":"13274:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4364,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4367,"initialValue":{"id":4366,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"13288:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:16"},{"assignments":[4369],"declarations":[{"constant":false,"id":4369,"mutability":"mutable","name":"x","nameLocation":"13432:1:16","nodeType":"VariableDeclaration","scope":4437,"src":"13425:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4368,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4371,"initialValue":{"hexValue":"30","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:16"},{"assignments":[4373],"declarations":[{"constant":false,"id":4373,"mutability":"mutable","name":"y","nameLocation":"13458:1:16","nodeType":"VariableDeclaration","scope":4437,"src":"13451:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4372,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4375,"initialValue":{"hexValue":"31","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:16"},{"body":{"id":4412,"nodeType":"Block","src":"13501:882:16","statements":[{"assignments":[4380],"declarations":[{"constant":false,"id":4380,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:16","nodeType":"VariableDeclaration","scope":4412,"src":"13519:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4379,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4384,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4381,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"13538:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4382,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"13544:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:16"},{"expression":{"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4385,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"13573:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4386,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"13578:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4387,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4388,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"13678:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4389,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"13923:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4390,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"13929:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4391,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"13941:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4394,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4396,"nodeType":"ExpressionStatement","src":"13572:395:16"},{"expression":{"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4397,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"13987:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4398,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"13990:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4399,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4400,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"14072:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4401,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"14326:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4402,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"14330:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4405,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"14341:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4403,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:16","typeDescriptions":{}}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4411,"nodeType":"ExpressionStatement","src":"13986:382:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4376,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"13485:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4413,"nodeType":"WhileStatement","src":"13478:905:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4414,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"14401:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4419,"nodeType":"IfStatement","src":"14397:22:16","trueBody":{"expression":{"hexValue":"30","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4351,"id":4418,"nodeType":"Return","src":"14411:8:16"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4421,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"14470:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4424,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"14477:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:16","subExpression":{"id":4427,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"14490:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4425,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:16","typeDescriptions":{}}},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4433,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"14502:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4431,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:16","typeDescriptions":{}}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4420,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"14462:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4351,"id":4436,"nodeType":"Return","src":"14455:50:16"}]}]},"documentation":{"id":4343,"nodeType":"StructuredDocumentation","src":"12082:553:16","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4439,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:16","nodeType":"FunctionDefinition","parameters":{"id":4348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4345,"mutability":"mutable","name":"a","nameLocation":"12664:1:16","nodeType":"VariableDeclaration","scope":4439,"src":"12656:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4344,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4347,"mutability":"mutable","name":"n","nameLocation":"12675:1:16","nodeType":"VariableDeclaration","scope":4439,"src":"12667:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4346,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:16"},"returnParameters":{"id":4351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4439,"src":"12701:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4349,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:16"},"scope":5310,"src":"12640:1919:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4459,"nodeType":"Block","src":"15159:82:16","statements":[{"id":4458,"nodeType":"UncheckedBlock","src":"15169:66:16","statements":[{"expression":{"arguments":[{"id":4451,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"15212:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4452,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"15215:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4455,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"15222:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4449,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"15200:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5310_$","typeString":"type(library Math)"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:16","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4496,"src":"15200:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4448,"id":4457,"nodeType":"Return","src":"15193:31:16"}]}]},"documentation":{"id":4440,"nodeType":"StructuredDocumentation","src":"14565:514:16","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4460,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:16","nodeType":"FunctionDefinition","parameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4442,"mutability":"mutable","name":"a","nameLocation":"15113:1:16","nodeType":"VariableDeclaration","scope":4460,"src":"15105:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4441,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4444,"mutability":"mutable","name":"p","nameLocation":"15124:1:16","nodeType":"VariableDeclaration","scope":4460,"src":"15116:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4443,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:16"},"returnParameters":{"id":4448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4460,"src":"15150:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4446,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:16"},"scope":5310,"src":"15084:157:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4495,"nodeType":"Block","src":"16011:174:16","statements":[{"assignments":[4473,4475],"declarations":[{"constant":false,"id":4473,"mutability":"mutable","name":"success","nameLocation":"16027:7:16","nodeType":"VariableDeclaration","scope":4495,"src":"16022:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4472,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4475,"mutability":"mutable","name":"result","nameLocation":"16044:6:16","nodeType":"VariableDeclaration","scope":4495,"src":"16036:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4474,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4481,"initialValue":{"arguments":[{"id":4477,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"16064:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4478,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"16067:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4479,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"16070:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4476,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4520,4602],"referencedDeclaration":4520,"src":"16054:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:16"},{"condition":{"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:16","subExpression":{"id":4482,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"16087:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4492,"nodeType":"IfStatement","src":"16082:74:16","trueBody":{"id":4491,"nodeType":"Block","src":"16096:60:16","statements":[{"expression":{"arguments":[{"expression":{"id":4487,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"16122:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2182_$","typeString":"type(library Panic)"}},"id":4488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2149,"src":"16122:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4484,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"16110:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2182_$","typeString":"type(library Panic)"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2181,"src":"16110:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4490,"nodeType":"ExpressionStatement","src":"16110:35:16"}]}},{"expression":{"id":4493,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"16172:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4471,"id":4494,"nodeType":"Return","src":"16165:13:16"}]},"documentation":{"id":4461,"nodeType":"StructuredDocumentation","src":"15247:678:16","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4496,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:16","nodeType":"FunctionDefinition","parameters":{"id":4468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4463,"mutability":"mutable","name":"b","nameLocation":"15954:1:16","nodeType":"VariableDeclaration","scope":4496,"src":"15946:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4462,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4465,"mutability":"mutable","name":"e","nameLocation":"15965:1:16","nodeType":"VariableDeclaration","scope":4496,"src":"15957:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4464,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4467,"mutability":"mutable","name":"m","nameLocation":"15976:1:16","nodeType":"VariableDeclaration","scope":4496,"src":"15968:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:16"},"returnParameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4496,"src":"16002:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4469,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:16"},"scope":5310,"src":"15930:255:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4519,"nodeType":"Block","src":"17039:1493:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4510,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"17053:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4517,"nodeType":"IfStatement","src":"17049:29:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4515,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4509,"id":4516,"nodeType":"Return","src":"17061:17:16"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:16","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:16"},"nodeType":"YulFunctionCall","src":"17138:11:16"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:16","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:16","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:16"},"nodeType":"YulFunctionCall","src":"18050:17:16"},"nodeType":"YulExpressionStatement","src":"18050:17:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:16"},"nodeType":"YulFunctionCall","src":"18087:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:16","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:16"},"nodeType":"YulFunctionCall","src":"18080:28:16"},"nodeType":"YulExpressionStatement","src":"18080:28:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:16"},"nodeType":"YulFunctionCall","src":"18128:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:16","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:16"},"nodeType":"YulFunctionCall","src":"18121:28:16"},"nodeType":"YulExpressionStatement","src":"18121:28:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:16"},"nodeType":"YulFunctionCall","src":"18169:14:16"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:16"},"nodeType":"YulFunctionCall","src":"18162:25:16"},"nodeType":"YulExpressionStatement","src":"18162:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:16","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:16"},"nodeType":"YulFunctionCall","src":"18207:14:16"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:16"},"nodeType":"YulFunctionCall","src":"18200:25:16"},"nodeType":"YulExpressionStatement","src":"18200:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:16","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:16"},"nodeType":"YulFunctionCall","src":"18245:14:16"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:16"},"nodeType":"YulFunctionCall","src":"18238:25:16"},"nodeType":"YulExpressionStatement","src":"18238:25:16"},{"nodeType":"YulAssignment","src":"18425:57:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:16"},"nodeType":"YulFunctionCall","src":"18447:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:16","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:16","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:16","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:16"},"nodeType":"YulFunctionCall","src":"18436:46:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:16"}]},{"nodeType":"YulAssignment","src":"18495:21:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:16","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:16"},"nodeType":"YulFunctionCall","src":"18505:11:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4499,"isOffset":false,"isSlot":false,"src":"18185:1:16","valueSize":1},{"declaration":4501,"isOffset":false,"isSlot":false,"src":"18223:1:16","valueSize":1},{"declaration":4503,"isOffset":false,"isSlot":false,"src":"18261:1:16","valueSize":1},{"declaration":4508,"isOffset":false,"isSlot":false,"src":"18495:6:16","valueSize":1},{"declaration":4506,"isOffset":false,"isSlot":false,"src":"18425:7:16","valueSize":1}],"flags":["memory-safe"],"id":4518,"nodeType":"InlineAssembly","src":"17088:1438:16"}]},"documentation":{"id":4497,"nodeType":"StructuredDocumentation","src":"16191:738:16","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4520,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:16","nodeType":"FunctionDefinition","parameters":{"id":4504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4499,"mutability":"mutable","name":"b","nameLocation":"16961:1:16","nodeType":"VariableDeclaration","scope":4520,"src":"16953:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4498,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4501,"mutability":"mutable","name":"e","nameLocation":"16972:1:16","nodeType":"VariableDeclaration","scope":4520,"src":"16964:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4500,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4503,"mutability":"mutable","name":"m","nameLocation":"16983:1:16","nodeType":"VariableDeclaration","scope":4520,"src":"16975:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:16"},"returnParameters":{"id":4509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4506,"mutability":"mutable","name":"success","nameLocation":"17014:7:16","nodeType":"VariableDeclaration","scope":4520,"src":"17009:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4505,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4508,"mutability":"mutable","name":"result","nameLocation":"17031:6:16","nodeType":"VariableDeclaration","scope":4520,"src":"17023:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4507,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:16"},"scope":5310,"src":"16934:1598:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4555,"nodeType":"Block","src":"18729:179:16","statements":[{"assignments":[4533,4535],"declarations":[{"constant":false,"id":4533,"mutability":"mutable","name":"success","nameLocation":"18745:7:16","nodeType":"VariableDeclaration","scope":4555,"src":"18740:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4532,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4535,"mutability":"mutable","name":"result","nameLocation":"18767:6:16","nodeType":"VariableDeclaration","scope":4555,"src":"18754:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4534,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4541,"initialValue":{"arguments":[{"id":4537,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4523,"src":"18787:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4538,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"18790:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4539,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"18793:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4536,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4520,4602],"referencedDeclaration":4602,"src":"18777:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:16"},{"condition":{"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:16","subExpression":{"id":4542,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"18810:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4552,"nodeType":"IfStatement","src":"18805:74:16","trueBody":{"id":4551,"nodeType":"Block","src":"18819:60:16","statements":[{"expression":{"arguments":[{"expression":{"id":4547,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"18845:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2182_$","typeString":"type(library Panic)"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:16","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2149,"src":"18845:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4544,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"18833:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2182_$","typeString":"type(library Panic)"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:16","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2181,"src":"18833:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4550,"nodeType":"ExpressionStatement","src":"18833:35:16"}]}},{"expression":{"id":4553,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"18895:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4531,"id":4554,"nodeType":"Return","src":"18888:13:16"}]},"documentation":{"id":4521,"nodeType":"StructuredDocumentation","src":"18538:85:16","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4556,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:16","nodeType":"FunctionDefinition","parameters":{"id":4528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4523,"mutability":"mutable","name":"b","nameLocation":"18657:1:16","nodeType":"VariableDeclaration","scope":4556,"src":"18644:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4522,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4525,"mutability":"mutable","name":"e","nameLocation":"18673:1:16","nodeType":"VariableDeclaration","scope":4556,"src":"18660:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4524,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4527,"mutability":"mutable","name":"m","nameLocation":"18689:1:16","nodeType":"VariableDeclaration","scope":4556,"src":"18676:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4526,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:16"},"returnParameters":{"id":4531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4556,"src":"18715:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4529,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:16"},"scope":5310,"src":"18628:280:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4601,"nodeType":"Block","src":"19162:771:16","statements":[{"condition":{"arguments":[{"id":4571,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"19187:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4570,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"19176:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4580,"nodeType":"IfStatement","src":"19172:47:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4574,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4569,"id":4579,"nodeType":"Return","src":"19191:28:16"}},{"assignments":[4582],"declarations":[{"constant":false,"id":4582,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:16","nodeType":"VariableDeclaration","scope":4601,"src":"19230:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4581,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4585,"initialValue":{"expression":{"id":4583,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"19245:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:16","memberName":"length","nodeType":"MemberAccess","src":"19245:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:16"},{"expression":{"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4586,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"19335:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4589,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"19361:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:16","memberName":"length","nodeType":"MemberAccess","src":"19361:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4591,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"19371:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:16","memberName":"length","nodeType":"MemberAccess","src":"19371:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4593,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"19381:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4594,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"19387:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4595,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"19390:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4596,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"19393:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4587,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4599,"nodeType":"ExpressionStatement","src":"19335:60:16"},{"AST":{"nodeType":"YulBlock","src":"19431:496:16","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:16","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:16"},"nodeType":"YulFunctionCall","src":"19460:17:16"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:16","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:16","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:16"},"nodeType":"YulFunctionCall","src":"19589:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:16","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:16"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:16"},"nodeType":"YulFunctionCall","src":"19611:13:16"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:16"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:16"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:16"},"nodeType":"YulFunctionCall","src":"19578:62:16"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:16"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:16"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:16"},"nodeType":"YulFunctionCall","src":"19789:20:16"},"nodeType":"YulExpressionStatement","src":"19789:20:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:16","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:16"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:16"},"nodeType":"YulFunctionCall","src":"19898:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:16"},"nodeType":"YulFunctionCall","src":"19885:32:16"},"nodeType":"YulExpressionStatement","src":"19885:32:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":4582,"isOffset":false,"isSlot":false,"src":"19635:4:16","valueSize":1},{"declaration":4582,"isOffset":false,"isSlot":false,"src":"19804:4:16","valueSize":1},{"declaration":4582,"isOffset":false,"isSlot":false,"src":"19911:4:16","valueSize":1},{"declaration":4568,"isOffset":false,"isSlot":false,"src":"19464:6:16","valueSize":1},{"declaration":4568,"isOffset":false,"isSlot":false,"src":"19617:6:16","valueSize":1},{"declaration":4568,"isOffset":false,"isSlot":false,"src":"19796:6:16","valueSize":1},{"declaration":4566,"isOffset":false,"isSlot":false,"src":"19567:7:16","valueSize":1}],"flags":["memory-safe"],"id":4600,"nodeType":"InlineAssembly","src":"19406:521:16"}]},"documentation":{"id":4557,"nodeType":"StructuredDocumentation","src":"18914:88:16","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4602,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:16","nodeType":"FunctionDefinition","parameters":{"id":4564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"b","nameLocation":"19048:1:16","nodeType":"VariableDeclaration","scope":4602,"src":"19035:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4558,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4561,"mutability":"mutable","name":"e","nameLocation":"19072:1:16","nodeType":"VariableDeclaration","scope":4602,"src":"19059:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4560,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4563,"mutability":"mutable","name":"m","nameLocation":"19096:1:16","nodeType":"VariableDeclaration","scope":4602,"src":"19083:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4562,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:16"},"returnParameters":{"id":4569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4566,"mutability":"mutable","name":"success","nameLocation":"19132:7:16","nodeType":"VariableDeclaration","scope":4602,"src":"19127:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4565,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4568,"mutability":"mutable","name":"result","nameLocation":"19154:6:16","nodeType":"VariableDeclaration","scope":4602,"src":"19141:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4567,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:16"},"scope":5310,"src":"19007:926:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4634,"nodeType":"Block","src":"20088:176:16","statements":[{"body":{"id":4630,"nodeType":"Block","src":"20145:92:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4621,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"20163:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4623,"indexExpression":{"id":4622,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"20173:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4629,"nodeType":"IfStatement","src":"20159:68:16","trueBody":{"id":4628,"nodeType":"Block","src":"20182:45:16","statements":[{"expression":{"hexValue":"66616c7365","id":4626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4609,"id":4627,"nodeType":"Return","src":"20200:12:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4614,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"20118:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4615,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"20122:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:16","memberName":"length","nodeType":"MemberAccess","src":"20122:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4631,"initializationExpression":{"assignments":[4611],"declarations":[{"constant":false,"id":4611,"mutability":"mutable","name":"i","nameLocation":"20111:1:16","nodeType":"VariableDeclaration","scope":4631,"src":"20103:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4610,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4613,"initialValue":{"hexValue":"30","id":4612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:16"},"loopExpression":{"expression":{"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:16","subExpression":{"id":4618,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"20142:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4620,"nodeType":"ExpressionStatement","src":"20140:3:16"},"nodeType":"ForStatement","src":"20098:139:16"},{"expression":{"hexValue":"74727565","id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4609,"id":4633,"nodeType":"Return","src":"20246:11:16"}]},"documentation":{"id":4603,"nodeType":"StructuredDocumentation","src":"19939:72:16","text":" @dev Returns whether the provided byte array is zero."},"id":4635,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:16","nodeType":"FunctionDefinition","parameters":{"id":4606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4605,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:16","nodeType":"VariableDeclaration","scope":4635,"src":"20036:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4604,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:16"},"returnParameters":{"id":4609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4635,"src":"20082:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4607,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:16"},"scope":5310,"src":"20016:248:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4853,"nodeType":"Block","src":"20624:5124:16","statements":[{"id":4852,"nodeType":"UncheckedBlock","src":"20634:5108:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4643,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"20728:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4649,"nodeType":"IfStatement","src":"20724:53:16","trueBody":{"id":4648,"nodeType":"Block","src":"20736:41:16","statements":[{"expression":{"id":4646,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"20761:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4642,"id":4647,"nodeType":"Return","src":"20754:8:16"}]}},{"assignments":[4651],"declarations":[{"constant":false,"id":4651,"mutability":"mutable","name":"aa","nameLocation":"21712:2:16","nodeType":"VariableDeclaration","scope":4852,"src":"21704:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4650,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4653,"initialValue":{"id":4652,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"21717:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:16"},{"assignments":[4655],"declarations":[{"constant":false,"id":4655,"mutability":"mutable","name":"xn","nameLocation":"21740:2:16","nodeType":"VariableDeclaration","scope":4852,"src":"21732:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4654,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4657,"initialValue":{"hexValue":"31","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4658,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"21765:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4673,"nodeType":"IfStatement","src":"21761:92:16","trueBody":{"id":4672,"nodeType":"Block","src":"21783:70:16","statements":[{"expression":{"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4664,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"21801:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4667,"nodeType":"ExpressionStatement","src":"21801:10:16"},{"expression":{"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4668,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"21829:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4671,"nodeType":"ExpressionStatement","src":"21829:9:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4674,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"21870:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4678,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4689,"nodeType":"IfStatement","src":"21866:90:16","trueBody":{"id":4688,"nodeType":"Block","src":"21887:69:16","statements":[{"expression":{"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4680,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"21905:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4683,"nodeType":"ExpressionStatement","src":"21905:9:16"},{"expression":{"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4684,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"21932:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4687,"nodeType":"ExpressionStatement","src":"21932:9:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4690,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"21973:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4694,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4705,"nodeType":"IfStatement","src":"21969:90:16","trueBody":{"id":4704,"nodeType":"Block","src":"21990:69:16","statements":[{"expression":{"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4696,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"22008:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4699,"nodeType":"ExpressionStatement","src":"22008:9:16"},{"expression":{"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4700,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"22035:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4703,"nodeType":"ExpressionStatement","src":"22035:9:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4706,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"22076:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:16","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4710,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:16","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4721,"nodeType":"IfStatement","src":"22072:89:16","trueBody":{"id":4720,"nodeType":"Block","src":"22093:68:16","statements":[{"expression":{"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4712,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"22111:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4715,"nodeType":"ExpressionStatement","src":"22111:9:16"},{"expression":{"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4716,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"22138:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4719,"nodeType":"ExpressionStatement","src":"22138:8:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4722,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"22178:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4726,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4737,"nodeType":"IfStatement","src":"22174:87:16","trueBody":{"id":4736,"nodeType":"Block","src":"22194:67:16","statements":[{"expression":{"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4728,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"22212:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4731,"nodeType":"ExpressionStatement","src":"22212:8:16"},{"expression":{"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4732,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"22238:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4735,"nodeType":"ExpressionStatement","src":"22238:8:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4738,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"22278:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4753,"nodeType":"IfStatement","src":"22274:87:16","trueBody":{"id":4752,"nodeType":"Block","src":"22294:67:16","statements":[{"expression":{"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4744,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"22312:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4747,"nodeType":"ExpressionStatement","src":"22312:8:16"},{"expression":{"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4748,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"22338:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4751,"nodeType":"ExpressionStatement","src":"22338:8:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4754,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"22378:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4765,"nodeType":"IfStatement","src":"22374:61:16","trueBody":{"id":4764,"nodeType":"Block","src":"22394:41:16","statements":[{"expression":{"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4760,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"22412:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4763,"nodeType":"ExpressionStatement","src":"22412:8:16"}]}},{"expression":{"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4766,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"22855:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4768,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"22865:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4770,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4774,"nodeType":"ExpressionStatement","src":"22855:18:16"},{"expression":{"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4775,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"24760:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4776,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"24766:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4777,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"24771:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4778,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"24775:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4785,"nodeType":"ExpressionStatement","src":"24760:23:16"},{"expression":{"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4786,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"24869:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4787,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"24875:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4788,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"24880:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4789,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"24884:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4792,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4796,"nodeType":"ExpressionStatement","src":"24869:23:16"},{"expression":{"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4797,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"24980:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4798,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"24986:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4799,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"24991:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4800,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"24995:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4807,"nodeType":"ExpressionStatement","src":"24980:23:16"},{"expression":{"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4808,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25089:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4809,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25095:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4810,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"25100:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4811,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25104:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4814,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4818,"nodeType":"ExpressionStatement","src":"25089:23:16"},{"expression":{"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4819,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25199:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4820,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25205:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4821,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"25210:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4822,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25214:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4829,"nodeType":"ExpressionStatement","src":"25199:23:16"},{"expression":{"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4830,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25309:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4831,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25315:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4832,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"25320:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4833,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25324:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4840,"nodeType":"ExpressionStatement","src":"25309:23:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4841,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25698:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4844,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25719:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4845,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"25724:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4846,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25728:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4842,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"25703:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"25703:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4642,"id":4851,"nodeType":"Return","src":"25691:40:16"}]}]},"documentation":{"id":4636,"nodeType":"StructuredDocumentation","src":"20270:292:16","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4854,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:16","nodeType":"FunctionDefinition","parameters":{"id":4639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4638,"mutability":"mutable","name":"a","nameLocation":"20589:1:16","nodeType":"VariableDeclaration","scope":4854,"src":"20581:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4637,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:16"},"returnParameters":{"id":4642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4854,"src":"20615:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4640,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:16"},"scope":5310,"src":"20567:5181:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4887,"nodeType":"Block","src":"25921:171:16","statements":[{"id":4886,"nodeType":"UncheckedBlock","src":"25931:155:16","statements":[{"assignments":[4866],"declarations":[{"constant":false,"id":4866,"mutability":"mutable","name":"result","nameLocation":"25963:6:16","nodeType":"VariableDeclaration","scope":4886,"src":"25955:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4865,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4870,"initialValue":{"arguments":[{"id":4868,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"25977:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4867,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4854,4888],"referencedDeclaration":4854,"src":"25972:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4871,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"26000:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4875,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"26042:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}],"id":4874,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"26025:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3701_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4877,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"26055:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4878,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"26064:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4880,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"26073:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4872,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"26009:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"26009:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4864,"id":4885,"nodeType":"Return","src":"25993:82:16"}]}]},"documentation":{"id":4855,"nodeType":"StructuredDocumentation","src":"25754:86:16","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4888,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:16","nodeType":"FunctionDefinition","parameters":{"id":4861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4857,"mutability":"mutable","name":"a","nameLocation":"25867:1:16","nodeType":"VariableDeclaration","scope":4888,"src":"25859:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4856,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4860,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:16","nodeType":"VariableDeclaration","scope":4888,"src":"25870:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"},"typeName":{"id":4859,"nodeType":"UserDefinedTypeName","pathNode":{"id":4858,"name":"Rounding","nameLocations":["25870:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":3701,"src":"25870:8:16"},"referencedDeclaration":3701,"src":"25870:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:16"},"returnParameters":{"id":4864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4888,"src":"25912:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4862,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:16"},"scope":5310,"src":"25845:247:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4978,"nodeType":"Block","src":"26281:2334:16","statements":[{"expression":{"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4896,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"26363:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4899,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"26383:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4897,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"26367:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"26367:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:16","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4906,"nodeType":"ExpressionStatement","src":"26363:64:16"},{"expression":{"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4907,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"26503:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4910,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"26525:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4911,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"26530:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4913,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4908,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"26508:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"26508:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:16","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4920,"nodeType":"ExpressionStatement","src":"26503:56:16"},{"expression":{"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4921,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"26634:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4924,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"26656:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4925,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"26661:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4927,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4922,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"26639:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"26639:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:16","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4934,"nodeType":"ExpressionStatement","src":"26634:48:16"},{"expression":{"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4935,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"26757:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4938,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"26779:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4939,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"26784:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:16","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4936,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"26762:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"26762:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4948,"nodeType":"ExpressionStatement","src":"26757:44:16"},{"expression":{"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4949,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"26874:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4952,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"26896:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4953,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"26901:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4955,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4950,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"26879:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"26879:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4962,"nodeType":"ExpressionStatement","src":"26874:42:16"},{"expression":{"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4963,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"26988:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4966,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"27010:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4967,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"27015:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4969,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4964,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"26993:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"26993:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4976,"nodeType":"ExpressionStatement","src":"26988:41:16"},{"AST":{"nodeType":"YulBlock","src":"28490:119:16","statements":[{"nodeType":"YulAssignment","src":"28504:95:16","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:16"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:16"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:16"},"nodeType":"YulFunctionCall","src":"28520:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:16","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:16"},"nodeType":"YulFunctionCall","src":"28515:83:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:16"},"nodeType":"YulFunctionCall","src":"28509:90:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4894,"isOffset":false,"isSlot":false,"src":"28504:1:16","valueSize":1},{"declaration":4894,"isOffset":false,"isSlot":false,"src":"28512:1:16","valueSize":1},{"declaration":4894,"isOffset":false,"isSlot":false,"src":"28524:1:16","valueSize":1},{"declaration":4891,"isOffset":false,"isSlot":false,"src":"28527:1:16","valueSize":1}],"flags":["memory-safe"],"id":4977,"nodeType":"InlineAssembly","src":"28465:144:16"}]},"documentation":{"id":4889,"nodeType":"StructuredDocumentation","src":"26098:119:16","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4979,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:16","nodeType":"FunctionDefinition","parameters":{"id":4892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4891,"mutability":"mutable","name":"x","nameLocation":"26244:1:16","nodeType":"VariableDeclaration","scope":4979,"src":"26236:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4890,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:16"},"returnParameters":{"id":4895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4894,"mutability":"mutable","name":"r","nameLocation":"26278:1:16","nodeType":"VariableDeclaration","scope":4979,"src":"26270:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4893,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:16"},"scope":5310,"src":"26222:2393:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5012,"nodeType":"Block","src":"28848:175:16","statements":[{"id":5011,"nodeType":"UncheckedBlock","src":"28858:159:16","statements":[{"assignments":[4991],"declarations":[{"constant":false,"id":4991,"mutability":"mutable","name":"result","nameLocation":"28890:6:16","nodeType":"VariableDeclaration","scope":5011,"src":"28882:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4990,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4995,"initialValue":{"arguments":[{"id":4993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"28904:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4992,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4979,5013],"referencedDeclaration":4979,"src":"28899:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"28931:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5000,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"28973:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}],"id":4999,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"28956:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3701_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5003,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"28991:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"29000:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4997,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"28940:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"28940:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4989,"id":5010,"nodeType":"Return","src":"28924:82:16"}]}]},"documentation":{"id":4980,"nodeType":"StructuredDocumentation","src":"28621:142:16","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5013,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:16","nodeType":"FunctionDefinition","parameters":{"id":4986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4982,"mutability":"mutable","name":"value","nameLocation":"28790:5:16","nodeType":"VariableDeclaration","scope":5013,"src":"28782:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4981,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4985,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:16","nodeType":"VariableDeclaration","scope":5013,"src":"28797:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"},"typeName":{"id":4984,"nodeType":"UserDefinedTypeName","pathNode":{"id":4983,"name":"Rounding","nameLocations":["28797:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":3701,"src":"28797:8:16"},"referencedDeclaration":3701,"src":"28797:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:16"},"returnParameters":{"id":4989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5013,"src":"28839:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4987,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:16"},"scope":5310,"src":"28768:255:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5141,"nodeType":"Block","src":"29216:854:16","statements":[{"assignments":[5022],"declarations":[{"constant":false,"id":5022,"mutability":"mutable","name":"result","nameLocation":"29234:6:16","nodeType":"VariableDeclaration","scope":5141,"src":"29226:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5021,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5024,"initialValue":{"hexValue":"30","id":5023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:16"},{"id":5138,"nodeType":"UncheckedBlock","src":"29254:787:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"29282:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5041,"nodeType":"IfStatement","src":"29278:103:16","trueBody":{"id":5040,"nodeType":"Block","src":"29301:80:16","statements":[{"expression":{"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"29319:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5035,"nodeType":"ExpressionStatement","src":"29319:17:16"},{"expression":{"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5036,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"29354:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5039,"nodeType":"ExpressionStatement","src":"29354:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"29398:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5058,"nodeType":"IfStatement","src":"29394:103:16","trueBody":{"id":5057,"nodeType":"Block","src":"29417:80:16","statements":[{"expression":{"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"29435:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5052,"nodeType":"ExpressionStatement","src":"29435:17:16"},{"expression":{"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5053,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"29470:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5056,"nodeType":"ExpressionStatement","src":"29470:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"29514:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5075,"nodeType":"IfStatement","src":"29510:103:16","trueBody":{"id":5074,"nodeType":"Block","src":"29533:80:16","statements":[{"expression":{"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"29551:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5069,"nodeType":"ExpressionStatement","src":"29551:17:16"},{"expression":{"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5070,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"29586:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5073,"nodeType":"ExpressionStatement","src":"29586:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"29630:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5092,"nodeType":"IfStatement","src":"29626:100:16","trueBody":{"id":5091,"nodeType":"Block","src":"29648:78:16","statements":[{"expression":{"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"29666:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5086,"nodeType":"ExpressionStatement","src":"29666:16:16"},{"expression":{"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5087,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"29700:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5090,"nodeType":"ExpressionStatement","src":"29700:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"29743:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5109,"nodeType":"IfStatement","src":"29739:100:16","trueBody":{"id":5108,"nodeType":"Block","src":"29761:78:16","statements":[{"expression":{"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"29779:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5103,"nodeType":"ExpressionStatement","src":"29779:16:16"},{"expression":{"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5104,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"29813:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5107,"nodeType":"ExpressionStatement","src":"29813:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"29856:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5126,"nodeType":"IfStatement","src":"29852:100:16","trueBody":{"id":5125,"nodeType":"Block","src":"29874:78:16","statements":[{"expression":{"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"29892:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5120,"nodeType":"ExpressionStatement","src":"29892:16:16"},{"expression":{"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5121,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"29926:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5124,"nodeType":"ExpressionStatement","src":"29926:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"29969:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5137,"nodeType":"IfStatement","src":"29965:66:16","trueBody":{"id":5136,"nodeType":"Block","src":"29987:44:16","statements":[{"expression":{"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5132,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"30005:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5135,"nodeType":"ExpressionStatement","src":"30005:11:16"}]}}]},{"expression":{"id":5139,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"30057:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5020,"id":5140,"nodeType":"Return","src":"30050:13:16"}]},"documentation":{"id":5014,"nodeType":"StructuredDocumentation","src":"29029:120:16","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5142,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:16","nodeType":"FunctionDefinition","parameters":{"id":5017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5016,"mutability":"mutable","name":"value","nameLocation":"29177:5:16","nodeType":"VariableDeclaration","scope":5142,"src":"29169:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5015,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:16"},"returnParameters":{"id":5020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5142,"src":"29207:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5018,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:16"},"scope":5310,"src":"29154:916:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5175,"nodeType":"Block","src":"30305:177:16","statements":[{"id":5174,"nodeType":"UncheckedBlock","src":"30315:161:16","statements":[{"assignments":[5154],"declarations":[{"constant":false,"id":5154,"mutability":"mutable","name":"result","nameLocation":"30347:6:16","nodeType":"VariableDeclaration","scope":5174,"src":"30339:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5153,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5158,"initialValue":{"arguments":[{"id":5156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"30362:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5155,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5142,5176],"referencedDeclaration":5142,"src":"30356:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5159,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"30389:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5163,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"30431:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}],"id":5162,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"30414:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3701_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5166,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"30450:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"30459:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5160,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"30398:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"30398:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5152,"id":5173,"nodeType":"Return","src":"30382:83:16"}]}]},"documentation":{"id":5143,"nodeType":"StructuredDocumentation","src":"30076:143:16","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5176,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:16","nodeType":"FunctionDefinition","parameters":{"id":5149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5145,"mutability":"mutable","name":"value","nameLocation":"30247:5:16","nodeType":"VariableDeclaration","scope":5176,"src":"30239:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5144,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5148,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:16","nodeType":"VariableDeclaration","scope":5176,"src":"30254:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"},"typeName":{"id":5147,"nodeType":"UserDefinedTypeName","pathNode":{"id":5146,"name":"Rounding","nameLocations":["30254:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":3701,"src":"30254:8:16"},"referencedDeclaration":3701,"src":"30254:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:16"},"returnParameters":{"id":5152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5176,"src":"30296:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5150,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:16"},"scope":5310,"src":"30224:258:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5252,"nodeType":"Block","src":"30800:675:16","statements":[{"expression":{"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5184,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"30882:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5187,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"30902:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5185,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"30886:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"30886:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:16","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5194,"nodeType":"ExpressionStatement","src":"30882:64:16"},{"expression":{"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5195,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"31022:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5198,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"31044:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5199,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"31049:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:16","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5196,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"31027:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"31027:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:16","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5208,"nodeType":"ExpressionStatement","src":"31022:56:16"},{"expression":{"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5209,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"31153:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5212,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"31175:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5213,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"31180:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5215,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:16","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5210,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"31158:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"31158:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:16","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5222,"nodeType":"ExpressionStatement","src":"31153:48:16"},{"expression":{"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5223,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"31276:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5226,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"31298:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5227,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"31303:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:16","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5224,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"31281:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"31281:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5236,"nodeType":"ExpressionStatement","src":"31276:44:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5237,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"31426:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5243,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"31453:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5244,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"31458:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5241,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"31436:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"31436:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5183,"id":5251,"nodeType":"Return","src":"31418:50:16"}]},"documentation":{"id":5177,"nodeType":"StructuredDocumentation","src":"30488:246:16","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5253,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:16","nodeType":"FunctionDefinition","parameters":{"id":5180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5179,"mutability":"mutable","name":"x","nameLocation":"30763:1:16","nodeType":"VariableDeclaration","scope":5253,"src":"30755:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5178,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:16"},"returnParameters":{"id":5183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5182,"mutability":"mutable","name":"r","nameLocation":"30797:1:16","nodeType":"VariableDeclaration","scope":5253,"src":"30789:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5181,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:16"},"scope":5310,"src":"30739:736:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5289,"nodeType":"Block","src":"31712:184:16","statements":[{"id":5288,"nodeType":"UncheckedBlock","src":"31722:168:16","statements":[{"assignments":[5265],"declarations":[{"constant":false,"id":5265,"mutability":"mutable","name":"result","nameLocation":"31754:6:16","nodeType":"VariableDeclaration","scope":5288,"src":"31746:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5264,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5269,"initialValue":{"arguments":[{"id":5267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"31770:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5266,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5253,5290],"referencedDeclaration":5253,"src":"31763:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5270,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"31797:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5274,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"31839:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}],"id":5273,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"31822:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3701_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5277,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"31858:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"31873:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5271,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"31806:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"31806:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5263,"id":5287,"nodeType":"Return","src":"31790:89:16"}]}]},"documentation":{"id":5254,"nodeType":"StructuredDocumentation","src":"31481:144:16","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5290,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:16","nodeType":"FunctionDefinition","parameters":{"id":5260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5256,"mutability":"mutable","name":"value","nameLocation":"31654:5:16","nodeType":"VariableDeclaration","scope":5290,"src":"31646:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5255,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5259,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:16","nodeType":"VariableDeclaration","scope":5290,"src":"31661:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"},"typeName":{"id":5258,"nodeType":"UserDefinedTypeName","pathNode":{"id":5257,"name":"Rounding","nameLocations":["31661:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":3701,"src":"31661:8:16"},"referencedDeclaration":3701,"src":"31661:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:16"},"returnParameters":{"id":5263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5290,"src":"31703:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5261,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:16"},"scope":5310,"src":"31630:266:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5308,"nodeType":"Block","src":"32094:48:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5301,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"32117:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}],"id":5300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5299,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:16","typeDescriptions":{}}},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5298,"id":5307,"nodeType":"Return","src":"32104:31:16"}]},"documentation":{"id":5291,"nodeType":"StructuredDocumentation","src":"31902:113:16","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5309,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:16","nodeType":"FunctionDefinition","parameters":{"id":5295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5294,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:16","nodeType":"VariableDeclaration","scope":5309,"src":"32046:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"},"typeName":{"id":5293,"nodeType":"UserDefinedTypeName","pathNode":{"id":5292,"name":"Rounding","nameLocations":["32046:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":3701,"src":"32046:8:16"},"referencedDeclaration":3701,"src":"32046:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3701","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:16"},"returnParameters":{"id":5298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5309,"src":"32088:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5296,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:16"},"scope":5310,"src":"32020:122:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5311,"src":"281:31863:16","usedErrors":[],"usedEvents":[]}],"src":"103:32042:16"},"id":16},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7075]},"id":7076,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5312,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5313,"nodeType":"StructuredDocumentation","src":"218:550:17","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7075,"linearizedBaseContracts":[7075],"name":"SafeCast","nameLocation":"777:8:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5314,"nodeType":"StructuredDocumentation","src":"792:68:17","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5320,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:17","nodeType":"ErrorDefinition","parameters":{"id":5319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5316,"mutability":"mutable","name":"bits","nameLocation":"908:4:17","nodeType":"VariableDeclaration","scope":5320,"src":"902:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5315,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5318,"mutability":"mutable","name":"value","nameLocation":"922:5:17","nodeType":"VariableDeclaration","scope":5320,"src":"914:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5317,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:17"},"src":"865:64:17"},{"documentation":{"id":5321,"nodeType":"StructuredDocumentation","src":"935:75:17","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5325,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:17","nodeType":"ErrorDefinition","parameters":{"id":5324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5323,"mutability":"mutable","name":"value","nameLocation":"1056:5:17","nodeType":"VariableDeclaration","scope":5325,"src":"1049:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5322,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:17"},"src":"1015:48:17"},{"documentation":{"id":5326,"nodeType":"StructuredDocumentation","src":"1069:67:17","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5332,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:17","nodeType":"ErrorDefinition","parameters":{"id":5331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5328,"mutability":"mutable","name":"bits","nameLocation":"1183:4:17","nodeType":"VariableDeclaration","scope":5332,"src":"1177:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5327,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5330,"mutability":"mutable","name":"value","nameLocation":"1196:5:17","nodeType":"VariableDeclaration","scope":5332,"src":"1189:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5329,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:17"},"src":"1141:62:17"},{"documentation":{"id":5333,"nodeType":"StructuredDocumentation","src":"1209:75:17","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5337,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:17","nodeType":"ErrorDefinition","parameters":{"id":5336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5335,"mutability":"mutable","name":"value","nameLocation":"1331:5:17","nodeType":"VariableDeclaration","scope":5337,"src":"1323:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5334,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:17"},"src":"1289:49:17"},{"body":{"id":5364,"nodeType":"Block","src":"1695:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"1709:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5347,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5346,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:17","memberName":"max","nodeType":"MemberAccess","src":"1717:17:17","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5358,"nodeType":"IfStatement","src":"1705:105:17","trueBody":{"id":5357,"nodeType":"Block","src":"1736:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:17","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"1793:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5352,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"1757:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5356,"nodeType":"RevertStatement","src":"1750:49:17"}]}},{"expression":{"arguments":[{"id":5361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"1834:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5359,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:17","typeDescriptions":{}}},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5344,"id":5363,"nodeType":"Return","src":"1819:21:17"}]},"documentation":{"id":5338,"nodeType":"StructuredDocumentation","src":"1344:280:17","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5365,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:17","nodeType":"FunctionDefinition","parameters":{"id":5341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5340,"mutability":"mutable","name":"value","nameLocation":"1656:5:17","nodeType":"VariableDeclaration","scope":5365,"src":"1648:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:17"},"returnParameters":{"id":5344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5365,"src":"1686:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5342,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:17","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:17"},"scope":7075,"src":"1629:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5392,"nodeType":"Block","src":"2204:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"2218:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5375,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5374,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:17","memberName":"max","nodeType":"MemberAccess","src":"2226:17:17","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5386,"nodeType":"IfStatement","src":"2214:105:17","trueBody":{"id":5385,"nodeType":"Block","src":"2245:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:17","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"2302:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5380,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"2266:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5384,"nodeType":"RevertStatement","src":"2259:49:17"}]}},{"expression":{"arguments":[{"id":5389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"2343:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5387,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:17","typeDescriptions":{}}},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5372,"id":5391,"nodeType":"Return","src":"2328:21:17"}]},"documentation":{"id":5366,"nodeType":"StructuredDocumentation","src":"1853:280:17","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5393,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:17","nodeType":"FunctionDefinition","parameters":{"id":5369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5368,"mutability":"mutable","name":"value","nameLocation":"2165:5:17","nodeType":"VariableDeclaration","scope":5393,"src":"2157:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5367,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:17"},"returnParameters":{"id":5372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5393,"src":"2195:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5370,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:17","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:17"},"scope":7075,"src":"2138:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5420,"nodeType":"Block","src":"2713:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5396,"src":"2727:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5403,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5402,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:17","memberName":"max","nodeType":"MemberAccess","src":"2735:17:17","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5414,"nodeType":"IfStatement","src":"2723:105:17","trueBody":{"id":5413,"nodeType":"Block","src":"2754:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:17","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5396,"src":"2811:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5408,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"2775:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5412,"nodeType":"RevertStatement","src":"2768:49:17"}]}},{"expression":{"arguments":[{"id":5417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5396,"src":"2852:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5415,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:17","typeDescriptions":{}}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5400,"id":5419,"nodeType":"Return","src":"2837:21:17"}]},"documentation":{"id":5394,"nodeType":"StructuredDocumentation","src":"2362:280:17","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5421,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:17","nodeType":"FunctionDefinition","parameters":{"id":5397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5396,"mutability":"mutable","name":"value","nameLocation":"2674:5:17","nodeType":"VariableDeclaration","scope":5421,"src":"2666:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5395,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:17"},"returnParameters":{"id":5400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5421,"src":"2704:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5398,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:17","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:17"},"scope":7075,"src":"2647:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5448,"nodeType":"Block","src":"3222:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"3236:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5431,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5430,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:17","memberName":"max","nodeType":"MemberAccess","src":"3244:17:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5442,"nodeType":"IfStatement","src":"3232:105:17","trueBody":{"id":5441,"nodeType":"Block","src":"3263:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:17","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"3320:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5436,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"3284:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5440,"nodeType":"RevertStatement","src":"3277:49:17"}]}},{"expression":{"arguments":[{"id":5445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"3361:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5443,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:17","typeDescriptions":{}}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5428,"id":5447,"nodeType":"Return","src":"3346:21:17"}]},"documentation":{"id":5422,"nodeType":"StructuredDocumentation","src":"2871:280:17","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5449,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:17","nodeType":"FunctionDefinition","parameters":{"id":5425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5424,"mutability":"mutable","name":"value","nameLocation":"3183:5:17","nodeType":"VariableDeclaration","scope":5449,"src":"3175:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5423,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:17"},"returnParameters":{"id":5428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5449,"src":"3213:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5426,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:17","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:17"},"scope":7075,"src":"3156:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5476,"nodeType":"Block","src":"3731:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"3745:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5459,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5458,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:17","memberName":"max","nodeType":"MemberAccess","src":"3753:17:17","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5470,"nodeType":"IfStatement","src":"3741:105:17","trueBody":{"id":5469,"nodeType":"Block","src":"3772:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:17","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"3829:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5464,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"3793:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5468,"nodeType":"RevertStatement","src":"3786:49:17"}]}},{"expression":{"arguments":[{"id":5473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"3870:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5471,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:17","typeDescriptions":{}}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5456,"id":5475,"nodeType":"Return","src":"3855:21:17"}]},"documentation":{"id":5450,"nodeType":"StructuredDocumentation","src":"3380:280:17","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5477,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:17","nodeType":"FunctionDefinition","parameters":{"id":5453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5452,"mutability":"mutable","name":"value","nameLocation":"3692:5:17","nodeType":"VariableDeclaration","scope":5477,"src":"3684:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5451,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:17"},"returnParameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5477,"src":"3722:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5454,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:17","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:17"},"scope":7075,"src":"3665:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5504,"nodeType":"Block","src":"4240:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5480,"src":"4254:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5487,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5486,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:17","memberName":"max","nodeType":"MemberAccess","src":"4262:17:17","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5498,"nodeType":"IfStatement","src":"4250:105:17","trueBody":{"id":5497,"nodeType":"Block","src":"4281:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:17","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5480,"src":"4338:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5492,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"4302:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5496,"nodeType":"RevertStatement","src":"4295:49:17"}]}},{"expression":{"arguments":[{"id":5501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5480,"src":"4379:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5499,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:17","typeDescriptions":{}}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5484,"id":5503,"nodeType":"Return","src":"4364:21:17"}]},"documentation":{"id":5478,"nodeType":"StructuredDocumentation","src":"3889:280:17","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5505,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:17","nodeType":"FunctionDefinition","parameters":{"id":5481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5480,"mutability":"mutable","name":"value","nameLocation":"4201:5:17","nodeType":"VariableDeclaration","scope":5505,"src":"4193:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5479,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:17"},"returnParameters":{"id":5484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5505,"src":"4231:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5482,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:17","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:17"},"scope":7075,"src":"4174:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5532,"nodeType":"Block","src":"4749:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"4763:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5515,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5514,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:17","memberName":"max","nodeType":"MemberAccess","src":"4771:17:17","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5526,"nodeType":"IfStatement","src":"4759:105:17","trueBody":{"id":5525,"nodeType":"Block","src":"4790:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:17","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"4847:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5520,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"4811:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5524,"nodeType":"RevertStatement","src":"4804:49:17"}]}},{"expression":{"arguments":[{"id":5529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"4888:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5527,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:17","typeDescriptions":{}}},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5512,"id":5531,"nodeType":"Return","src":"4873:21:17"}]},"documentation":{"id":5506,"nodeType":"StructuredDocumentation","src":"4398:280:17","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5533,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:17","nodeType":"FunctionDefinition","parameters":{"id":5509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5508,"mutability":"mutable","name":"value","nameLocation":"4710:5:17","nodeType":"VariableDeclaration","scope":5533,"src":"4702:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5507,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:17"},"returnParameters":{"id":5512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5533,"src":"4740:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5510,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:17","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:17"},"scope":7075,"src":"4683:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5560,"nodeType":"Block","src":"5258:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"5272:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5543,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5542,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:17","memberName":"max","nodeType":"MemberAccess","src":"5280:17:17","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5554,"nodeType":"IfStatement","src":"5268:105:17","trueBody":{"id":5553,"nodeType":"Block","src":"5299:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:17","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"5356:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5548,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"5320:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5552,"nodeType":"RevertStatement","src":"5313:49:17"}]}},{"expression":{"arguments":[{"id":5557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"5397:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5555,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:17","typeDescriptions":{}}},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5540,"id":5559,"nodeType":"Return","src":"5382:21:17"}]},"documentation":{"id":5534,"nodeType":"StructuredDocumentation","src":"4907:280:17","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5561,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:17","nodeType":"FunctionDefinition","parameters":{"id":5537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5536,"mutability":"mutable","name":"value","nameLocation":"5219:5:17","nodeType":"VariableDeclaration","scope":5561,"src":"5211:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5535,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:17"},"returnParameters":{"id":5540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5561,"src":"5249:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5538,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:17","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:17"},"scope":7075,"src":"5192:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5588,"nodeType":"Block","src":"5767:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"5781:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5571,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5570,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:17","memberName":"max","nodeType":"MemberAccess","src":"5789:17:17","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5582,"nodeType":"IfStatement","src":"5777:105:17","trueBody":{"id":5581,"nodeType":"Block","src":"5808:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:17","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"5865:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5576,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"5829:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5580,"nodeType":"RevertStatement","src":"5822:49:17"}]}},{"expression":{"arguments":[{"id":5585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"5906:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5583,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:17","typeDescriptions":{}}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5568,"id":5587,"nodeType":"Return","src":"5891:21:17"}]},"documentation":{"id":5562,"nodeType":"StructuredDocumentation","src":"5416:280:17","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5589,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:17","nodeType":"FunctionDefinition","parameters":{"id":5565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5564,"mutability":"mutable","name":"value","nameLocation":"5728:5:17","nodeType":"VariableDeclaration","scope":5589,"src":"5720:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5563,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:17"},"returnParameters":{"id":5568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5589,"src":"5758:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5566,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:17","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:17"},"scope":7075,"src":"5701:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5616,"nodeType":"Block","src":"6276:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"6290:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5599,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5598,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:17","memberName":"max","nodeType":"MemberAccess","src":"6298:17:17","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5610,"nodeType":"IfStatement","src":"6286:105:17","trueBody":{"id":5609,"nodeType":"Block","src":"6317:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:17","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"6374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5604,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"6338:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5608,"nodeType":"RevertStatement","src":"6331:49:17"}]}},{"expression":{"arguments":[{"id":5613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"6415:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5611,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:17","typeDescriptions":{}}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5596,"id":5615,"nodeType":"Return","src":"6400:21:17"}]},"documentation":{"id":5590,"nodeType":"StructuredDocumentation","src":"5925:280:17","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5617,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:17","nodeType":"FunctionDefinition","parameters":{"id":5593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5592,"mutability":"mutable","name":"value","nameLocation":"6237:5:17","nodeType":"VariableDeclaration","scope":5617,"src":"6229:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5591,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:17"},"returnParameters":{"id":5596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5617,"src":"6267:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5594,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:17","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:17"},"scope":7075,"src":"6210:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5644,"nodeType":"Block","src":"6785:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"6799:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5627,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5626,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:17","memberName":"max","nodeType":"MemberAccess","src":"6807:17:17","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5638,"nodeType":"IfStatement","src":"6795:105:17","trueBody":{"id":5637,"nodeType":"Block","src":"6826:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:17","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"6883:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5632,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"6847:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5636,"nodeType":"RevertStatement","src":"6840:49:17"}]}},{"expression":{"arguments":[{"id":5641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"6924:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5639,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:17","typeDescriptions":{}}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5624,"id":5643,"nodeType":"Return","src":"6909:21:17"}]},"documentation":{"id":5618,"nodeType":"StructuredDocumentation","src":"6434:280:17","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5645,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:17","nodeType":"FunctionDefinition","parameters":{"id":5621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5620,"mutability":"mutable","name":"value","nameLocation":"6746:5:17","nodeType":"VariableDeclaration","scope":5645,"src":"6738:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5619,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:17"},"returnParameters":{"id":5624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5645,"src":"6776:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5622,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:17","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:17"},"scope":7075,"src":"6719:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5672,"nodeType":"Block","src":"7294:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"7308:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5655,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5654,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:17","memberName":"max","nodeType":"MemberAccess","src":"7316:17:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5666,"nodeType":"IfStatement","src":"7304:105:17","trueBody":{"id":5665,"nodeType":"Block","src":"7335:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:17","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"7392:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5660,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"7356:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5664,"nodeType":"RevertStatement","src":"7349:49:17"}]}},{"expression":{"arguments":[{"id":5669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"7433:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5667,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:17","typeDescriptions":{}}},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5652,"id":5671,"nodeType":"Return","src":"7418:21:17"}]},"documentation":{"id":5646,"nodeType":"StructuredDocumentation","src":"6943:280:17","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5673,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:17","nodeType":"FunctionDefinition","parameters":{"id":5649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5648,"mutability":"mutable","name":"value","nameLocation":"7255:5:17","nodeType":"VariableDeclaration","scope":5673,"src":"7247:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5647,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:17"},"returnParameters":{"id":5652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5673,"src":"7285:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5650,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:17"},"scope":7075,"src":"7228:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5700,"nodeType":"Block","src":"7803:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"7817:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5683,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5682,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:17","memberName":"max","nodeType":"MemberAccess","src":"7825:17:17","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5694,"nodeType":"IfStatement","src":"7813:105:17","trueBody":{"id":5693,"nodeType":"Block","src":"7844:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:17","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"7901:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5688,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"7865:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5692,"nodeType":"RevertStatement","src":"7858:49:17"}]}},{"expression":{"arguments":[{"id":5697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"7942:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5695,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:17","typeDescriptions":{}}},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5680,"id":5699,"nodeType":"Return","src":"7927:21:17"}]},"documentation":{"id":5674,"nodeType":"StructuredDocumentation","src":"7452:280:17","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5701,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:17","nodeType":"FunctionDefinition","parameters":{"id":5677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5676,"mutability":"mutable","name":"value","nameLocation":"7764:5:17","nodeType":"VariableDeclaration","scope":5701,"src":"7756:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5675,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:17"},"returnParameters":{"id":5680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5701,"src":"7794:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5678,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:17","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:17"},"scope":7075,"src":"7737:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5728,"nodeType":"Block","src":"8312:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"8326:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5711,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5710,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:17","memberName":"max","nodeType":"MemberAccess","src":"8334:17:17","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5722,"nodeType":"IfStatement","src":"8322:105:17","trueBody":{"id":5721,"nodeType":"Block","src":"8353:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:17","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"8410:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5716,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"8374:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5720,"nodeType":"RevertStatement","src":"8367:49:17"}]}},{"expression":{"arguments":[{"id":5725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"8451:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5723,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:17","typeDescriptions":{}}},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5708,"id":5727,"nodeType":"Return","src":"8436:21:17"}]},"documentation":{"id":5702,"nodeType":"StructuredDocumentation","src":"7961:280:17","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5729,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:17","nodeType":"FunctionDefinition","parameters":{"id":5705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5704,"mutability":"mutable","name":"value","nameLocation":"8273:5:17","nodeType":"VariableDeclaration","scope":5729,"src":"8265:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5703,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:17"},"returnParameters":{"id":5708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5729,"src":"8303:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5706,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:17","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:17"},"scope":7075,"src":"8246:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5756,"nodeType":"Block","src":"8821:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"8835:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5739,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5738,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:17","memberName":"max","nodeType":"MemberAccess","src":"8843:17:17","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5750,"nodeType":"IfStatement","src":"8831:105:17","trueBody":{"id":5749,"nodeType":"Block","src":"8862:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:17","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"8919:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5744,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"8883:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5748,"nodeType":"RevertStatement","src":"8876:49:17"}]}},{"expression":{"arguments":[{"id":5753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"8960:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5751,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:17","typeDescriptions":{}}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5736,"id":5755,"nodeType":"Return","src":"8945:21:17"}]},"documentation":{"id":5730,"nodeType":"StructuredDocumentation","src":"8470:280:17","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5757,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:17","nodeType":"FunctionDefinition","parameters":{"id":5733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5732,"mutability":"mutable","name":"value","nameLocation":"8782:5:17","nodeType":"VariableDeclaration","scope":5757,"src":"8774:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5731,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:17"},"returnParameters":{"id":5736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5757,"src":"8812:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5734,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:17","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:17"},"scope":7075,"src":"8755:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5784,"nodeType":"Block","src":"9330:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"9344:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5767,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5766,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:17","memberName":"max","nodeType":"MemberAccess","src":"9352:17:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5778,"nodeType":"IfStatement","src":"9340:105:17","trueBody":{"id":5777,"nodeType":"Block","src":"9371:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"9428:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5772,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"9392:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5776,"nodeType":"RevertStatement","src":"9385:49:17"}]}},{"expression":{"arguments":[{"id":5781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"9469:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5779,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:17","typeDescriptions":{}}},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5764,"id":5783,"nodeType":"Return","src":"9454:21:17"}]},"documentation":{"id":5758,"nodeType":"StructuredDocumentation","src":"8979:280:17","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5785,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:17","nodeType":"FunctionDefinition","parameters":{"id":5761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5760,"mutability":"mutable","name":"value","nameLocation":"9291:5:17","nodeType":"VariableDeclaration","scope":5785,"src":"9283:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5759,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:17"},"returnParameters":{"id":5764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5785,"src":"9321:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5762,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:17"},"scope":7075,"src":"9264:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5812,"nodeType":"Block","src":"9839:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"9853:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5795,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5794,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:17","memberName":"max","nodeType":"MemberAccess","src":"9861:17:17","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5806,"nodeType":"IfStatement","src":"9849:105:17","trueBody":{"id":5805,"nodeType":"Block","src":"9880:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:17","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"9937:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5800,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"9901:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5804,"nodeType":"RevertStatement","src":"9894:49:17"}]}},{"expression":{"arguments":[{"id":5809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"9978:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5807,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:17","typeDescriptions":{}}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5792,"id":5811,"nodeType":"Return","src":"9963:21:17"}]},"documentation":{"id":5786,"nodeType":"StructuredDocumentation","src":"9488:280:17","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5813,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:17","nodeType":"FunctionDefinition","parameters":{"id":5789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5788,"mutability":"mutable","name":"value","nameLocation":"9800:5:17","nodeType":"VariableDeclaration","scope":5813,"src":"9792:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5787,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:17"},"returnParameters":{"id":5792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5813,"src":"9830:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5790,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:17","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:17"},"scope":7075,"src":"9773:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5840,"nodeType":"Block","src":"10348:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"10362:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5823,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5822,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:17","memberName":"max","nodeType":"MemberAccess","src":"10370:17:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5834,"nodeType":"IfStatement","src":"10358:105:17","trueBody":{"id":5833,"nodeType":"Block","src":"10389:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:17","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"10446:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5828,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"10410:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5832,"nodeType":"RevertStatement","src":"10403:49:17"}]}},{"expression":{"arguments":[{"id":5837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"10487:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5835,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:17","typeDescriptions":{}}},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5820,"id":5839,"nodeType":"Return","src":"10472:21:17"}]},"documentation":{"id":5814,"nodeType":"StructuredDocumentation","src":"9997:280:17","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5841,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:17","nodeType":"FunctionDefinition","parameters":{"id":5817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5816,"mutability":"mutable","name":"value","nameLocation":"10309:5:17","nodeType":"VariableDeclaration","scope":5841,"src":"10301:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5815,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:17"},"returnParameters":{"id":5820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5841,"src":"10339:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5818,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:17"},"scope":7075,"src":"10282:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5868,"nodeType":"Block","src":"10857:152:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"10871:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5851,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5850,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:17","memberName":"max","nodeType":"MemberAccess","src":"10879:17:17","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5862,"nodeType":"IfStatement","src":"10867:105:17","trueBody":{"id":5861,"nodeType":"Block","src":"10898:74:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:17","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"10955:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5856,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"10919:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5860,"nodeType":"RevertStatement","src":"10912:49:17"}]}},{"expression":{"arguments":[{"id":5865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"10996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5863,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:17","typeDescriptions":{}}},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5848,"id":5867,"nodeType":"Return","src":"10981:21:17"}]},"documentation":{"id":5842,"nodeType":"StructuredDocumentation","src":"10506:280:17","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5869,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:17","nodeType":"FunctionDefinition","parameters":{"id":5845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5844,"mutability":"mutable","name":"value","nameLocation":"10818:5:17","nodeType":"VariableDeclaration","scope":5869,"src":"10810:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5843,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:17"},"returnParameters":{"id":5848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5869,"src":"10848:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5846,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:17","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:17"},"scope":7075,"src":"10791:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5896,"nodeType":"Block","src":"11360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"11374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5879,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5878,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:17","memberName":"max","nodeType":"MemberAccess","src":"11382:16:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5890,"nodeType":"IfStatement","src":"11370:103:17","trueBody":{"id":5889,"nodeType":"Block","src":"11400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"11456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5884,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"11421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5888,"nodeType":"RevertStatement","src":"11414:48:17"}]}},{"expression":{"arguments":[{"id":5893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"11496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5891,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:17","typeDescriptions":{}}},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5876,"id":5895,"nodeType":"Return","src":"11482:20:17"}]},"documentation":{"id":5870,"nodeType":"StructuredDocumentation","src":"11015:276:17","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5897,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:17","nodeType":"FunctionDefinition","parameters":{"id":5873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5872,"mutability":"mutable","name":"value","nameLocation":"11322:5:17","nodeType":"VariableDeclaration","scope":5897,"src":"11314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5871,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:17"},"returnParameters":{"id":5876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5897,"src":"11352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5874,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:17"},"scope":7075,"src":"11296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5924,"nodeType":"Block","src":"11860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"11874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5907,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5906,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:17","memberName":"max","nodeType":"MemberAccess","src":"11882:16:17","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5918,"nodeType":"IfStatement","src":"11870:103:17","trueBody":{"id":5917,"nodeType":"Block","src":"11900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"11956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5912,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"11921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5916,"nodeType":"RevertStatement","src":"11914:48:17"}]}},{"expression":{"arguments":[{"id":5921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"11996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5919,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:17","typeDescriptions":{}}},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5904,"id":5923,"nodeType":"Return","src":"11982:20:17"}]},"documentation":{"id":5898,"nodeType":"StructuredDocumentation","src":"11515:276:17","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5925,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:17","nodeType":"FunctionDefinition","parameters":{"id":5901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5900,"mutability":"mutable","name":"value","nameLocation":"11822:5:17","nodeType":"VariableDeclaration","scope":5925,"src":"11814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5899,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:17"},"returnParameters":{"id":5904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5925,"src":"11852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5902,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:17","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:17"},"scope":7075,"src":"11796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5952,"nodeType":"Block","src":"12360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"12374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5935,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5934,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:17","memberName":"max","nodeType":"MemberAccess","src":"12382:16:17","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5946,"nodeType":"IfStatement","src":"12370:103:17","trueBody":{"id":5945,"nodeType":"Block","src":"12400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"12456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5940,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"12421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5944,"nodeType":"RevertStatement","src":"12414:48:17"}]}},{"expression":{"arguments":[{"id":5949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"12496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5947,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:17","typeDescriptions":{}}},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5932,"id":5951,"nodeType":"Return","src":"12482:20:17"}]},"documentation":{"id":5926,"nodeType":"StructuredDocumentation","src":"12015:276:17","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5953,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:17","nodeType":"FunctionDefinition","parameters":{"id":5929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5928,"mutability":"mutable","name":"value","nameLocation":"12322:5:17","nodeType":"VariableDeclaration","scope":5953,"src":"12314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5927,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:17"},"returnParameters":{"id":5932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5953,"src":"12352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5930,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:17","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:17"},"scope":7075,"src":"12296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5980,"nodeType":"Block","src":"12860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"12874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5963,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5962,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:17","memberName":"max","nodeType":"MemberAccess","src":"12882:16:17","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5974,"nodeType":"IfStatement","src":"12870:103:17","trueBody":{"id":5973,"nodeType":"Block","src":"12900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"12956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5968,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"12921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5972,"nodeType":"RevertStatement","src":"12914:48:17"}]}},{"expression":{"arguments":[{"id":5977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"12996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5975,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:17","typeDescriptions":{}}},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5960,"id":5979,"nodeType":"Return","src":"12982:20:17"}]},"documentation":{"id":5954,"nodeType":"StructuredDocumentation","src":"12515:276:17","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5981,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:17","nodeType":"FunctionDefinition","parameters":{"id":5957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5956,"mutability":"mutable","name":"value","nameLocation":"12822:5:17","nodeType":"VariableDeclaration","scope":5981,"src":"12814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5955,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:17"},"returnParameters":{"id":5960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5981,"src":"12852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5958,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:17","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:17"},"scope":7075,"src":"12796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6008,"nodeType":"Block","src":"13360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"13374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5991,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5990,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:17","memberName":"max","nodeType":"MemberAccess","src":"13382:16:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6002,"nodeType":"IfStatement","src":"13370:103:17","trueBody":{"id":6001,"nodeType":"Block","src":"13400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"13456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5996,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"13421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6000,"nodeType":"RevertStatement","src":"13414:48:17"}]}},{"expression":{"arguments":[{"id":6005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"13496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6003,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:17","typeDescriptions":{}}},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5988,"id":6007,"nodeType":"Return","src":"13482:20:17"}]},"documentation":{"id":5982,"nodeType":"StructuredDocumentation","src":"13015:276:17","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6009,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:17","nodeType":"FunctionDefinition","parameters":{"id":5985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5984,"mutability":"mutable","name":"value","nameLocation":"13322:5:17","nodeType":"VariableDeclaration","scope":6009,"src":"13314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5983,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:17"},"returnParameters":{"id":5988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6009,"src":"13352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5986,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:17"},"scope":7075,"src":"13296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6036,"nodeType":"Block","src":"13860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"13874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6019,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6018,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:17","memberName":"max","nodeType":"MemberAccess","src":"13882:16:17","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6030,"nodeType":"IfStatement","src":"13870:103:17","trueBody":{"id":6029,"nodeType":"Block","src":"13900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"13956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6024,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"13921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6028,"nodeType":"RevertStatement","src":"13914:48:17"}]}},{"expression":{"arguments":[{"id":6033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"13996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6031,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:17","typeDescriptions":{}}},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6016,"id":6035,"nodeType":"Return","src":"13982:20:17"}]},"documentation":{"id":6010,"nodeType":"StructuredDocumentation","src":"13515:276:17","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6037,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:17","nodeType":"FunctionDefinition","parameters":{"id":6013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6012,"mutability":"mutable","name":"value","nameLocation":"13822:5:17","nodeType":"VariableDeclaration","scope":6037,"src":"13814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6011,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:17"},"returnParameters":{"id":6016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6037,"src":"13852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6014,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:17","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:17"},"scope":7075,"src":"13796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6064,"nodeType":"Block","src":"14360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"14374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6047,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6046,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:17","memberName":"max","nodeType":"MemberAccess","src":"14382:16:17","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6058,"nodeType":"IfStatement","src":"14370:103:17","trueBody":{"id":6057,"nodeType":"Block","src":"14400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"14456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6052,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"14421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6056,"nodeType":"RevertStatement","src":"14414:48:17"}]}},{"expression":{"arguments":[{"id":6061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"14496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6059,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:17","typeDescriptions":{}}},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6044,"id":6063,"nodeType":"Return","src":"14482:20:17"}]},"documentation":{"id":6038,"nodeType":"StructuredDocumentation","src":"14015:276:17","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6065,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:17","nodeType":"FunctionDefinition","parameters":{"id":6041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6040,"mutability":"mutable","name":"value","nameLocation":"14322:5:17","nodeType":"VariableDeclaration","scope":6065,"src":"14314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6039,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:17"},"returnParameters":{"id":6044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6065,"src":"14352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6042,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:17","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:17"},"scope":7075,"src":"14296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6092,"nodeType":"Block","src":"14860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"14874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6075,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6074,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:17","memberName":"max","nodeType":"MemberAccess","src":"14882:16:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6086,"nodeType":"IfStatement","src":"14870:103:17","trueBody":{"id":6085,"nodeType":"Block","src":"14900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"14956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6080,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"14921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6084,"nodeType":"RevertStatement","src":"14914:48:17"}]}},{"expression":{"arguments":[{"id":6089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"14996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6087,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:17","typeDescriptions":{}}},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6072,"id":6091,"nodeType":"Return","src":"14982:20:17"}]},"documentation":{"id":6066,"nodeType":"StructuredDocumentation","src":"14515:276:17","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6093,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:17","nodeType":"FunctionDefinition","parameters":{"id":6069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6068,"mutability":"mutable","name":"value","nameLocation":"14822:5:17","nodeType":"VariableDeclaration","scope":6093,"src":"14814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6067,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:17"},"returnParameters":{"id":6072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6093,"src":"14852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6070,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:17"},"scope":7075,"src":"14796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6120,"nodeType":"Block","src":"15360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6096,"src":"15374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6103,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6102,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:17","memberName":"max","nodeType":"MemberAccess","src":"15382:16:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6114,"nodeType":"IfStatement","src":"15370:103:17","trueBody":{"id":6113,"nodeType":"Block","src":"15400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6096,"src":"15456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6108,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"15421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6112,"nodeType":"RevertStatement","src":"15414:48:17"}]}},{"expression":{"arguments":[{"id":6117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6096,"src":"15496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6115,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:17","typeDescriptions":{}}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6100,"id":6119,"nodeType":"Return","src":"15482:20:17"}]},"documentation":{"id":6094,"nodeType":"StructuredDocumentation","src":"15015:276:17","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6121,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:17","nodeType":"FunctionDefinition","parameters":{"id":6097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6096,"mutability":"mutable","name":"value","nameLocation":"15322:5:17","nodeType":"VariableDeclaration","scope":6121,"src":"15314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6095,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:17"},"returnParameters":{"id":6100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6121,"src":"15352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6098,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:17"},"scope":7075,"src":"15296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6148,"nodeType":"Block","src":"15860:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"15874:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6131,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6130,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:17","memberName":"max","nodeType":"MemberAccess","src":"15882:16:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6142,"nodeType":"IfStatement","src":"15870:103:17","trueBody":{"id":6141,"nodeType":"Block","src":"15900:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:17","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"15956:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6136,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"15921:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6140,"nodeType":"RevertStatement","src":"15914:48:17"}]}},{"expression":{"arguments":[{"id":6145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"15996:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6143,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:17","typeDescriptions":{}}},"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6128,"id":6147,"nodeType":"Return","src":"15982:20:17"}]},"documentation":{"id":6122,"nodeType":"StructuredDocumentation","src":"15515:276:17","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6149,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:17","nodeType":"FunctionDefinition","parameters":{"id":6125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6124,"mutability":"mutable","name":"value","nameLocation":"15822:5:17","nodeType":"VariableDeclaration","scope":6149,"src":"15814:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6123,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:17"},"returnParameters":{"id":6128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6149,"src":"15852:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6126,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:17"},"scope":7075,"src":"15796:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6176,"nodeType":"Block","src":"16360:149:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"16374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6159,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6158,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:17","memberName":"max","nodeType":"MemberAccess","src":"16382:16:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6170,"nodeType":"IfStatement","src":"16370:103:17","trueBody":{"id":6169,"nodeType":"Block","src":"16400:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"16456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6164,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"16421:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6168,"nodeType":"RevertStatement","src":"16414:48:17"}]}},{"expression":{"arguments":[{"id":6173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"16496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6171,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:17","typeDescriptions":{}}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6156,"id":6175,"nodeType":"Return","src":"16482:20:17"}]},"documentation":{"id":6150,"nodeType":"StructuredDocumentation","src":"16015:276:17","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6177,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:17","nodeType":"FunctionDefinition","parameters":{"id":6153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6152,"mutability":"mutable","name":"value","nameLocation":"16322:5:17","nodeType":"VariableDeclaration","scope":6177,"src":"16314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6151,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:17"},"returnParameters":{"id":6156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6177,"src":"16352:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6154,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:17"},"scope":7075,"src":"16296:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6204,"nodeType":"Block","src":"16854:146:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"16868:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6187,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6186,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:17","memberName":"max","nodeType":"MemberAccess","src":"16876:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6198,"nodeType":"IfStatement","src":"16864:101:17","trueBody":{"id":6197,"nodeType":"Block","src":"16893:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"16948:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6192,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"16914:30:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6196,"nodeType":"RevertStatement","src":"16907:47:17"}]}},{"expression":{"arguments":[{"id":6201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"16987:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6199,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:17","typeDescriptions":{}}},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6184,"id":6203,"nodeType":"Return","src":"16974:19:17"}]},"documentation":{"id":6178,"nodeType":"StructuredDocumentation","src":"16515:272:17","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6205,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:17","nodeType":"FunctionDefinition","parameters":{"id":6181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6180,"mutability":"mutable","name":"value","nameLocation":"16817:5:17","nodeType":"VariableDeclaration","scope":6205,"src":"16809:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6179,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:17"},"returnParameters":{"id":6184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6205,"src":"16847:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6182,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:17"},"scope":7075,"src":"16792:208:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6227,"nodeType":"Block","src":"17236:128:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"17250:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6221,"nodeType":"IfStatement","src":"17246:81:17","trueBody":{"id":6220,"nodeType":"Block","src":"17261:66:17","statements":[{"errorCall":{"arguments":[{"id":6217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"17310:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6216,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"17282:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6219,"nodeType":"RevertStatement","src":"17275:41:17"}]}},{"expression":{"arguments":[{"id":6224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"17351:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6222,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:17","typeDescriptions":{}}},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6212,"id":6226,"nodeType":"Return","src":"17336:21:17"}]},"documentation":{"id":6206,"nodeType":"StructuredDocumentation","src":"17006:160:17","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6228,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:17","nodeType":"FunctionDefinition","parameters":{"id":6209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6208,"mutability":"mutable","name":"value","nameLocation":"17197:5:17","nodeType":"VariableDeclaration","scope":6228,"src":"17190:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6207,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:17"},"returnParameters":{"id":6212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6228,"src":"17227:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6210,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:17"},"scope":7075,"src":"17171:193:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6253,"nodeType":"Block","src":"17761:150:17","statements":[{"expression":{"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6236,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"17771:10:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"17791:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6237,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:17","typeDescriptions":{}}},"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6242,"nodeType":"ExpressionStatement","src":"17771:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6243,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"17811:10:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"17825:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6252,"nodeType":"IfStatement","src":"17807:98:17","trueBody":{"id":6251,"nodeType":"Block","src":"17832:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:17","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"17888:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6246,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"17853:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6250,"nodeType":"RevertStatement","src":"17846:48:17"}]}}]},"documentation":{"id":6229,"nodeType":"StructuredDocumentation","src":"17370:312:17","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6254,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:17","nodeType":"FunctionDefinition","parameters":{"id":6232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6231,"mutability":"mutable","name":"value","nameLocation":"17712:5:17","nodeType":"VariableDeclaration","scope":6254,"src":"17705:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6230,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:17"},"returnParameters":{"id":6235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6234,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:17","nodeType":"VariableDeclaration","scope":6254,"src":"17742:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6233,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:17","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:17"},"scope":7075,"src":"17687:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6279,"nodeType":"Block","src":"18308:150:17","statements":[{"expression":{"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6262,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"18318:10:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"18338:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6263,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:17","typeDescriptions":{}}},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6268,"nodeType":"ExpressionStatement","src":"18318:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6269,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"18358:10:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"18372:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6278,"nodeType":"IfStatement","src":"18354:98:17","trueBody":{"id":6277,"nodeType":"Block","src":"18379:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:17","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"18435:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6272,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"18400:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6276,"nodeType":"RevertStatement","src":"18393:48:17"}]}}]},"documentation":{"id":6255,"nodeType":"StructuredDocumentation","src":"17917:312:17","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6280,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:17","nodeType":"FunctionDefinition","parameters":{"id":6258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6257,"mutability":"mutable","name":"value","nameLocation":"18259:5:17","nodeType":"VariableDeclaration","scope":6280,"src":"18252:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6256,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:17"},"returnParameters":{"id":6261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6260,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:17","nodeType":"VariableDeclaration","scope":6280,"src":"18289:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6259,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:17","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:17"},"scope":7075,"src":"18234:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6305,"nodeType":"Block","src":"18855:150:17","statements":[{"expression":{"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6288,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"18865:10:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"18885:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6289,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:17","typeDescriptions":{}}},"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6294,"nodeType":"ExpressionStatement","src":"18865:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6295,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"18905:10:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"18919:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6304,"nodeType":"IfStatement","src":"18901:98:17","trueBody":{"id":6303,"nodeType":"Block","src":"18926:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:17","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"18982:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6298,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"18947:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6302,"nodeType":"RevertStatement","src":"18940:48:17"}]}}]},"documentation":{"id":6281,"nodeType":"StructuredDocumentation","src":"18464:312:17","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6306,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:17","nodeType":"FunctionDefinition","parameters":{"id":6284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6283,"mutability":"mutable","name":"value","nameLocation":"18806:5:17","nodeType":"VariableDeclaration","scope":6306,"src":"18799:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6282,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:17"},"returnParameters":{"id":6287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6286,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:17","nodeType":"VariableDeclaration","scope":6306,"src":"18836:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6285,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:17","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:17"},"scope":7075,"src":"18781:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6331,"nodeType":"Block","src":"19402:150:17","statements":[{"expression":{"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6314,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"19412:10:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"19432:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6315,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:17","typeDescriptions":{}}},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6320,"nodeType":"ExpressionStatement","src":"19412:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6321,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"19452:10:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"19466:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6330,"nodeType":"IfStatement","src":"19448:98:17","trueBody":{"id":6329,"nodeType":"Block","src":"19473:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:17","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"19529:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6324,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"19494:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6328,"nodeType":"RevertStatement","src":"19487:48:17"}]}}]},"documentation":{"id":6307,"nodeType":"StructuredDocumentation","src":"19011:312:17","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6332,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:17","nodeType":"FunctionDefinition","parameters":{"id":6310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6309,"mutability":"mutable","name":"value","nameLocation":"19353:5:17","nodeType":"VariableDeclaration","scope":6332,"src":"19346:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6308,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:17"},"returnParameters":{"id":6313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6312,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:17","nodeType":"VariableDeclaration","scope":6332,"src":"19383:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6311,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:17","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:17"},"scope":7075,"src":"19328:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6357,"nodeType":"Block","src":"19949:150:17","statements":[{"expression":{"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6340,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"19959:10:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"19979:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6341,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:17","typeDescriptions":{}}},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6346,"nodeType":"ExpressionStatement","src":"19959:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6347,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"19999:10:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"20013:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6356,"nodeType":"IfStatement","src":"19995:98:17","trueBody":{"id":6355,"nodeType":"Block","src":"20020:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:17","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"20076:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6350,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"20041:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6354,"nodeType":"RevertStatement","src":"20034:48:17"}]}}]},"documentation":{"id":6333,"nodeType":"StructuredDocumentation","src":"19558:312:17","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6358,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:17","nodeType":"FunctionDefinition","parameters":{"id":6336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6335,"mutability":"mutable","name":"value","nameLocation":"19900:5:17","nodeType":"VariableDeclaration","scope":6358,"src":"19893:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6334,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:17"},"returnParameters":{"id":6339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6338,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:17","nodeType":"VariableDeclaration","scope":6358,"src":"19930:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6337,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:17","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:17"},"scope":7075,"src":"19875:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6383,"nodeType":"Block","src":"20496:150:17","statements":[{"expression":{"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6366,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"20506:10:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"20526:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6367,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:17","typeDescriptions":{}}},"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6372,"nodeType":"ExpressionStatement","src":"20506:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6373,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"20546:10:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"20560:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6382,"nodeType":"IfStatement","src":"20542:98:17","trueBody":{"id":6381,"nodeType":"Block","src":"20567:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:17","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"20623:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6376,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"20588:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6380,"nodeType":"RevertStatement","src":"20581:48:17"}]}}]},"documentation":{"id":6359,"nodeType":"StructuredDocumentation","src":"20105:312:17","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6384,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:17","nodeType":"FunctionDefinition","parameters":{"id":6362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6361,"mutability":"mutable","name":"value","nameLocation":"20447:5:17","nodeType":"VariableDeclaration","scope":6384,"src":"20440:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6360,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:17"},"returnParameters":{"id":6365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6364,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:17","nodeType":"VariableDeclaration","scope":6384,"src":"20477:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6363,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:17","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:17"},"scope":7075,"src":"20422:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6409,"nodeType":"Block","src":"21043:150:17","statements":[{"expression":{"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6392,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"21053:10:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"21073:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6393,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:17","typeDescriptions":{}}},"id":6396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6398,"nodeType":"ExpressionStatement","src":"21053:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6399,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"21093:10:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"21107:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6408,"nodeType":"IfStatement","src":"21089:98:17","trueBody":{"id":6407,"nodeType":"Block","src":"21114:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:17","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"21170:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6402,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"21135:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6406,"nodeType":"RevertStatement","src":"21128:48:17"}]}}]},"documentation":{"id":6385,"nodeType":"StructuredDocumentation","src":"20652:312:17","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6410,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:17","nodeType":"FunctionDefinition","parameters":{"id":6388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6387,"mutability":"mutable","name":"value","nameLocation":"20994:5:17","nodeType":"VariableDeclaration","scope":6410,"src":"20987:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6386,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:17"},"returnParameters":{"id":6391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6390,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:17","nodeType":"VariableDeclaration","scope":6410,"src":"21024:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6389,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:17","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:17"},"scope":7075,"src":"20969:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6435,"nodeType":"Block","src":"21590:150:17","statements":[{"expression":{"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6418,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"21600:10:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"21620:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6419,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:17","typeDescriptions":{}}},"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6424,"nodeType":"ExpressionStatement","src":"21600:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6425,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"21640:10:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"21654:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6434,"nodeType":"IfStatement","src":"21636:98:17","trueBody":{"id":6433,"nodeType":"Block","src":"21661:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:17","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"21717:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6428,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"21682:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6432,"nodeType":"RevertStatement","src":"21675:48:17"}]}}]},"documentation":{"id":6411,"nodeType":"StructuredDocumentation","src":"21199:312:17","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6436,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:17","nodeType":"FunctionDefinition","parameters":{"id":6414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6413,"mutability":"mutable","name":"value","nameLocation":"21541:5:17","nodeType":"VariableDeclaration","scope":6436,"src":"21534:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6412,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:17"},"returnParameters":{"id":6417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6416,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:17","nodeType":"VariableDeclaration","scope":6436,"src":"21571:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6415,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:17","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:17"},"scope":7075,"src":"21516:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6461,"nodeType":"Block","src":"22137:150:17","statements":[{"expression":{"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6444,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"22147:10:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"22167:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6445,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:17","typeDescriptions":{}}},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6450,"nodeType":"ExpressionStatement","src":"22147:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6451,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"22187:10:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"22201:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6460,"nodeType":"IfStatement","src":"22183:98:17","trueBody":{"id":6459,"nodeType":"Block","src":"22208:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:17","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"22264:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6454,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"22229:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6458,"nodeType":"RevertStatement","src":"22222:48:17"}]}}]},"documentation":{"id":6437,"nodeType":"StructuredDocumentation","src":"21746:312:17","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6462,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:17","nodeType":"FunctionDefinition","parameters":{"id":6440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6439,"mutability":"mutable","name":"value","nameLocation":"22088:5:17","nodeType":"VariableDeclaration","scope":6462,"src":"22081:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6438,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:17"},"returnParameters":{"id":6443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6442,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:17","nodeType":"VariableDeclaration","scope":6462,"src":"22118:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6441,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:17","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:17"},"scope":7075,"src":"22063:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6487,"nodeType":"Block","src":"22684:150:17","statements":[{"expression":{"id":6475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6470,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"22694:10:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"22714:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6471,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:17","typeDescriptions":{}}},"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6476,"nodeType":"ExpressionStatement","src":"22694:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6477,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"22734:10:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"22748:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6486,"nodeType":"IfStatement","src":"22730:98:17","trueBody":{"id":6485,"nodeType":"Block","src":"22755:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:17","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"22811:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6480,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"22776:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6484,"nodeType":"RevertStatement","src":"22769:48:17"}]}}]},"documentation":{"id":6463,"nodeType":"StructuredDocumentation","src":"22293:312:17","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6488,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:17","nodeType":"FunctionDefinition","parameters":{"id":6466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6465,"mutability":"mutable","name":"value","nameLocation":"22635:5:17","nodeType":"VariableDeclaration","scope":6488,"src":"22628:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6464,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:17"},"returnParameters":{"id":6469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6468,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:17","nodeType":"VariableDeclaration","scope":6488,"src":"22665:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6467,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:17","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:17"},"scope":7075,"src":"22610:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6513,"nodeType":"Block","src":"23231:150:17","statements":[{"expression":{"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6496,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"23241:10:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6491,"src":"23261:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6497,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:17","typeDescriptions":{}}},"id":6500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6502,"nodeType":"ExpressionStatement","src":"23241:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6503,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"23281:10:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6491,"src":"23295:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6512,"nodeType":"IfStatement","src":"23277:98:17","trueBody":{"id":6511,"nodeType":"Block","src":"23302:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:17","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6491,"src":"23358:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6506,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"23323:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6510,"nodeType":"RevertStatement","src":"23316:48:17"}]}}]},"documentation":{"id":6489,"nodeType":"StructuredDocumentation","src":"22840:312:17","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6514,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:17","nodeType":"FunctionDefinition","parameters":{"id":6492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6491,"mutability":"mutable","name":"value","nameLocation":"23182:5:17","nodeType":"VariableDeclaration","scope":6514,"src":"23175:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6490,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:17"},"returnParameters":{"id":6495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6494,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:17","nodeType":"VariableDeclaration","scope":6514,"src":"23212:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6493,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:17","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:17"},"scope":7075,"src":"23157:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6539,"nodeType":"Block","src":"23778:150:17","statements":[{"expression":{"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6522,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"23788:10:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"23808:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6523,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:17","typeDescriptions":{}}},"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6528,"nodeType":"ExpressionStatement","src":"23788:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6529,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"23828:10:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"23842:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6538,"nodeType":"IfStatement","src":"23824:98:17","trueBody":{"id":6537,"nodeType":"Block","src":"23849:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:17","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"23905:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6532,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"23870:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6536,"nodeType":"RevertStatement","src":"23863:48:17"}]}}]},"documentation":{"id":6515,"nodeType":"StructuredDocumentation","src":"23387:312:17","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6540,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:17","nodeType":"FunctionDefinition","parameters":{"id":6518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6517,"mutability":"mutable","name":"value","nameLocation":"23729:5:17","nodeType":"VariableDeclaration","scope":6540,"src":"23722:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6516,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:17"},"returnParameters":{"id":6521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6520,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:17","nodeType":"VariableDeclaration","scope":6540,"src":"23759:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6519,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:17","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:17"},"scope":7075,"src":"23704:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6565,"nodeType":"Block","src":"24325:150:17","statements":[{"expression":{"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6548,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"24335:10:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"24355:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6549,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:17","typeDescriptions":{}}},"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6554,"nodeType":"ExpressionStatement","src":"24335:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6555,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"24375:10:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"24389:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6564,"nodeType":"IfStatement","src":"24371:98:17","trueBody":{"id":6563,"nodeType":"Block","src":"24396:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:17","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"24452:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6558,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"24417:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6562,"nodeType":"RevertStatement","src":"24410:48:17"}]}}]},"documentation":{"id":6541,"nodeType":"StructuredDocumentation","src":"23934:312:17","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6566,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:17","nodeType":"FunctionDefinition","parameters":{"id":6544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6543,"mutability":"mutable","name":"value","nameLocation":"24276:5:17","nodeType":"VariableDeclaration","scope":6566,"src":"24269:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6542,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:17"},"returnParameters":{"id":6547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6546,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:17","nodeType":"VariableDeclaration","scope":6566,"src":"24306:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6545,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:17","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:17"},"scope":7075,"src":"24251:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6591,"nodeType":"Block","src":"24872:150:17","statements":[{"expression":{"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6574,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"24882:10:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"24902:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6575,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:17","typeDescriptions":{}}},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6580,"nodeType":"ExpressionStatement","src":"24882:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6581,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"24922:10:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"24936:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6590,"nodeType":"IfStatement","src":"24918:98:17","trueBody":{"id":6589,"nodeType":"Block","src":"24943:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:17","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"24999:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6584,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"24964:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6588,"nodeType":"RevertStatement","src":"24957:48:17"}]}}]},"documentation":{"id":6567,"nodeType":"StructuredDocumentation","src":"24481:312:17","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6592,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:17","nodeType":"FunctionDefinition","parameters":{"id":6570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6569,"mutability":"mutable","name":"value","nameLocation":"24823:5:17","nodeType":"VariableDeclaration","scope":6592,"src":"24816:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6568,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:17"},"returnParameters":{"id":6573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6572,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:17","nodeType":"VariableDeclaration","scope":6592,"src":"24853:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6571,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:17","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:17"},"scope":7075,"src":"24798:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6617,"nodeType":"Block","src":"25419:150:17","statements":[{"expression":{"id":6605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6600,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"25429:10:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"25449:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6601,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:17","typeDescriptions":{}}},"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6606,"nodeType":"ExpressionStatement","src":"25429:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6607,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"25469:10:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"25483:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6616,"nodeType":"IfStatement","src":"25465:98:17","trueBody":{"id":6615,"nodeType":"Block","src":"25490:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:17","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"25546:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6610,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"25511:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6614,"nodeType":"RevertStatement","src":"25504:48:17"}]}}]},"documentation":{"id":6593,"nodeType":"StructuredDocumentation","src":"25028:312:17","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6618,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:17","nodeType":"FunctionDefinition","parameters":{"id":6596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6595,"mutability":"mutable","name":"value","nameLocation":"25370:5:17","nodeType":"VariableDeclaration","scope":6618,"src":"25363:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6594,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:17"},"returnParameters":{"id":6599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6598,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:17","nodeType":"VariableDeclaration","scope":6618,"src":"25400:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6597,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:17","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:17"},"scope":7075,"src":"25345:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6643,"nodeType":"Block","src":"25966:150:17","statements":[{"expression":{"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6626,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"25976:10:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"25996:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6627,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:17","typeDescriptions":{}}},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6632,"nodeType":"ExpressionStatement","src":"25976:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6633,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"26016:10:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"26030:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6642,"nodeType":"IfStatement","src":"26012:98:17","trueBody":{"id":6641,"nodeType":"Block","src":"26037:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"26093:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6636,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"26058:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6640,"nodeType":"RevertStatement","src":"26051:48:17"}]}}]},"documentation":{"id":6619,"nodeType":"StructuredDocumentation","src":"25575:312:17","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6644,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:17","nodeType":"FunctionDefinition","parameters":{"id":6622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6621,"mutability":"mutable","name":"value","nameLocation":"25917:5:17","nodeType":"VariableDeclaration","scope":6644,"src":"25910:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6620,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:17"},"returnParameters":{"id":6625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6624,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:17","nodeType":"VariableDeclaration","scope":6644,"src":"25947:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6623,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:17","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:17"},"scope":7075,"src":"25892:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6669,"nodeType":"Block","src":"26513:150:17","statements":[{"expression":{"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6652,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"26523:10:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"26543:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6653,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:17","typeDescriptions":{}}},"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6658,"nodeType":"ExpressionStatement","src":"26523:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6659,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"26563:10:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"26577:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6668,"nodeType":"IfStatement","src":"26559:98:17","trueBody":{"id":6667,"nodeType":"Block","src":"26584:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:17","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"26640:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6662,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"26605:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6666,"nodeType":"RevertStatement","src":"26598:48:17"}]}}]},"documentation":{"id":6645,"nodeType":"StructuredDocumentation","src":"26122:312:17","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6670,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:17","nodeType":"FunctionDefinition","parameters":{"id":6648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6647,"mutability":"mutable","name":"value","nameLocation":"26464:5:17","nodeType":"VariableDeclaration","scope":6670,"src":"26457:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6646,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:17"},"returnParameters":{"id":6651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6650,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:17","nodeType":"VariableDeclaration","scope":6670,"src":"26494:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6649,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:17","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:17"},"scope":7075,"src":"26439:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6695,"nodeType":"Block","src":"27060:150:17","statements":[{"expression":{"id":6683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6678,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"27070:10:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"27090:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6679,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:17","typeDescriptions":{}}},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6684,"nodeType":"ExpressionStatement","src":"27070:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6685,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"27110:10:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"27124:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6694,"nodeType":"IfStatement","src":"27106:98:17","trueBody":{"id":6693,"nodeType":"Block","src":"27131:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:17","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"27187:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6688,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"27152:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6692,"nodeType":"RevertStatement","src":"27145:48:17"}]}}]},"documentation":{"id":6671,"nodeType":"StructuredDocumentation","src":"26669:312:17","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6696,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:17","nodeType":"FunctionDefinition","parameters":{"id":6674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6673,"mutability":"mutable","name":"value","nameLocation":"27011:5:17","nodeType":"VariableDeclaration","scope":6696,"src":"27004:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6672,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:17"},"returnParameters":{"id":6677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6676,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:17","nodeType":"VariableDeclaration","scope":6696,"src":"27041:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6675,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:17","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:17"},"scope":7075,"src":"26986:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6721,"nodeType":"Block","src":"27607:150:17","statements":[{"expression":{"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6704,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"27617:10:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"27637:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6705,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:17","typeDescriptions":{}}},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6710,"nodeType":"ExpressionStatement","src":"27617:26:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6711,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"27657:10:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"27671:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6720,"nodeType":"IfStatement","src":"27653:98:17","trueBody":{"id":6719,"nodeType":"Block","src":"27678:73:17","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:17","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"27734:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6714,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"27699:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6718,"nodeType":"RevertStatement","src":"27692:48:17"}]}}]},"documentation":{"id":6697,"nodeType":"StructuredDocumentation","src":"27216:312:17","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6722,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:17","nodeType":"FunctionDefinition","parameters":{"id":6700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6699,"mutability":"mutable","name":"value","nameLocation":"27558:5:17","nodeType":"VariableDeclaration","scope":6722,"src":"27551:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6698,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:17"},"returnParameters":{"id":6703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6702,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:17","nodeType":"VariableDeclaration","scope":6722,"src":"27588:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6701,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:17","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:17"},"scope":7075,"src":"27533:224:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6747,"nodeType":"Block","src":"28147:148:17","statements":[{"expression":{"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6730,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"28157:10:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"28176:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6731,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:17","typeDescriptions":{}}},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6736,"nodeType":"ExpressionStatement","src":"28157:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6737,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"28196:10:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"28210:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6746,"nodeType":"IfStatement","src":"28192:97:17","trueBody":{"id":6745,"nodeType":"Block","src":"28217:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"28272:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6740,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"28238:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6744,"nodeType":"RevertStatement","src":"28231:47:17"}]}}]},"documentation":{"id":6723,"nodeType":"StructuredDocumentation","src":"27763:307:17","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6748,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:17","nodeType":"FunctionDefinition","parameters":{"id":6726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6725,"mutability":"mutable","name":"value","nameLocation":"28099:5:17","nodeType":"VariableDeclaration","scope":6748,"src":"28092:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6724,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:17"},"returnParameters":{"id":6729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6728,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:17","nodeType":"VariableDeclaration","scope":6748,"src":"28129:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6727,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:17","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:17"},"scope":7075,"src":"28075:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6773,"nodeType":"Block","src":"28685:148:17","statements":[{"expression":{"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6756,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"28695:10:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"28714:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6757,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:17","typeDescriptions":{}}},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6762,"nodeType":"ExpressionStatement","src":"28695:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6763,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"28734:10:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"28748:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6772,"nodeType":"IfStatement","src":"28730:97:17","trueBody":{"id":6771,"nodeType":"Block","src":"28755:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:17","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"28810:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6766,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"28776:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6770,"nodeType":"RevertStatement","src":"28769:47:17"}]}}]},"documentation":{"id":6749,"nodeType":"StructuredDocumentation","src":"28301:307:17","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6774,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:17","nodeType":"FunctionDefinition","parameters":{"id":6752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6751,"mutability":"mutable","name":"value","nameLocation":"28637:5:17","nodeType":"VariableDeclaration","scope":6774,"src":"28630:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6750,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:17"},"returnParameters":{"id":6755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6754,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:17","nodeType":"VariableDeclaration","scope":6774,"src":"28667:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6753,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:17","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:17"},"scope":7075,"src":"28613:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6799,"nodeType":"Block","src":"29223:148:17","statements":[{"expression":{"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6782,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"29233:10:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"29252:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6783,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:17","typeDescriptions":{}}},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6788,"nodeType":"ExpressionStatement","src":"29233:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6789,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"29272:10:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"29286:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6798,"nodeType":"IfStatement","src":"29268:97:17","trueBody":{"id":6797,"nodeType":"Block","src":"29293:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:17","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"29348:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6792,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"29314:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6796,"nodeType":"RevertStatement","src":"29307:47:17"}]}}]},"documentation":{"id":6775,"nodeType":"StructuredDocumentation","src":"28839:307:17","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6800,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:17","nodeType":"FunctionDefinition","parameters":{"id":6778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6777,"mutability":"mutable","name":"value","nameLocation":"29175:5:17","nodeType":"VariableDeclaration","scope":6800,"src":"29168:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6776,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:17"},"returnParameters":{"id":6781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6780,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:17","nodeType":"VariableDeclaration","scope":6800,"src":"29205:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6779,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:17","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:17"},"scope":7075,"src":"29151:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6825,"nodeType":"Block","src":"29761:148:17","statements":[{"expression":{"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6808,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"29771:10:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"29790:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6809,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:17","typeDescriptions":{}}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6814,"nodeType":"ExpressionStatement","src":"29771:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6815,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"29810:10:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"29824:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6824,"nodeType":"IfStatement","src":"29806:97:17","trueBody":{"id":6823,"nodeType":"Block","src":"29831:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:17","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"29886:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6818,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"29852:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6822,"nodeType":"RevertStatement","src":"29845:47:17"}]}}]},"documentation":{"id":6801,"nodeType":"StructuredDocumentation","src":"29377:307:17","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6826,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:17","nodeType":"FunctionDefinition","parameters":{"id":6804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6803,"mutability":"mutable","name":"value","nameLocation":"29713:5:17","nodeType":"VariableDeclaration","scope":6826,"src":"29706:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6802,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:17"},"returnParameters":{"id":6807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6806,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:17","nodeType":"VariableDeclaration","scope":6826,"src":"29743:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6805,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:17","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:17"},"scope":7075,"src":"29689:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6851,"nodeType":"Block","src":"30299:148:17","statements":[{"expression":{"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6834,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"30309:10:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"30328:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6835,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:17","typeDescriptions":{}}},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6840,"nodeType":"ExpressionStatement","src":"30309:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6841,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"30348:10:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"30362:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6850,"nodeType":"IfStatement","src":"30344:97:17","trueBody":{"id":6849,"nodeType":"Block","src":"30369:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"30424:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6844,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"30390:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6848,"nodeType":"RevertStatement","src":"30383:47:17"}]}}]},"documentation":{"id":6827,"nodeType":"StructuredDocumentation","src":"29915:307:17","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6852,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:17","nodeType":"FunctionDefinition","parameters":{"id":6830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6829,"mutability":"mutable","name":"value","nameLocation":"30251:5:17","nodeType":"VariableDeclaration","scope":6852,"src":"30244:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6828,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:17"},"returnParameters":{"id":6833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6832,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:17","nodeType":"VariableDeclaration","scope":6852,"src":"30281:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6831,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:17","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:17"},"scope":7075,"src":"30227:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6877,"nodeType":"Block","src":"30837:148:17","statements":[{"expression":{"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6860,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"30847:10:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"30866:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6861,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:17","typeDescriptions":{}}},"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6866,"nodeType":"ExpressionStatement","src":"30847:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6867,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"30886:10:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"30900:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6876,"nodeType":"IfStatement","src":"30882:97:17","trueBody":{"id":6875,"nodeType":"Block","src":"30907:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:17","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"30962:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6870,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"30928:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6874,"nodeType":"RevertStatement","src":"30921:47:17"}]}}]},"documentation":{"id":6853,"nodeType":"StructuredDocumentation","src":"30453:307:17","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6878,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:17","nodeType":"FunctionDefinition","parameters":{"id":6856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6855,"mutability":"mutable","name":"value","nameLocation":"30789:5:17","nodeType":"VariableDeclaration","scope":6878,"src":"30782:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6854,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:17"},"returnParameters":{"id":6859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6858,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:17","nodeType":"VariableDeclaration","scope":6878,"src":"30819:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6857,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:17","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:17"},"scope":7075,"src":"30765:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6903,"nodeType":"Block","src":"31375:148:17","statements":[{"expression":{"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6886,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"31385:10:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"31404:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6887,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:17","typeDescriptions":{}}},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6892,"nodeType":"ExpressionStatement","src":"31385:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6893,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"31424:10:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"31438:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6902,"nodeType":"IfStatement","src":"31420:97:17","trueBody":{"id":6901,"nodeType":"Block","src":"31445:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:17","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"31500:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6896,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"31466:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6900,"nodeType":"RevertStatement","src":"31459:47:17"}]}}]},"documentation":{"id":6879,"nodeType":"StructuredDocumentation","src":"30991:307:17","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6904,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:17","nodeType":"FunctionDefinition","parameters":{"id":6882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6881,"mutability":"mutable","name":"value","nameLocation":"31327:5:17","nodeType":"VariableDeclaration","scope":6904,"src":"31320:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6880,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:17"},"returnParameters":{"id":6885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6884,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:17","nodeType":"VariableDeclaration","scope":6904,"src":"31357:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6883,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:17","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:17"},"scope":7075,"src":"31303:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6929,"nodeType":"Block","src":"31913:148:17","statements":[{"expression":{"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6912,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"31923:10:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"31942:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6913,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:17","typeDescriptions":{}}},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6918,"nodeType":"ExpressionStatement","src":"31923:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6919,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"31962:10:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"31976:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6928,"nodeType":"IfStatement","src":"31958:97:17","trueBody":{"id":6927,"nodeType":"Block","src":"31983:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:17","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"32038:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6922,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"32004:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6926,"nodeType":"RevertStatement","src":"31997:47:17"}]}}]},"documentation":{"id":6905,"nodeType":"StructuredDocumentation","src":"31529:307:17","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6930,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:17","nodeType":"FunctionDefinition","parameters":{"id":6908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6907,"mutability":"mutable","name":"value","nameLocation":"31865:5:17","nodeType":"VariableDeclaration","scope":6930,"src":"31858:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6906,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:17"},"returnParameters":{"id":6911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6910,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:17","nodeType":"VariableDeclaration","scope":6930,"src":"31895:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6909,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:17","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:17"},"scope":7075,"src":"31841:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6955,"nodeType":"Block","src":"32451:148:17","statements":[{"expression":{"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6938,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"32461:10:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"32480:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6939,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:17","typeDescriptions":{}}},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6944,"nodeType":"ExpressionStatement","src":"32461:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6945,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"32500:10:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"32514:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6954,"nodeType":"IfStatement","src":"32496:97:17","trueBody":{"id":6953,"nodeType":"Block","src":"32521:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"32576:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6948,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"32542:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6952,"nodeType":"RevertStatement","src":"32535:47:17"}]}}]},"documentation":{"id":6931,"nodeType":"StructuredDocumentation","src":"32067:307:17","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6956,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:17","nodeType":"FunctionDefinition","parameters":{"id":6934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6933,"mutability":"mutable","name":"value","nameLocation":"32403:5:17","nodeType":"VariableDeclaration","scope":6956,"src":"32396:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6932,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:17"},"returnParameters":{"id":6937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6936,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:17","nodeType":"VariableDeclaration","scope":6956,"src":"32433:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6935,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:17","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:17"},"scope":7075,"src":"32379:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6981,"nodeType":"Block","src":"32989:148:17","statements":[{"expression":{"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6964,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"32999:10:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"33018:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6965,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:17","typeDescriptions":{}}},"id":6968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6970,"nodeType":"ExpressionStatement","src":"32999:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6971,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"33038:10:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"33052:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6980,"nodeType":"IfStatement","src":"33034:97:17","trueBody":{"id":6979,"nodeType":"Block","src":"33059:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:17","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"33114:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6974,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"33080:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6978,"nodeType":"RevertStatement","src":"33073:47:17"}]}}]},"documentation":{"id":6957,"nodeType":"StructuredDocumentation","src":"32605:307:17","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6982,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:17","nodeType":"FunctionDefinition","parameters":{"id":6960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6959,"mutability":"mutable","name":"value","nameLocation":"32941:5:17","nodeType":"VariableDeclaration","scope":6982,"src":"32934:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6958,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:17"},"returnParameters":{"id":6963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6962,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:17","nodeType":"VariableDeclaration","scope":6982,"src":"32971:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6961,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:17"},"scope":7075,"src":"32917:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7007,"nodeType":"Block","src":"33527:148:17","statements":[{"expression":{"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6990,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"33537:10:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"33556:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6991,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:17","typeDescriptions":{}}},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6996,"nodeType":"ExpressionStatement","src":"33537:25:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6997,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"33576:10:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"33590:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7006,"nodeType":"IfStatement","src":"33572:97:17","trueBody":{"id":7005,"nodeType":"Block","src":"33597:72:17","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"33652:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7000,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"33618:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7004,"nodeType":"RevertStatement","src":"33611:47:17"}]}}]},"documentation":{"id":6983,"nodeType":"StructuredDocumentation","src":"33143:307:17","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7008,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:17","nodeType":"FunctionDefinition","parameters":{"id":6986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6985,"mutability":"mutable","name":"value","nameLocation":"33479:5:17","nodeType":"VariableDeclaration","scope":7008,"src":"33472:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6984,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:17"},"returnParameters":{"id":6989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6988,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:17","nodeType":"VariableDeclaration","scope":7008,"src":"33509:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6987,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:17","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:17"},"scope":7075,"src":"33455:220:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7033,"nodeType":"Block","src":"34058:146:17","statements":[{"expression":{"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7016,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7014,"src":"34068:10:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"34086:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7017,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:17","typeDescriptions":{}}},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7022,"nodeType":"ExpressionStatement","src":"34068:24:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7023,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7014,"src":"34106:10:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"34120:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7032,"nodeType":"IfStatement","src":"34102:96:17","trueBody":{"id":7031,"nodeType":"Block","src":"34127:71:17","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"34181:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7026,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"34148:29:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7030,"nodeType":"RevertStatement","src":"34141:46:17"}]}}]},"documentation":{"id":7009,"nodeType":"StructuredDocumentation","src":"33681:302:17","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7034,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:17","nodeType":"FunctionDefinition","parameters":{"id":7012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7011,"mutability":"mutable","name":"value","nameLocation":"34011:5:17","nodeType":"VariableDeclaration","scope":7034,"src":"34004:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7010,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:17"},"returnParameters":{"id":7015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7014,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:17","nodeType":"VariableDeclaration","scope":7034,"src":"34041:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7013,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:17","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:17"},"scope":7075,"src":"33988:216:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7063,"nodeType":"Block","src":"34444:250:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"34557:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7046,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7045,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:17","memberName":"max","nodeType":"MemberAccess","src":"34573:16:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7043,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:17","typeDescriptions":{}}},"id":7050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7057,"nodeType":"IfStatement","src":"34553:105:17","trueBody":{"id":7056,"nodeType":"Block","src":"34592:66:17","statements":[{"errorCall":{"arguments":[{"id":7053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"34641:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7052,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"34613:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7055,"nodeType":"RevertStatement","src":"34606:41:17"}]}},{"expression":{"arguments":[{"id":7060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"34681:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7058,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:17","typeDescriptions":{}}},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7041,"id":7062,"nodeType":"Return","src":"34667:20:17"}]},"documentation":{"id":7035,"nodeType":"StructuredDocumentation","src":"34210:165:17","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7064,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:17","nodeType":"FunctionDefinition","parameters":{"id":7038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7037,"mutability":"mutable","name":"value","nameLocation":"34406:5:17","nodeType":"VariableDeclaration","scope":7064,"src":"34398:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7036,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:17"},"returnParameters":{"id":7041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7064,"src":"34436:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7039,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:17"},"scope":7075,"src":"34380:314:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7073,"nodeType":"Block","src":"34853:87:17","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:17","statements":[{"nodeType":"YulAssignment","src":"34902:22:17","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:17"},"nodeType":"YulFunctionCall","src":"34914:9:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:17"},"nodeType":"YulFunctionCall","src":"34907:17:17"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7067,"isOffset":false,"isSlot":false,"src":"34921:1:17","valueSize":1},{"declaration":7070,"isOffset":false,"isSlot":false,"src":"34902:1:17","valueSize":1}],"flags":["memory-safe"],"id":7072,"nodeType":"InlineAssembly","src":"34863:71:17"}]},"documentation":{"id":7065,"nodeType":"StructuredDocumentation","src":"34700:90:17","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7074,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:17","nodeType":"FunctionDefinition","parameters":{"id":7068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7067,"mutability":"mutable","name":"b","nameLocation":"34816:1:17","nodeType":"VariableDeclaration","scope":7074,"src":"34811:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7066,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:17"},"returnParameters":{"id":7071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7070,"mutability":"mutable","name":"u","nameLocation":"34850:1:17","nodeType":"VariableDeclaration","scope":7074,"src":"34842:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7069,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:17"},"scope":7075,"src":"34795:145:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7076,"src":"769:34173:17","usedErrors":[5320,5325,5332,5337],"usedEvents":[]}],"src":"192:34751:17"},"id":17},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7075],"SignedMath":[7219]},"id":7220,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7077,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7079,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7220,"sourceUnit":7076,"src":"135:40:18","symbolAliases":[{"foreign":{"id":7078,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"143:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7080,"nodeType":"StructuredDocumentation","src":"177:80:18","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7219,"linearizedBaseContracts":[7219],"name":"SignedMath","nameLocation":"266:10:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":7109,"nodeType":"Block","src":"746:215:18","statements":[{"id":7108,"nodeType":"UncheckedBlock","src":"756:199:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7092,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"894:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7093,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"900:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7094,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"904:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7101,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"932:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7099,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"916:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7075_$","typeString":"type(library SafeCast)"}},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"916:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7097,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:18","typeDescriptions":{}}},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7091,"id":7107,"nodeType":"Return","src":"887:57:18"}]}]},"documentation":{"id":7081,"nodeType":"StructuredDocumentation","src":"283:374:18","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7110,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:18","nodeType":"FunctionDefinition","parameters":{"id":7088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7083,"mutability":"mutable","name":"condition","nameLocation":"684:9:18","nodeType":"VariableDeclaration","scope":7110,"src":"679:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7082,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7085,"mutability":"mutable","name":"a","nameLocation":"702:1:18","nodeType":"VariableDeclaration","scope":7110,"src":"695:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7084,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7087,"mutability":"mutable","name":"b","nameLocation":"712:1:18","nodeType":"VariableDeclaration","scope":7110,"src":"705:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7086,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:18"},"returnParameters":{"id":7091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7110,"src":"738:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7089,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:18"},"scope":7219,"src":"662:299:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7128,"nodeType":"Block","src":"1102:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7121,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"1127:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7122,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"1131:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7124,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"1134:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7125,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"1137:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7120,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"1119:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7119,"id":7127,"nodeType":"Return","src":"1112:27:18"}]},"documentation":{"id":7111,"nodeType":"StructuredDocumentation","src":"967:66:18","text":" @dev Returns the largest of two signed numbers."},"id":7129,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:18","nodeType":"FunctionDefinition","parameters":{"id":7116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7113,"mutability":"mutable","name":"a","nameLocation":"1058:1:18","nodeType":"VariableDeclaration","scope":7129,"src":"1051:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7112,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7115,"mutability":"mutable","name":"b","nameLocation":"1068:1:18","nodeType":"VariableDeclaration","scope":7129,"src":"1061:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7114,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:18"},"returnParameters":{"id":7119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7129,"src":"1094:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7117,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:18"},"scope":7219,"src":"1038:108:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7147,"nodeType":"Block","src":"1288:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7140,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"1313:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7141,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7134,"src":"1317:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7143,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"1320:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7144,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7134,"src":"1323:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7139,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"1305:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7138,"id":7146,"nodeType":"Return","src":"1298:27:18"}]},"documentation":{"id":7130,"nodeType":"StructuredDocumentation","src":"1152:67:18","text":" @dev Returns the smallest of two signed numbers."},"id":7148,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:18","nodeType":"FunctionDefinition","parameters":{"id":7135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7132,"mutability":"mutable","name":"a","nameLocation":"1244:1:18","nodeType":"VariableDeclaration","scope":7148,"src":"1237:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7131,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7134,"mutability":"mutable","name":"b","nameLocation":"1254:1:18","nodeType":"VariableDeclaration","scope":7148,"src":"1247:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7133,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:18"},"returnParameters":{"id":7138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7148,"src":"1280:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7136,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:18"},"scope":7219,"src":"1224:108:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7191,"nodeType":"Block","src":"1537:162:18","statements":[{"assignments":[7159],"declarations":[{"constant":false,"id":7159,"mutability":"mutable","name":"x","nameLocation":"1606:1:18","nodeType":"VariableDeclaration","scope":7191,"src":"1599:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7158,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7172,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7160,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"1611:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7161,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"1615:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7163,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"1622:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7165,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"1626:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7170,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:18"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7173,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"1651:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7178,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"1671:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7176,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:18","typeDescriptions":{}}},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7174,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:18","typeDescriptions":{}}},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7183,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"1685:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7184,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"1689:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7188,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7157,"id":7190,"nodeType":"Return","src":"1644:48:18"}]},"documentation":{"id":7149,"nodeType":"StructuredDocumentation","src":"1338:126:18","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7192,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:18","nodeType":"FunctionDefinition","parameters":{"id":7154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7151,"mutability":"mutable","name":"a","nameLocation":"1493:1:18","nodeType":"VariableDeclaration","scope":7192,"src":"1486:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7150,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7153,"mutability":"mutable","name":"b","nameLocation":"1503:1:18","nodeType":"VariableDeclaration","scope":7192,"src":"1496:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7152,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:18"},"returnParameters":{"id":7157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7192,"src":"1529:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7155,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:18"},"scope":7219,"src":"1469:230:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7217,"nodeType":"Block","src":"1843:767:18","statements":[{"id":7216,"nodeType":"UncheckedBlock","src":"1853:751:18","statements":[{"assignments":[7201],"declarations":[{"constant":false,"id":7201,"mutability":"mutable","name":"mask","nameLocation":"2424:4:18","nodeType":"VariableDeclaration","scope":7216,"src":"2417:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7200,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7205,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7202,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"2431:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7208,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"2576:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7209,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"2580:4:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7212,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"2588:4:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7206,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:18","typeDescriptions":{}}},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7199,"id":7215,"nodeType":"Return","src":"2560:33:18"}]}]},"documentation":{"id":7193,"nodeType":"StructuredDocumentation","src":"1705:78:18","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7218,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:18","nodeType":"FunctionDefinition","parameters":{"id":7196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7195,"mutability":"mutable","name":"n","nameLocation":"1808:1:18","nodeType":"VariableDeclaration","scope":7218,"src":"1801:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7194,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:18"},"returnParameters":{"id":7199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7218,"src":"1834:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7197,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:18"},"scope":7219,"src":"1788:822:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7220,"src":"258:2354:18","usedErrors":[],"usedEvents":[]}],"src":"109:2504:18"},"id":18},"contracts/MovieArticle.sol":{"ast":{"absolutePath":"contracts/MovieArticle.sol","exportedSymbols":{"Context":[2130],"ERC165":[3677],"ERC721":[1860],"ERC721Utils":[2100],"IERC165":[3689],"IERC20":[877],"IERC721":[1977],"IERC721Errors":[237],"IERC721Metadata":[2023],"MovieArticle":[7791],"Ownable":[147],"ReentrancyGuard":[2251],"Strings":[3653]},"id":7792,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7221,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":7222,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7792,"sourceUnit":1861,"src":"61:57:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7792,"sourceUnit":878,"src":"120:56:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7792,"sourceUnit":148,"src":"178:52:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":7225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7792,"sourceUnit":2252,"src":"232:59:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7226,"name":"ERC721","nameLocations":["320:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":1860,"src":"320:6:19"},"id":7227,"nodeType":"InheritanceSpecifier","src":"320:6:19"},{"baseName":{"id":7228,"name":"Ownable","nameLocations":["328:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"328:7:19"},"id":7229,"nodeType":"InheritanceSpecifier","src":"328:7:19"},{"baseName":{"id":7230,"name":"ReentrancyGuard","nameLocations":["337:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"337:15:19"},"id":7231,"nodeType":"InheritanceSpecifier","src":"337:15:19"}],"canonicalName":"MovieArticle","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7791,"linearizedBaseContracts":[7791,2251,147,1860,237,2023,1977,3677,3689,2130],"name":"MovieArticle","nameLocation":"304:12:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7233,"mutability":"mutable","name":"_articleIds","nameLocation":"376:11:19","nodeType":"VariableDeclaration","scope":7791,"src":"360:27:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7232,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":7235,"mutability":"mutable","name":"_contributionIds","nameLocation":"410:16:19","nodeType":"VariableDeclaration","scope":7791,"src":"394:32:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7234,"name":"uint256","nodeType":"ElementaryTypeName","src":"394:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"canonicalName":"MovieArticle.Article","id":7258,"members":[{"constant":false,"id":7237,"mutability":"mutable","name":"id","nameLocation":"499:2:19","nodeType":"VariableDeclaration","scope":7258,"src":"491:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7236,"name":"uint256","nodeType":"ElementaryTypeName","src":"491:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7239,"mutability":"mutable","name":"title","nameLocation":"519:5:19","nodeType":"VariableDeclaration","scope":7258,"src":"512:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7238,"name":"string","nodeType":"ElementaryTypeName","src":"512:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7241,"mutability":"mutable","name":"movieTitle","nameLocation":"542:10:19","nodeType":"VariableDeclaration","scope":7258,"src":"535:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7240,"name":"string","nodeType":"ElementaryTypeName","src":"535:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7243,"mutability":"mutable","name":"genre","nameLocation":"570:5:19","nodeType":"VariableDeclaration","scope":7258,"src":"563:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7242,"name":"string","nodeType":"ElementaryTypeName","src":"563:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7245,"mutability":"mutable","name":"creator","nameLocation":"594:7:19","nodeType":"VariableDeclaration","scope":7258,"src":"586:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7244,"name":"address","nodeType":"ElementaryTypeName","src":"586:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7247,"mutability":"mutable","name":"createdAt","nameLocation":"620:9:19","nodeType":"VariableDeclaration","scope":7258,"src":"612:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7246,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7249,"mutability":"mutable","name":"totalContributions","nameLocation":"648:18:19","nodeType":"VariableDeclaration","scope":7258,"src":"640:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7248,"name":"uint256","nodeType":"ElementaryTypeName","src":"640:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7251,"mutability":"mutable","name":"totalRewards","nameLocation":"685:12:19","nodeType":"VariableDeclaration","scope":7258,"src":"677:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7250,"name":"uint256","nodeType":"ElementaryTypeName","src":"677:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7253,"mutability":"mutable","name":"isCompleted","nameLocation":"713:11:19","nodeType":"VariableDeclaration","scope":7258,"src":"708:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7252,"name":"bool","nodeType":"ElementaryTypeName","src":"708:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7255,"mutability":"mutable","name":"minContributionLength","nameLocation":"743:21:19","nodeType":"VariableDeclaration","scope":7258,"src":"735:29:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7254,"name":"uint256","nodeType":"ElementaryTypeName","src":"735:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7257,"mutability":"mutable","name":"maxContributors","nameLocation":"783:15:19","nodeType":"VariableDeclaration","scope":7258,"src":"775:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7256,"name":"uint256","nodeType":"ElementaryTypeName","src":"775:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Article","nameLocation":"472:7:19","nodeType":"StructDefinition","scope":7791,"src":"465:341:19","visibility":"public"},{"canonicalName":"MovieArticle.Contribution","id":7275,"members":[{"constant":false,"id":7260,"mutability":"mutable","name":"id","nameLocation":"888:2:19","nodeType":"VariableDeclaration","scope":7275,"src":"880:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7259,"name":"uint256","nodeType":"ElementaryTypeName","src":"880:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7262,"mutability":"mutable","name":"articleId","nameLocation":"909:9:19","nodeType":"VariableDeclaration","scope":7275,"src":"901:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7261,"name":"uint256","nodeType":"ElementaryTypeName","src":"901:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7264,"mutability":"mutable","name":"contributor","nameLocation":"937:11:19","nodeType":"VariableDeclaration","scope":7275,"src":"929:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7263,"name":"address","nodeType":"ElementaryTypeName","src":"929:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7266,"mutability":"mutable","name":"content","nameLocation":"966:7:19","nodeType":"VariableDeclaration","scope":7275,"src":"959:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7265,"name":"string","nodeType":"ElementaryTypeName","src":"959:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7268,"mutability":"mutable","name":"timestamp","nameLocation":"992:9:19","nodeType":"VariableDeclaration","scope":7275,"src":"984:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7267,"name":"uint256","nodeType":"ElementaryTypeName","src":"984:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7270,"mutability":"mutable","name":"likes","nameLocation":"1020:5:19","nodeType":"VariableDeclaration","scope":7275,"src":"1012:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7272,"mutability":"mutable","name":"rewards","nameLocation":"1044:7:19","nodeType":"VariableDeclaration","scope":7275,"src":"1036:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1036:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7274,"mutability":"mutable","name":"isApproved","nameLocation":"1067:10:19","nodeType":"VariableDeclaration","scope":7275,"src":"1062:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7273,"name":"bool","nodeType":"ElementaryTypeName","src":"1062:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Contribution","nameLocation":"856:12:19","nodeType":"StructDefinition","scope":7791,"src":"849:236:19","visibility":"public"},{"constant":false,"functionSelector":"edcfafe6","id":7280,"mutability":"mutable","name":"articles","nameLocation":"1149:8:19","nodeType":"VariableDeclaration","scope":7791,"src":"1114:43:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Article_$7258_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Article)"},"typeName":{"id":7279,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1122:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1114:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Article_$7258_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Article)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7278,"nodeType":"UserDefinedTypeName","pathNode":{"id":7277,"name":"Article","nameLocations":["1133:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":7258,"src":"1133:7:19"},"referencedDeclaration":7258,"src":"1133:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$7258_storage_ptr","typeString":"struct MovieArticle.Article"}}},"visibility":"public"},{"constant":false,"functionSelector":"1cee0700","id":7285,"mutability":"mutable","name":"contributions","nameLocation":"1204:13:19","nodeType":"VariableDeclaration","scope":7791,"src":"1164:53:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contribution_$7275_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Contribution)"},"typeName":{"id":7284,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1172:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1164:32:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contribution_$7275_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Contribution)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7283,"nodeType":"UserDefinedTypeName","pathNode":{"id":7282,"name":"Contribution","nameLocations":["1183:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":7275,"src":"1183:12:19"},"referencedDeclaration":7275,"src":"1183:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$7275_storage_ptr","typeString":"struct MovieArticle.Contribution"}}},"visibility":"public"},{"constant":false,"functionSelector":"30243834","id":7290,"mutability":"mutable","name":"articleContributions","nameLocation":"1261:20:19","nodeType":"VariableDeclaration","scope":7791,"src":"1224:57:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"typeName":{"id":7289,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1224:29:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":7287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1243:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7288,"nodeType":"ArrayTypeName","src":"1243:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"7331fa95","id":7295,"mutability":"mutable","name":"userContributions","nameLocation":"1359:17:19","nodeType":"VariableDeclaration","scope":7791,"src":"1322:54:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":7294,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7291,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1322:29:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":7292,"name":"uint256","nodeType":"ElementaryTypeName","src":"1341:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7293,"nodeType":"ArrayTypeName","src":"1341:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"b5b96ae0","id":7301,"mutability":"mutable","name":"hasContributed","nameLocation":"1463:14:19","nodeType":"VariableDeclaration","scope":7791,"src":"1411:66:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"typeName":{"id":7300,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1419:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1411:44:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7299,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7297,"name":"address","nodeType":"ElementaryTypeName","src":"1438:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1430:24:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7298,"name":"bool","nodeType":"ElementaryTypeName","src":"1449:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"8fb7092c","id":7307,"mutability":"mutable","name":"hasLiked","nameLocation":"1577:8:19","nodeType":"VariableDeclaration","scope":7791,"src":"1525:60:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"typeName":{"id":7306,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1533:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1525:44:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7305,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7303,"name":"address","nodeType":"ElementaryTypeName","src":"1552:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1544:24:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7304,"name":"bool","nodeType":"ElementaryTypeName","src":"1563:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"f7c618c1","id":7310,"mutability":"mutable","name":"rewardToken","nameLocation":"1673:11:19","nodeType":"VariableDeclaration","scope":7791,"src":"1659:25:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},"typeName":{"id":7309,"nodeType":"UserDefinedTypeName","pathNode":{"id":7308,"name":"IERC20","nameLocations":["1659:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"1659:6:19"},"referencedDeclaration":877,"src":"1659:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"visibility":"public"},{"anonymous":false,"eventSelector":"e539a333a3cfd582c41b5f4712067ec24868a7a493c0ab524d9fcfde5bb0d410","id":7318,"name":"ArticleCreated","nameLocation":"1718:14:19","nodeType":"EventDefinition","parameters":{"id":7317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7312,"indexed":true,"mutability":"mutable","name":"articleId","nameLocation":"1749:9:19","nodeType":"VariableDeclaration","scope":7318,"src":"1733:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1733:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7314,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"1776:7:19","nodeType":"VariableDeclaration","scope":7318,"src":"1760:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7313,"name":"address","nodeType":"ElementaryTypeName","src":"1760:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7316,"indexed":false,"mutability":"mutable","name":"title","nameLocation":"1792:5:19","nodeType":"VariableDeclaration","scope":7318,"src":"1785:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7315,"name":"string","nodeType":"ElementaryTypeName","src":"1785:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1732:66:19"},"src":"1712:87:19"},{"anonymous":false,"eventSelector":"390f5f279da0ce4afc2046a3c1440c27a0637ea7261a5636e5518a2258bed269","id":7326,"name":"ContributionAdded","nameLocation":"1811:17:19","nodeType":"EventDefinition","parameters":{"id":7325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7320,"indexed":true,"mutability":"mutable","name":"contributionId","nameLocation":"1845:14:19","nodeType":"VariableDeclaration","scope":7326,"src":"1829:30:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7319,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7322,"indexed":true,"mutability":"mutable","name":"articleId","nameLocation":"1877:9:19","nodeType":"VariableDeclaration","scope":7326,"src":"1861:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7324,"indexed":true,"mutability":"mutable","name":"contributor","nameLocation":"1904:11:19","nodeType":"VariableDeclaration","scope":7326,"src":"1888:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7323,"name":"address","nodeType":"ElementaryTypeName","src":"1888:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1828:88:19"},"src":"1805:112:19"},{"anonymous":false,"eventSelector":"bfe577b36f6862b4729cc4b1ab7de20f7d8017e3b23552b685712e81741efe95","id":7332,"name":"ContributionApproved","nameLocation":"1929:20:19","nodeType":"EventDefinition","parameters":{"id":7331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7328,"indexed":true,"mutability":"mutable","name":"contributionId","nameLocation":"1966:14:19","nodeType":"VariableDeclaration","scope":7332,"src":"1950:30:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1950:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7330,"indexed":false,"mutability":"mutable","name":"reward","nameLocation":"1990:6:19","nodeType":"VariableDeclaration","scope":7332,"src":"1982:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1949:48:19"},"src":"1923:75:19"},{"anonymous":false,"eventSelector":"160fb30f1ee635c3caa0e5d3a7884222081dcafa69308e0d695e2332515aec22","id":7338,"name":"ContributionLiked","nameLocation":"2010:17:19","nodeType":"EventDefinition","parameters":{"id":7337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7334,"indexed":true,"mutability":"mutable","name":"contributionId","nameLocation":"2044:14:19","nodeType":"VariableDeclaration","scope":7338,"src":"2028:30:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7333,"name":"uint256","nodeType":"ElementaryTypeName","src":"2028:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7336,"indexed":true,"mutability":"mutable","name":"liker","nameLocation":"2076:5:19","nodeType":"VariableDeclaration","scope":7338,"src":"2060:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7335,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2027:55:19"},"src":"2004:79:19"},{"anonymous":false,"eventSelector":"cecd5d5df52f22750a7b838a07823685059f55f29d937091bb81ff96a6612d8d","id":7344,"name":"ArticleCompleted","nameLocation":"2095:16:19","nodeType":"EventDefinition","parameters":{"id":7343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7340,"indexed":true,"mutability":"mutable","name":"articleId","nameLocation":"2128:9:19","nodeType":"VariableDeclaration","scope":7344,"src":"2112:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7339,"name":"uint256","nodeType":"ElementaryTypeName","src":"2112:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7342,"indexed":false,"mutability":"mutable","name":"totalRewards","nameLocation":"2147:12:19","nodeType":"VariableDeclaration","scope":7344,"src":"2139:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7341,"name":"uint256","nodeType":"ElementaryTypeName","src":"2139:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2111:49:19"},"src":"2089:72:19"},{"anonymous":false,"eventSelector":"29e98ba00d07f171959c4ddcd2f3020debc7c52cf537a034d7e664340d098c6c","id":7350,"name":"RewardsDistributed","nameLocation":"2173:18:19","nodeType":"EventDefinition","parameters":{"id":7349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7346,"indexed":true,"mutability":"mutable","name":"articleId","nameLocation":"2208:9:19","nodeType":"VariableDeclaration","scope":7350,"src":"2192:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7345,"name":"uint256","nodeType":"ElementaryTypeName","src":"2192:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7348,"indexed":false,"mutability":"mutable","name":"totalAmount","nameLocation":"2227:11:19","nodeType":"VariableDeclaration","scope":7350,"src":"2219:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7347,"name":"uint256","nodeType":"ElementaryTypeName","src":"2219:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2191:48:19"},"src":"2167:73:19"},{"body":{"id":7369,"nodeType":"Block","src":"2341:53:19","statements":[{"expression":{"id":7367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7363,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"2352:11:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7365,"name":"_rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7352,"src":"2373:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7364,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"2366:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$877_$","typeString":"type(contract IERC20)"}},"id":7366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2366:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"src":"2352:34:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":7368,"nodeType":"ExpressionStatement","src":"2352:34:19"}]},"id":7370,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d6f76696541727469636c654e4654","id":7355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2293:17:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_814d573d2655d7d726110578d4dff445b391ae832d6f59aa192ea884aa9754ff","typeString":"literal_string \"MovieArticleNFT\""},"value":"MovieArticleNFT"},{"hexValue":"4d414e4654","id":7356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2312:7:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb9adbf39b595e9e8e98abcd42309a24dfa581ea07b094eddc34b482cdfc39e7","typeString":"literal_string \"MANFT\""},"value":"MANFT"}],"id":7357,"kind":"baseConstructorSpecifier","modifierName":{"id":7354,"name":"ERC721","nameLocations":["2286:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":1860,"src":"2286:6:19"},"nodeType":"ModifierInvocation","src":"2286:34:19"},{"arguments":[{"expression":{"id":7359,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2329:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2333:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2329:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7361,"kind":"baseConstructorSpecifier","modifierName":{"id":7358,"name":"Ownable","nameLocations":["2321:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2321:7:19"},"nodeType":"ModifierInvocation","src":"2321:19:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7352,"mutability":"mutable","name":"_rewardToken","nameLocation":"2272:12:19","nodeType":"VariableDeclaration","scope":7370,"src":"2264:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7351,"name":"address","nodeType":"ElementaryTypeName","src":"2264:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2263:22:19"},"returnParameters":{"id":7362,"nodeType":"ParameterList","parameters":[],"src":"2341:0:19"},"scope":7791,"src":"2252:142:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7421,"nodeType":"Block","src":"2664:654:19","statements":[{"expression":{"id":7386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2675:13:19","subExpression":{"id":7385,"name":"_articleIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"2675:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7387,"nodeType":"ExpressionStatement","src":"2675:13:19"},{"assignments":[7389],"declarations":[{"constant":false,"id":7389,"mutability":"mutable","name":"newArticleId","nameLocation":"2707:12:19","nodeType":"VariableDeclaration","scope":7421,"src":"2699:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7388,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7391,"initialValue":{"id":7390,"name":"_articleIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"2722:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2699:34:19"},{"expression":{"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7392,"name":"articles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"2754:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Article_$7258_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Article storage ref)"}},"id":7394,"indexExpression":{"id":7393,"name":"newArticleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"2763:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2754:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$7258_storage","typeString":"struct MovieArticle.Article storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7396,"name":"newArticleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"2806:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7397,"name":"_title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"2840:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7398,"name":"_movieTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7374,"src":"2873:11:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7399,"name":"_genre","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7376,"src":"2906:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7400,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2936:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2940:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2936:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7402,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2972:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2978:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"2972:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":7404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3052:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":7406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3081:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":7407,"name":"_minContributionLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7378,"src":"3124:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7408,"name":"_maxContributors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7380,"src":"3178:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7395,"name":"Article","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7258,"src":"2779:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Article_$7258_storage_ptr_$","typeString":"type(struct MovieArticle.Article storage pointer)"}},"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2802:2:19","2833:5:19","2861:10:19","2899:5:19","2927:7:19","2961:9:19","3002:18:19","3038:12:19","3068:11:19","3101:21:19","3161:15:19"],"names":["id","title","movieTitle","genre","creator","createdAt","totalContributions","totalRewards","isCompleted","minContributionLength","maxContributors"],"nodeType":"FunctionCall","src":"2779:427:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Article_$7258_memory_ptr","typeString":"struct MovieArticle.Article memory"}},"src":"2754:452:19","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$7258_storage","typeString":"struct MovieArticle.Article storage ref"}},"id":7411,"nodeType":"ExpressionStatement","src":"2754:452:19"},{"eventCall":{"arguments":[{"id":7413,"name":"newArticleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"3247:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7414,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3261:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3265:6:19","memberName":"sender","nodeType":"MemberAccess","src":"3261:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7416,"name":"_title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"3273:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7412,"name":"ArticleCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7318,"src":"3232:14:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory)"}},"id":7417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3232:48:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7418,"nodeType":"EmitStatement","src":"3227:53:19"},{"expression":{"id":7419,"name":"newArticleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"3298:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7384,"id":7420,"nodeType":"Return","src":"3291:19:19"}]},"functionSelector":"9178af65","id":7422,"implemented":true,"kind":"function","modifiers":[],"name":"createArticle","nameLocation":"2442:13:19","nodeType":"FunctionDefinition","parameters":{"id":7381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7372,"mutability":"mutable","name":"_title","nameLocation":"2480:6:19","nodeType":"VariableDeclaration","scope":7422,"src":"2466:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7371,"name":"string","nodeType":"ElementaryTypeName","src":"2466:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7374,"mutability":"mutable","name":"_movieTitle","nameLocation":"2511:11:19","nodeType":"VariableDeclaration","scope":7422,"src":"2497:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7373,"name":"string","nodeType":"ElementaryTypeName","src":"2497:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7376,"mutability":"mutable","name":"_genre","nameLocation":"2547:6:19","nodeType":"VariableDeclaration","scope":7422,"src":"2533:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7375,"name":"string","nodeType":"ElementaryTypeName","src":"2533:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7378,"mutability":"mutable","name":"_minContributionLength","nameLocation":"2572:22:19","nodeType":"VariableDeclaration","scope":7422,"src":"2564:30:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7377,"name":"uint256","nodeType":"ElementaryTypeName","src":"2564:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7380,"mutability":"mutable","name":"_maxContributors","nameLocation":"2613:16:19","nodeType":"VariableDeclaration","scope":7422,"src":"2605:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7379,"name":"uint256","nodeType":"ElementaryTypeName","src":"2605:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2455:181:19"},"returnParameters":{"id":7384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7422,"src":"2655:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7382,"name":"uint256","nodeType":"ElementaryTypeName","src":"2655:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2654:9:19"},"scope":7791,"src":"2433:885:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7544,"nodeType":"Block","src":"3433:1271:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7430,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"3452:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7431,"name":"_articleIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"3466:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3452:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41727469636c6520646f6573206e6f74206578697374","id":7433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3479:24:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_318f2476c7a187ea609a6f60b5fe8031470a5935a58fd7a84564aa0d3e925432","typeString":"literal_string \"Article does not exist\""},"value":"Article does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_318f2476c7a187ea609a6f60b5fe8031470a5935a58fd7a84564aa0d3e925432","typeString":"literal_string \"Article does not exist\""}],"id":7429,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3444:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3444:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7435,"nodeType":"ExpressionStatement","src":"3444:60:19"},{"expression":{"arguments":[{"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3523:33:19","subExpression":{"expression":{"baseExpression":{"id":7437,"name":"articles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"3524:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Article_$7258_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Article storage ref)"}},"id":7439,"indexExpression":{"id":7438,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"3533:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3524:20:19","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$7258_storage","typeString":"struct MovieArticle.Article storage ref"}},"id":7440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3545:11:19","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":7253,"src":"3524:32:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41727469636c6520697320636f6d706c65746564","id":7442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3558:22:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_549cb4a8c3e774ad0b20f76b2942a5cbca162f76ac34664dbd7b963e12b9d3c3","typeString":"literal_string \"Article is completed\""},"value":"Article is completed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_549cb4a8c3e774ad0b20f76b2942a5cbca162f76ac34664dbd7b963e12b9d3c3","typeString":"literal_string \"Article is completed\""}],"id":7436,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3515:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3515:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7444,"nodeType":"ExpressionStatement","src":"3515:66:19"},{"expression":{"arguments":[{"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3600:39:19","subExpression":{"baseExpression":{"baseExpression":{"id":7446,"name":"hasContributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"3601:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":7448,"indexExpression":{"id":7447,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"3616:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3601:26:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7451,"indexExpression":{"expression":{"id":7449,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3628:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3632:6:19","memberName":"sender","nodeType":"MemberAccess","src":"3628:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3601:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206861766520616c726561647920636f6e747269627574656420746f20746869732061727469636c65","id":7453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3641:46:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c871f1b7893184c0a61eff62af505af653a7d64957316c5dd8e38e77764f2392","typeString":"literal_string \"You have already contributed to this article\""},"value":"You have already contributed to this article"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c871f1b7893184c0a61eff62af505af653a7d64957316c5dd8e38e77764f2392","typeString":"literal_string \"You have already contributed to this article\""}],"id":7445,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3592:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3592:96:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7455,"nodeType":"ExpressionStatement","src":"3592:96:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7459,"name":"_content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7426,"src":"3713:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3707:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7457,"name":"bytes","nodeType":"ElementaryTypeName","src":"3707:5:19","typeDescriptions":{}}},"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3707:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3723:6:19","memberName":"length","nodeType":"MemberAccess","src":"3707:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"id":7462,"name":"articles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"3733:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Article_$7258_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Article storage ref)"}},"id":7464,"indexExpression":{"id":7463,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"3742:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3733:20:19","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$7258_storage","typeString":"struct MovieArticle.Article storage ref"}},"id":7465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3754:21:19","memberName":"minContributionLength","nodeType":"MemberAccess","referencedDeclaration":7255,"src":"3733:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3707:68:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e74656e7420746f6f2073686f7274","id":7467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3777:19:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8b9ca560d0edd639e2bd9185ac1236c99f01b71294011330912cf50a5bfbee4","typeString":"literal_string \"Content too short\""},"value":"Content too short"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8b9ca560d0edd639e2bd9185ac1236c99f01b71294011330912cf50a5bfbee4","typeString":"literal_string \"Content too short\""}],"id":7456,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3699:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3699:98:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7469,"nodeType":"ExpressionStatement","src":"3699:98:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7471,"name":"articles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"3816:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Article_$7258_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Article storage ref)"}},"id":7473,"indexExpression":{"id":7472,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"3825:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3816:20:19","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$7258_storage","typeString":"struct MovieArticle.Article storage ref"}},"id":7474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3837:18:19","memberName":"totalContributions","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"3816:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":7475,"name":"articles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"3858:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Article_$7258_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Article storage ref)"}},"id":7477,"indexExpression":{"id":7476,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"3867:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3858:20:19","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$7258_storage","typeString":"struct MovieArticle.Article storage ref"}},"id":7478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3879:15:19","memberName":"maxContributors","nodeType":"MemberAccess","referencedDeclaration":7257,"src":"3858:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3816:78:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820636f6e7472696275746f72732072656163686564","id":7480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3896:26:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_23e270ac03cbb43a13b96ad46240f8c443bd3c1a0a4a872ab6e9183bce8a845a","typeString":"literal_string \"Max contributors reached\""},"value":"Max contributors reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_23e270ac03cbb43a13b96ad46240f8c443bd3c1a0a4a872ab6e9183bce8a845a","typeString":"literal_string \"Max contributors reached\""}],"id":7470,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3808:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3808:115:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7482,"nodeType":"ExpressionStatement","src":"3808:115:19"},{"expression":{"id":7484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3944:18:19","subExpression":{"id":7483,"name":"_contributionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7235,"src":"3944:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7485,"nodeType":"ExpressionStatement","src":"3944:18:19"},{"assignments":[7487],"declarations":[{"constant":false,"id":7487,"mutability":"mutable","name":"newContributionId","nameLocation":"3981:17:19","nodeType":"VariableDeclaration","scope":7544,"src":"3973:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7486,"name":"uint256","nodeType":"ElementaryTypeName","src":"3973:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7489,"initialValue":{"id":7488,"name":"_contributionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7235,"src":"4001:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3973:44:19"},{"expression":{"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7490,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"4038:13:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contribution_$7275_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Contribution storage ref)"}},"id":7492,"indexExpression":{"id":7491,"name":"newContributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7487,"src":"4052:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4038:32:19","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$7275_storage","typeString":"struct MovieArticle.Contribution storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7494,"name":"newContributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7487,"src":"4105:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7495,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"4148:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7496,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4186:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4190:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4186:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7498,"name":"_content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7426,"src":"4220:8:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7499,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4254:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4260:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"4254:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":7501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4291:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4316:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":7503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4344:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7493,"name":"Contribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"4073:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Contribution_$7275_storage_ptr_$","typeString":"type(struct MovieArticle.Contribution storage pointer)"}},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4101:2:19","4137:9:19","4173:11:19","4211:7:19","4243:9:19","4284:5:19","4307:7:19","4332:10:19"],"names":["id","articleId","contributor","content","timestamp","likes","rewards","isApproved"],"nodeType":"FunctionCall","src":"4073:288:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$7275_memory_ptr","typeString":"struct MovieArticle.Contribution memory"}},"src":"4038:323:19","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$7275_storage","typeString":"struct MovieArticle.Contribution storage ref"}},"id":7506,"nodeType":"ExpressionStatement","src":"4038:323:19"},{"expression":{"arguments":[{"id":7511,"name":"newContributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7487,"src":"4420:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":7507,"name":"articleContributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"4382:20:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":7509,"indexExpression":{"id":7508,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"4403:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4382:32:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4415:4:19","memberName":"push","nodeType":"MemberAccess","src":"4382:37:19","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":7512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4382:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7513,"nodeType":"ExpressionStatement","src":"4382:56:19"},{"expression":{"arguments":[{"id":7519,"name":"newContributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7487,"src":"4484:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":7514,"name":"userContributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"4449:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":7517,"indexExpression":{"expression":{"id":7515,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4467:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4471:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4467:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4449:29:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4479:4:19","memberName":"push","nodeType":"MemberAccess","src":"4449:34:19","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4449:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7521,"nodeType":"ExpressionStatement","src":"4449:53:19"},{"expression":{"id":7529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7522,"name":"hasContributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"4513:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":7526,"indexExpression":{"id":7523,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"4528:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4513:26:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7527,"indexExpression":{"expression":{"id":7524,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4540:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4544:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4540:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4513:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4554:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4513:45:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7530,"nodeType":"ExpressionStatement","src":"4513:45:19"},{"expression":{"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4569:41:19","subExpression":{"expression":{"baseExpression":{"id":7531,"name":"articles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"4569:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Article_$7258_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Article storage ref)"}},"id":7533,"indexExpression":{"id":7532,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"4578:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4569:20:19","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$7258_storage","typeString":"struct MovieArticle.Article storage ref"}},"id":7534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4590:18:19","memberName":"totalContributions","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"4569:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7536,"nodeType":"ExpressionStatement","src":"4569:41:19"},{"eventCall":{"arguments":[{"id":7538,"name":"newContributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7487,"src":"4654:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7539,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"4673:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7540,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4685:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4689:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4685:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7537,"name":"ContributionAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"4636:17:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7543,"nodeType":"EmitStatement","src":"4631:65:19"}]},"functionSelector":"4fa650f1","id":7545,"implemented":true,"kind":"function","modifiers":[],"name":"addContribution","nameLocation":"3364:15:19","nodeType":"FunctionDefinition","parameters":{"id":7427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7424,"mutability":"mutable","name":"_articleId","nameLocation":"3388:10:19","nodeType":"VariableDeclaration","scope":7545,"src":"3380:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7423,"name":"uint256","nodeType":"ElementaryTypeName","src":"3380:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7426,"mutability":"mutable","name":"_content","nameLocation":"3414:8:19","nodeType":"VariableDeclaration","scope":7545,"src":"3400:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7425,"name":"string","nodeType":"ElementaryTypeName","src":"3400:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3379:44:19"},"returnParameters":{"id":7428,"nodeType":"ParameterList","parameters":[],"src":"3433:0:19"},"scope":7791,"src":"3355:1349:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7600,"nodeType":"Block","src":"4802:482:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7551,"name":"_contributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7547,"src":"4821:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7552,"name":"_contributionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7235,"src":"4840:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4821:35:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e747269627574696f6e20646f6573206e6f74206578697374","id":7554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4858:29:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_8bc5c6f6c5528dc5ae3ac1cf9bf495637b9493da913183d40f293b3288430e6f","typeString":"literal_string \"Contribution does not exist\""},"value":"Contribution does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8bc5c6f6c5528dc5ae3ac1cf9bf495637b9493da913183d40f293b3288430e6f","typeString":"literal_string \"Contribution does not exist\""}],"id":7550,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4813:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4813:75:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7556,"nodeType":"ExpressionStatement","src":"4813:75:19"},{"expression":{"arguments":[{"id":7564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4907:38:19","subExpression":{"baseExpression":{"baseExpression":{"id":7558,"name":"hasLiked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"4908:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":7560,"indexExpression":{"id":7559,"name":"_contributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7547,"src":"4917:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4908:25:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7563,"indexExpression":{"expression":{"id":7561,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4934:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4938:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4934:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4908:37:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206861766520616c7265616479206c696b65642074686973","id":7565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4947:29:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_64070001cd7be5174bf6cb1186885b53bfefdb2599edd30ca264edcf6e59b5c6","typeString":"literal_string \"You have already liked this\""},"value":"You have already liked this"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64070001cd7be5174bf6cb1186885b53bfefdb2599edd30ca264edcf6e59b5c6","typeString":"literal_string \"You have already liked this\""}],"id":7557,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4899:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4899:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7567,"nodeType":"ExpressionStatement","src":"4899:78:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7569,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"4996:13:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contribution_$7275_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Contribution storage ref)"}},"id":7571,"indexExpression":{"id":7570,"name":"_contributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7547,"src":"5010:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4996:30:19","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$7275_storage","typeString":"struct MovieArticle.Contribution storage ref"}},"id":7572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5027:11:19","memberName":"contributor","nodeType":"MemberAccess","referencedDeclaration":7264,"src":"4996:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7573,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5042:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5046:6:19","memberName":"sender","nodeType":"MemberAccess","src":"5042:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4996:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74206c696b6520796f7572206f776e20636f6e747269627574696f6e","id":7576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5054:35:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f9fb7b7e7c190c50712b6e3ca34698c7d207b60087eb7739ddab517eac2a1cc","typeString":"literal_string \"Cannot like your own contribution\""},"value":"Cannot like your own contribution"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9f9fb7b7e7c190c50712b6e3ca34698c7d207b60087eb7739ddab517eac2a1cc","typeString":"literal_string \"Cannot like your own contribution\""}],"id":7568,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4988:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4988:102:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7578,"nodeType":"ExpressionStatement","src":"4988:102:19"},{"expression":{"id":7583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5111:38:19","subExpression":{"expression":{"baseExpression":{"id":7579,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"5111:13:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contribution_$7275_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Contribution storage ref)"}},"id":7581,"indexExpression":{"id":7580,"name":"_contributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7547,"src":"5125:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5111:30:19","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$7275_storage","typeString":"struct MovieArticle.Contribution storage ref"}},"id":7582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5142:5:19","memberName":"likes","nodeType":"MemberAccess","referencedDeclaration":7270,"src":"5111:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7584,"nodeType":"ExpressionStatement","src":"5111:38:19"},{"expression":{"id":7592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7585,"name":"hasLiked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"5160:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":7589,"indexExpression":{"id":7586,"name":"_contributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7547,"src":"5169:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5160:25:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7590,"indexExpression":{"expression":{"id":7587,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5186:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:19","memberName":"sender","nodeType":"MemberAccess","src":"5186:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5160:37:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5200:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5160:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7593,"nodeType":"ExpressionStatement","src":"5160:44:19"},{"eventCall":{"arguments":[{"id":7595,"name":"_contributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7547,"src":"5248:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7596,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5265:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5269:6:19","memberName":"sender","nodeType":"MemberAccess","src":"5265:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7594,"name":"ContributionLiked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"5230:17:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":7598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5230:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7599,"nodeType":"EmitStatement","src":"5225:51:19"}]},"functionSelector":"8a9a62a8","id":7601,"implemented":true,"kind":"function","modifiers":[],"name":"likeContribution","nameLocation":"4751:16:19","nodeType":"FunctionDefinition","parameters":{"id":7548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7547,"mutability":"mutable","name":"_contributionId","nameLocation":"4776:15:19","nodeType":"VariableDeclaration","scope":7601,"src":"4768:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7546,"name":"uint256","nodeType":"ElementaryTypeName","src":"4768:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4767:25:19"},"returnParameters":{"id":7549,"nodeType":"ParameterList","parameters":[],"src":"4802:0:19"},"scope":7791,"src":"4742:542:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7674,"nodeType":"Block","src":"5438:696:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7611,"name":"_contributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"5457:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7612,"name":"_contributionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7235,"src":"5476:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5457:35:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e747269627574696f6e20646f6573206e6f74206578697374","id":7614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5494:29:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_8bc5c6f6c5528dc5ae3ac1cf9bf495637b9493da913183d40f293b3288430e6f","typeString":"literal_string \"Contribution does not exist\""},"value":"Contribution does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8bc5c6f6c5528dc5ae3ac1cf9bf495637b9493da913183d40f293b3288430e6f","typeString":"literal_string \"Contribution does not exist\""}],"id":7610,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5449:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5449:75:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7616,"nodeType":"ExpressionStatement","src":"5449:75:19"},{"expression":{"arguments":[{"id":7622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5543:42:19","subExpression":{"expression":{"baseExpression":{"id":7618,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"5544:13:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contribution_$7275_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Contribution storage ref)"}},"id":7620,"indexExpression":{"id":7619,"name":"_contributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"5558:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5544:30:19","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$7275_storage","typeString":"struct MovieArticle.Contribution storage ref"}},"id":7621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5575:10:19","memberName":"isApproved","nodeType":"MemberAccess","referencedDeclaration":7274,"src":"5544:41:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e747269627574696f6e20616c726561647920617070726f766564","id":7623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5587:31:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20","typeString":"literal_string \"Contribution already approved\""},"value":"Contribution already approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20","typeString":"literal_string \"Contribution already approved\""}],"id":7617,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5535:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:84:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7625,"nodeType":"ExpressionStatement","src":"5535:84:19"},{"expression":{"id":7631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7626,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"5640:13:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contribution_$7275_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Contribution storage ref)"}},"id":7628,"indexExpression":{"id":7627,"name":"_contributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"5654:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5640:30:19","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$7275_storage","typeString":"struct MovieArticle.Contribution storage ref"}},"id":7629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5671:10:19","memberName":"isApproved","nodeType":"MemberAccess","referencedDeclaration":7274,"src":"5640:41:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5684:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5640:48:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7632,"nodeType":"ExpressionStatement","src":"5640:48:19"},{"expression":{"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7633,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"5699:13:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contribution_$7275_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Contribution storage ref)"}},"id":7635,"indexExpression":{"id":7634,"name":"_contributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"5713:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5699:30:19","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$7275_storage","typeString":"struct MovieArticle.Contribution storage ref"}},"id":7636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5730:7:19","memberName":"rewards","nodeType":"MemberAccess","referencedDeclaration":7272,"src":"5699:38:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7637,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"5740:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5699:48:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7639,"nodeType":"ExpressionStatement","src":"5699:48:19"},{"assignments":[7641],"declarations":[{"constant":false,"id":7641,"mutability":"mutable","name":"articleId","nameLocation":"5776:9:19","nodeType":"VariableDeclaration","scope":7674,"src":"5768:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7640,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7646,"initialValue":{"expression":{"baseExpression":{"id":7642,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"5788:13:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contribution_$7275_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Contribution storage ref)"}},"id":7644,"indexExpression":{"id":7643,"name":"_contributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"5802:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5788:30:19","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$7275_storage","typeString":"struct MovieArticle.Contribution storage ref"}},"id":7645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5819:9:19","memberName":"articleId","nodeType":"MemberAccess","referencedDeclaration":7262,"src":"5788:40:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5768:60:19"},{"expression":{"id":7652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7647,"name":"articles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"5839:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Article_$7258_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Article storage ref)"}},"id":7649,"indexExpression":{"id":7648,"name":"articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7641,"src":"5848:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5839:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$7258_storage","typeString":"struct MovieArticle.Article storage ref"}},"id":7650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5859:12:19","memberName":"totalRewards","nodeType":"MemberAccess","referencedDeclaration":7251,"src":"5839:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7651,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"5875:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5839:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7653,"nodeType":"ExpressionStatement","src":"5839:43:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7654,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"5942:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5952:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5942:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7668,"nodeType":"IfStatement","src":"5938:117:19","trueBody":{"id":7667,"nodeType":"Block","src":"5955:100:19","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7660,"name":"contributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"5991:13:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contribution_$7275_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Contribution storage ref)"}},"id":7662,"indexExpression":{"id":7661,"name":"_contributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"6005:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5991:30:19","typeDescriptions":{"typeIdentifier":"t_struct$_Contribution_$7275_storage","typeString":"struct MovieArticle.Contribution storage ref"}},"id":7663,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6022:11:19","memberName":"contributor","nodeType":"MemberAccess","referencedDeclaration":7264,"src":"5991:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7664,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"6035:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7657,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"5970:11:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5982:8:19","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":844,"src":"5970:20:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5970:73:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7666,"nodeType":"ExpressionStatement","src":"5970:73:19"}]}},{"eventCall":{"arguments":[{"id":7670,"name":"_contributionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"6101:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7671,"name":"_reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"6118:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7669,"name":"ContributionApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"6080:20:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6080:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7673,"nodeType":"EmitStatement","src":"6075:51:19"}]},"functionSelector":"6fd91da9","id":7675,"implemented":true,"kind":"function","modifiers":[{"id":7608,"kind":"modifierInvocation","modifierName":{"id":7607,"name":"onlyOwner","nameLocations":["5428:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5428:9:19"},"nodeType":"ModifierInvocation","src":"5428:9:19"}],"name":"approveContribution","nameLocation":"5357:19:19","nodeType":"FunctionDefinition","parameters":{"id":7606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7603,"mutability":"mutable","name":"_contributionId","nameLocation":"5385:15:19","nodeType":"VariableDeclaration","scope":7675,"src":"5377:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7602,"name":"uint256","nodeType":"ElementaryTypeName","src":"5377:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7605,"mutability":"mutable","name":"_reward","nameLocation":"5410:7:19","nodeType":"VariableDeclaration","scope":7675,"src":"5402:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7604,"name":"uint256","nodeType":"ElementaryTypeName","src":"5402:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5376:42:19"},"returnParameters":{"id":7609,"nodeType":"ParameterList","parameters":[],"src":"5438:0:19"},"scope":7791,"src":"5348:786:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7731,"nodeType":"Block","src":"6248:518:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7683,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"6267:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7684,"name":"_articleIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"6281:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6267:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41727469636c6520646f6573206e6f74206578697374","id":7686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6294:24:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_318f2476c7a187ea609a6f60b5fe8031470a5935a58fd7a84564aa0d3e925432","typeString":"literal_string \"Article does not exist\""},"value":"Article does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_318f2476c7a187ea609a6f60b5fe8031470a5935a58fd7a84564aa0d3e925432","typeString":"literal_string \"Article does not exist\""}],"id":7682,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6259:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6259:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7688,"nodeType":"ExpressionStatement","src":"6259:60:19"},{"expression":{"arguments":[{"id":7694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6338:33:19","subExpression":{"expression":{"baseExpression":{"id":7690,"name":"articles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"6339:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Article_$7258_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Article storage ref)"}},"id":7692,"indexExpression":{"id":7691,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"6348:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6339:20:19","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$7258_storage","typeString":"struct MovieArticle.Article storage ref"}},"id":7693,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6360:11:19","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":7253,"src":"6339:32:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41727469636c6520616c726561647920636f6d706c65746564","id":7695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6373:27:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_1394d4b534d0dc7bf0a3afc76d97dbbcad41ddbfb1be0e236a6002070f3821d0","typeString":"literal_string \"Article already completed\""},"value":"Article already completed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1394d4b534d0dc7bf0a3afc76d97dbbcad41ddbfb1be0e236a6002070f3821d0","typeString":"literal_string \"Article already completed\""}],"id":7689,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6330:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6330:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7697,"nodeType":"ExpressionStatement","src":"6330:71:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7699,"name":"articles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"6420:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Article_$7258_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Article storage ref)"}},"id":7701,"indexExpression":{"id":7700,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"6429:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6420:20:19","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$7258_storage","typeString":"struct MovieArticle.Article storage ref"}},"id":7702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6441:18:19","memberName":"totalContributions","nodeType":"MemberAccess","referencedDeclaration":7249,"src":"6420:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6462:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6420:43:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41727469636c6520686173206e6f20636f6e747269627574696f6e73","id":7705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6465:30:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_6b2a98265ef84b474bc9646c3d278cc98711afd3001de274b5b5af4a75c1f1fa","typeString":"literal_string \"Article has no contributions\""},"value":"Article has no contributions"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6b2a98265ef84b474bc9646c3d278cc98711afd3001de274b5b5af4a75c1f1fa","typeString":"literal_string \"Article has no contributions\""}],"id":7698,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6412:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6412:84:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7707,"nodeType":"ExpressionStatement","src":"6412:84:19"},{"expression":{"id":7713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7708,"name":"articles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"6517:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Article_$7258_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Article storage ref)"}},"id":7710,"indexExpression":{"id":7709,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"6526:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6517:20:19","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$7258_storage","typeString":"struct MovieArticle.Article storage ref"}},"id":7711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6538:11:19","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":7253,"src":"6517:32:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6552:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6517:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7714,"nodeType":"ExpressionStatement","src":"6517:39:19"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7716,"name":"articles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"6628:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Article_$7258_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Article storage ref)"}},"id":7718,"indexExpression":{"id":7717,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"6637:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6628:20:19","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$7258_storage","typeString":"struct MovieArticle.Article storage ref"}},"id":7719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6649:7:19","memberName":"creator","nodeType":"MemberAccess","referencedDeclaration":7245,"src":"6628:28:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7720,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"6658:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7715,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1538,1568],"referencedDeclaration":1538,"src":"6618:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6618:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7722,"nodeType":"ExpressionStatement","src":"6618:51:19"},{"eventCall":{"arguments":[{"id":7724,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"6712:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":7725,"name":"articles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"6724:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Article_$7258_storage_$","typeString":"mapping(uint256 => struct MovieArticle.Article storage ref)"}},"id":7727,"indexExpression":{"id":7726,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"6733:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6724:20:19","typeDescriptions":{"typeIdentifier":"t_struct$_Article_$7258_storage","typeString":"struct MovieArticle.Article storage ref"}},"id":7728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6745:12:19","memberName":"totalRewards","nodeType":"MemberAccess","referencedDeclaration":7251,"src":"6724:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7723,"name":"ArticleCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"6695:16:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6695:63:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7730,"nodeType":"EmitStatement","src":"6690:68:19"}]},"functionSelector":"d5df1e1d","id":7732,"implemented":true,"kind":"function","modifiers":[{"id":7680,"kind":"modifierInvocation","modifierName":{"id":7679,"name":"onlyOwner","nameLocations":["6238:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6238:9:19"},"nodeType":"ModifierInvocation","src":"6238:9:19"}],"name":"completeArticle","nameLocation":"6193:15:19","nodeType":"FunctionDefinition","parameters":{"id":7678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7677,"mutability":"mutable","name":"_articleId","nameLocation":"6217:10:19","nodeType":"VariableDeclaration","scope":7732,"src":"6209:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7676,"name":"uint256","nodeType":"ElementaryTypeName","src":"6209:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6208:20:19"},"returnParameters":{"id":7681,"nodeType":"ParameterList","parameters":[],"src":"6248:0:19"},"scope":7791,"src":"6184:582:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7744,"nodeType":"Block","src":"6917:58:19","statements":[{"expression":{"baseExpression":{"id":7740,"name":"articleContributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"6935:20:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":7742,"indexExpression":{"id":7741,"name":"_articleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"6956:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6935:32:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":7739,"id":7743,"nodeType":"Return","src":"6928:39:19"}]},"functionSelector":"e3e03dc0","id":7745,"implemented":true,"kind":"function","modifiers":[],"name":"getArticleContributions","nameLocation":"6832:23:19","nodeType":"FunctionDefinition","parameters":{"id":7735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7734,"mutability":"mutable","name":"_articleId","nameLocation":"6864:10:19","nodeType":"VariableDeclaration","scope":7745,"src":"6856:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7733,"name":"uint256","nodeType":"ElementaryTypeName","src":"6856:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6855:20:19"},"returnParameters":{"id":7739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7745,"src":"6899:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7736,"name":"uint256","nodeType":"ElementaryTypeName","src":"6899:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7737,"nodeType":"ArrayTypeName","src":"6899:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6898:18:19"},"scope":7791,"src":"6823:152:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7757,"nodeType":"Block","src":"7113:50:19","statements":[{"expression":{"baseExpression":{"id":7753,"name":"userContributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"7131:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":7755,"indexExpression":{"id":7754,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"7149:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7131:24:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":7752,"id":7756,"nodeType":"Return","src":"7124:31:19"}]},"functionSelector":"e36465a3","id":7758,"implemented":true,"kind":"function","modifiers":[],"name":"getUserContributions","nameLocation":"7036:20:19","nodeType":"FunctionDefinition","parameters":{"id":7748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7747,"mutability":"mutable","name":"_user","nameLocation":"7065:5:19","nodeType":"VariableDeclaration","scope":7758,"src":"7057:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7746,"name":"address","nodeType":"ElementaryTypeName","src":"7057:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7056:15:19"},"returnParameters":{"id":7752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7758,"src":"7095:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7749,"name":"uint256","nodeType":"ElementaryTypeName","src":"7095:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7750,"nodeType":"ArrayTypeName","src":"7095:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7094:18:19"},"scope":7791,"src":"7027:136:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7765,"nodeType":"Block","src":"7272:37:19","statements":[{"expression":{"id":7763,"name":"_articleIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"7290:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7762,"id":7764,"nodeType":"Return","src":"7283:18:19"}]},"functionSelector":"0ebf1d3d","id":7766,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalArticles","nameLocation":"7221:16:19","nodeType":"FunctionDefinition","parameters":{"id":7759,"nodeType":"ParameterList","parameters":[],"src":"7237:2:19"},"returnParameters":{"id":7762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7766,"src":"7263:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7760,"name":"uint256","nodeType":"ElementaryTypeName","src":"7263:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7262:9:19"},"scope":7791,"src":"7212:97:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7773,"nodeType":"Block","src":"7428:42:19","statements":[{"expression":{"id":7771,"name":"_contributionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7235,"src":"7446:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7770,"id":7772,"nodeType":"Return","src":"7439:23:19"}]},"functionSelector":"ddf556d0","id":7774,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalContributions","nameLocation":"7372:21:19","nodeType":"FunctionDefinition","parameters":{"id":7767,"nodeType":"ParameterList","parameters":[],"src":"7393:2:19"},"returnParameters":{"id":7770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7774,"src":"7419:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7768,"name":"uint256","nodeType":"ElementaryTypeName","src":"7419:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7418:9:19"},"scope":7791,"src":"7363:107:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7789,"nodeType":"Block","src":"7580:57:19","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":7784,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"7612:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7612:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7786,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7776,"src":"7621:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7781,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"7591:11:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7603:8:19","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":844,"src":"7591:20:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7591:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7788,"nodeType":"ExpressionStatement","src":"7591:38:19"}]},"functionSelector":"315a095d","id":7790,"implemented":true,"kind":"function","modifiers":[{"id":7779,"kind":"modifierInvocation","modifierName":{"id":7778,"name":"onlyOwner","nameLocations":["7570:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7570:9:19"},"nodeType":"ModifierInvocation","src":"7570:9:19"}],"name":"withdrawTokens","nameLocation":"7529:14:19","nodeType":"FunctionDefinition","parameters":{"id":7777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7776,"mutability":"mutable","name":"_amount","nameLocation":"7552:7:19","nodeType":"VariableDeclaration","scope":7790,"src":"7544:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7775,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7543:17:19"},"returnParameters":{"id":7780,"nodeType":"ParameterList","parameters":[],"src":"7580:0:19"},"scope":7791,"src":"7520:117:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7792,"src":"295:7345:19","usedErrors":[13,18,195,200,209,214,219,226,231,236,2196],"usedEvents":[24,1876,1885,1894,7318,7326,7332,7338,7344,7350]}],"src":"33:7608:19"},"id":19},"contracts/RewardToken.sol":{"ast":{"absolutePath":"contracts/RewardToken.sol","exportedSymbols":{"Context":[2130],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903],"Ownable":[147],"RewardToken":[7851]},"id":7852,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7793,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":7794,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7852,"sourceUnit":800,"src":"61:55:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7795,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7852,"sourceUnit":148,"src":"118:52:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7796,"name":"ERC20","nameLocations":["198:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"198:5:20"},"id":7797,"nodeType":"InheritanceSpecifier","src":"198:5:20"},{"baseName":{"id":7798,"name":"Ownable","nameLocations":["205:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"205:7:20"},"id":7799,"nodeType":"InheritanceSpecifier","src":"205:7:20"}],"canonicalName":"RewardToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7851,"linearizedBaseContracts":[7851,147,799,189,903,877,2130],"name":"RewardToken","nameLocation":"183:11:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":7822,"nodeType":"Block","src":"404:53:20","statements":[{"expression":{"arguments":[{"id":7818,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"421:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7819,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"435:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7817,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"415:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"415:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7821,"nodeType":"ExpressionStatement","src":"415:34:20"}]},"id":7823,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7810,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"368:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7811,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"374:6:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7812,"kind":"baseConstructorSpecifier","modifierName":{"id":7809,"name":"ERC20","nameLocations":["362:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"362:5:20"},"nodeType":"ModifierInvocation","src":"362:19:20"},{"arguments":[{"id":7814,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"390:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7815,"kind":"baseConstructorSpecifier","modifierName":{"id":7813,"name":"Ownable","nameLocations":["382:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"382:7:20"},"nodeType":"ModifierInvocation","src":"382:21:20"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7801,"mutability":"mutable","name":"name","nameLocation":"256:4:20","nodeType":"VariableDeclaration","scope":7823,"src":"242:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7800,"name":"string","nodeType":"ElementaryTypeName","src":"242:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7803,"mutability":"mutable","name":"symbol","nameLocation":"285:6:20","nodeType":"VariableDeclaration","scope":7823,"src":"271:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7802,"name":"string","nodeType":"ElementaryTypeName","src":"271:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7805,"mutability":"mutable","name":"initialSupply","nameLocation":"310:13:20","nodeType":"VariableDeclaration","scope":7823,"src":"302:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7804,"name":"uint256","nodeType":"ElementaryTypeName","src":"302:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7807,"mutability":"mutable","name":"initialOwner","nameLocation":"342:12:20","nodeType":"VariableDeclaration","scope":7823,"src":"334:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7806,"name":"address","nodeType":"ElementaryTypeName","src":"334:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"231:130:20"},"returnParameters":{"id":7816,"nodeType":"ParameterList","parameters":[],"src":"404:0:20"},"scope":7851,"src":"220:237:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7837,"nodeType":"Block","src":"575:36:20","statements":[{"expression":{"arguments":[{"id":7833,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"592:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7834,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7827,"src":"596:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7832,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"586:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"586:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7836,"nodeType":"ExpressionStatement","src":"586:17:20"}]},"functionSelector":"40c10f19","id":7838,"implemented":true,"kind":"function","modifiers":[{"id":7830,"kind":"modifierInvocation","modifierName":{"id":7829,"name":"onlyOwner","nameLocations":["565:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"565:9:20"},"nodeType":"ModifierInvocation","src":"565:9:20"}],"name":"mint","nameLocation":"523:4:20","nodeType":"FunctionDefinition","parameters":{"id":7828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7825,"mutability":"mutable","name":"to","nameLocation":"536:2:20","nodeType":"VariableDeclaration","scope":7838,"src":"528:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7824,"name":"address","nodeType":"ElementaryTypeName","src":"528:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7827,"mutability":"mutable","name":"amount","nameLocation":"548:6:20","nodeType":"VariableDeclaration","scope":7838,"src":"540:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7826,"name":"uint256","nodeType":"ElementaryTypeName","src":"540:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"527:28:20"},"returnParameters":{"id":7831,"nodeType":"ParameterList","parameters":[],"src":"575:0:20"},"scope":7851,"src":"514:97:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7849,"nodeType":"Block","src":"683:44:20","statements":[{"expression":{"arguments":[{"expression":{"id":7844,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"700:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"704:6:20","memberName":"sender","nodeType":"MemberAccess","src":"700:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7846,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"712:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7843,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"694:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"694:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7848,"nodeType":"ExpressionStatement","src":"694:25:20"}]},"functionSelector":"42966c68","id":7850,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"653:4:20","nodeType":"FunctionDefinition","parameters":{"id":7841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7840,"mutability":"mutable","name":"amount","nameLocation":"666:6:20","nodeType":"VariableDeclaration","scope":7850,"src":"658:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7839,"name":"uint256","nodeType":"ElementaryTypeName","src":"658:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"657:16:20"},"returnParameters":{"id":7842,"nodeType":"ParameterList","parameters":[],"src":"683:0:20"},"scope":7851,"src":"644:83:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7852,"src":"174:556:20","usedErrors":[13,18,159,164,169,178,183,188],"usedEvents":[24,811,820]}],"src":"33:698:20"},"id":20}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209efd8f35d190e6a3d8c9ee6c5dc31515460653c9b34ccb70cbb94a7bdf6c672064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 REVERT DUP16 CALLDATALOAD 0xD1 SWAP1 0xE6 LOG3 0xD8 0xC9 0xEE PUSH13 0x5DC31515460653C9B34CCB70CB 0xB9 0x4A PUSH28 0xDF6C672064736F6C6343000814003300000000000000000000000000 ","sourceMap":"431:1488:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209efd8f35d190e6a3d8c9ee6c5dc31515460653c9b34ccb70cbb94a7bdf6c672064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 REVERT DUP16 CALLDATALOAD 0xD1 SWAP1 0xE6 LOG3 0xD8 0xC9 0xEE PUSH13 0x5DC31515460653C9B34CCB70CB 0xB9 0x4A PUSH28 0xDF6C672064736F6C6343000814003300000000000000000000000000 ","sourceMap":"431:1488:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bb1c62e0c3e7a6559983a340dc7c49df2af9528361710304691b76111e32808164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB SHR PUSH3 0xE0C3E7 0xA6 SSTORE SWAP10 DUP4 LOG3 BLOCKHASH 0xDC PUSH29 0x49DF2AF9528361710304691B76111E32808164736F6C63430008140033 ","sourceMap":"297:18980:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bb1c62e0c3e7a6559983a340dc7c49df2af9528361710304691b76111e32808164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB SHR PUSH3 0xE0C3E7 0xA6 SSTORE SWAP10 DUP4 LOG3 BLOCKHASH 0xDC PUSH29 0x49DF2AF9528361710304691B76111E32808164736F6C63430008140033 ","sourceMap":"297:18980:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/MovieArticle.sol":{"MovieArticle":{"abi":[{"inputs":[{"internalType":"address","name":"_rewardToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"articleId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalRewards","type":"uint256"}],"name":"ArticleCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"articleId","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"string","name":"title","type":"string"}],"name":"ArticleCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"contributionId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"articleId","type":"uint256"},{"indexed":true,"internalType":"address","name":"contributor","type":"address"}],"name":"ContributionAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"contributionId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"ContributionApproved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"contributionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"liker","type":"address"}],"name":"ContributionLiked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"articleId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalAmount","type":"uint256"}],"name":"RewardsDistributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"uint256","name":"_articleId","type":"uint256"},{"internalType":"string","name":"_content","type":"string"}],"name":"addContribution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contributionId","type":"uint256"},{"internalType":"uint256","name":"_reward","type":"uint256"}],"name":"approveContribution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"articleContributions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"articles","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"movieTitle","type":"string"},{"internalType":"string","name":"genre","type":"string"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"totalContributions","type":"uint256"},{"internalType":"uint256","name":"totalRewards","type":"uint256"},{"internalType":"bool","name":"isCompleted","type":"bool"},{"internalType":"uint256","name":"minContributionLength","type":"uint256"},{"internalType":"uint256","name":"maxContributors","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_articleId","type":"uint256"}],"name":"completeArticle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"contributions","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"articleId","type":"uint256"},{"internalType":"address","name":"contributor","type":"address"},{"internalType":"string","name":"content","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"likes","type":"uint256"},{"internalType":"uint256","name":"rewards","type":"uint256"},{"internalType":"bool","name":"isApproved","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_title","type":"string"},{"internalType":"string","name":"_movieTitle","type":"string"},{"internalType":"string","name":"_genre","type":"string"},{"internalType":"uint256","name":"_minContributionLength","type":"uint256"},{"internalType":"uint256","name":"_maxContributors","type":"uint256"}],"name":"createArticle","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_articleId","type":"uint256"}],"name":"getArticleContributions","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalArticles","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalContributions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUserContributions","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"hasContributed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"hasLiked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contributionId","type":"uint256"}],"name":"likeContribution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userContributions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawTokens","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2204":{"entryPoint":null,"id":2204,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7370":{"entryPoint":null,"id":7370,"parameterSlots":1,"returnSlots":0},"@_973":{"entryPoint":null,"id":973,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":417,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":698,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":721,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1636,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1653,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":929,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":771,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1250,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":652,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":620,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1065,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1211,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1085,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1405,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":950,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":876,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1375,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1075,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1343,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":829,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":782,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1125,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":615,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":966,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1330,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1183,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":979,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1135,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":672,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1178,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6778:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"379:81:21","statements":[{"nodeType":"YulAssignment","src":"389:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:21"},"nodeType":"YulFunctionCall","src":"400:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:126:21"},{"body":{"nodeType":"YulBlock","src":"511:51:21","statements":[{"nodeType":"YulAssignment","src":"521:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:21"},"nodeType":"YulFunctionCall","src":"532:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:21","type":""}],"src":"466:96:21"},{"body":{"nodeType":"YulBlock","src":"611:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:21"},"nodeType":"YulFunctionCall","src":"670:12:21"},"nodeType":"YulExpressionStatement","src":"670:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:21"},"nodeType":"YulFunctionCall","src":"641:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:21"},"nodeType":"YulFunctionCall","src":"631:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:21"},"nodeType":"YulFunctionCall","src":"624:43:21"},"nodeType":"YulIf","src":"621:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:21","type":""}],"src":"568:122:21"},{"body":{"nodeType":"YulBlock","src":"759:80:21","statements":[{"nodeType":"YulAssignment","src":"769:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:21"},"nodeType":"YulFunctionCall","src":"778:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:21"},"nodeType":"YulFunctionCall","src":"800:33:21"},"nodeType":"YulExpressionStatement","src":"800:33:21"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:21","type":""}],"src":"696:143:21"},{"body":{"nodeType":"YulBlock","src":"922:274:21","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:21"},"nodeType":"YulFunctionCall","src":"970:79:21"},"nodeType":"YulExpressionStatement","src":"970:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:21"},"nodeType":"YulFunctionCall","src":"939:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:21"},"nodeType":"YulFunctionCall","src":"935:32:21"},"nodeType":"YulIf","src":"932:119:21"},{"nodeType":"YulBlock","src":"1061:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:21"},"nodeType":"YulFunctionCall","src":"1147:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:21"},"nodeType":"YulFunctionCall","src":"1115:64:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:21"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:21","type":""}],"src":"845:351:21"},{"body":{"nodeType":"YulBlock","src":"1261:40:21","statements":[{"nodeType":"YulAssignment","src":"1272:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1288:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1282:5:21"},"nodeType":"YulFunctionCall","src":"1282:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1272:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1244:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1254:6:21","type":""}],"src":"1202:99:21"},{"body":{"nodeType":"YulBlock","src":"1335:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1352:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1355:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1345:6:21"},"nodeType":"YulFunctionCall","src":"1345:88:21"},"nodeType":"YulExpressionStatement","src":"1345:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1449:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1452:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1442:6:21"},"nodeType":"YulFunctionCall","src":"1442:15:21"},"nodeType":"YulExpressionStatement","src":"1442:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:21"},"nodeType":"YulFunctionCall","src":"1466:15:21"},"nodeType":"YulExpressionStatement","src":"1466:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1307:180:21"},{"body":{"nodeType":"YulBlock","src":"1521:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1538:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1541:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1531:6:21"},"nodeType":"YulFunctionCall","src":"1531:88:21"},"nodeType":"YulExpressionStatement","src":"1531:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1635:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1638:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1628:6:21"},"nodeType":"YulFunctionCall","src":"1628:15:21"},"nodeType":"YulExpressionStatement","src":"1628:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:21"},"nodeType":"YulFunctionCall","src":"1652:15:21"},"nodeType":"YulExpressionStatement","src":"1652:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1493:180:21"},{"body":{"nodeType":"YulBlock","src":"1730:269:21","statements":[{"nodeType":"YulAssignment","src":"1740:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1754:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"1760:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1750:3:21"},"nodeType":"YulFunctionCall","src":"1750:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1740:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1771:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1801:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"1807:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1797:3:21"},"nodeType":"YulFunctionCall","src":"1797:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1775:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1848:51:21","statements":[{"nodeType":"YulAssignment","src":"1862:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1876:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1884:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1872:3:21"},"nodeType":"YulFunctionCall","src":"1872:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1862:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1828:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1821:6:21"},"nodeType":"YulFunctionCall","src":"1821:26:21"},"nodeType":"YulIf","src":"1818:81:21"},{"body":{"nodeType":"YulBlock","src":"1951:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"1965:16:21"},"nodeType":"YulFunctionCall","src":"1965:18:21"},"nodeType":"YulExpressionStatement","src":"1965:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1915:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1938:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1946:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1935:2:21"},"nodeType":"YulFunctionCall","src":"1935:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1912:2:21"},"nodeType":"YulFunctionCall","src":"1912:38:21"},"nodeType":"YulIf","src":"1909:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1714:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1723:6:21","type":""}],"src":"1679:320:21"},{"body":{"nodeType":"YulBlock","src":"2059:87:21","statements":[{"nodeType":"YulAssignment","src":"2069:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2077:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2069:4:21"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2097:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2100:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2090:6:21"},"nodeType":"YulFunctionCall","src":"2090:14:21"},"nodeType":"YulExpressionStatement","src":"2090:14:21"},{"nodeType":"YulAssignment","src":"2113:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2131:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2134:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2121:9:21"},"nodeType":"YulFunctionCall","src":"2121:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2113:4:21"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2046:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2054:4:21","type":""}],"src":"2005:141:21"},{"body":{"nodeType":"YulBlock","src":"2196:49:21","statements":[{"nodeType":"YulAssignment","src":"2206:33:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2224:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2231:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2220:3:21"},"nodeType":"YulFunctionCall","src":"2220:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"2236:2:21","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2216:3:21"},"nodeType":"YulFunctionCall","src":"2216:23:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2206:6:21"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2179:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2189:6:21","type":""}],"src":"2152:93:21"},{"body":{"nodeType":"YulBlock","src":"2304:54:21","statements":[{"nodeType":"YulAssignment","src":"2314:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2339:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"2345:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2335:3:21"},"nodeType":"YulFunctionCall","src":"2335:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2314:8:21"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2279:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"2285:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2295:8:21","type":""}],"src":"2251:107:21"},{"body":{"nodeType":"YulBlock","src":"2440:317:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2450:35:21","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2471:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"2483:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2467:3:21"},"nodeType":"YulFunctionCall","src":"2467:18:21"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2454:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2494:109:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2525:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2536:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2506:18:21"},"nodeType":"YulFunctionCall","src":"2506:97:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2498:4:21","type":""}]},{"nodeType":"YulAssignment","src":"2612:51:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2643:9:21"},{"name":"toInsert","nodeType":"YulIdentifier","src":"2654:8:21"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2624:18:21"},"nodeType":"YulFunctionCall","src":"2624:39:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2612:8:21"}]},{"nodeType":"YulAssignment","src":"2672:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2685:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"2696:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2692:3:21"},"nodeType":"YulFunctionCall","src":"2692:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2681:3:21"},"nodeType":"YulFunctionCall","src":"2681:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2672:5:21"}]},{"nodeType":"YulAssignment","src":"2711:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2724:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2735:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"2745:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2731:3:21"},"nodeType":"YulFunctionCall","src":"2731:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2721:2:21"},"nodeType":"YulFunctionCall","src":"2721:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2711:6:21"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2401:5:21","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2408:10:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2420:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2433:6:21","type":""}],"src":"2364:393:21"},{"body":{"nodeType":"YulBlock","src":"2808:32:21","statements":[{"nodeType":"YulAssignment","src":"2818:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2829:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2818:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2790:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2800:7:21","type":""}],"src":"2763:77:21"},{"body":{"nodeType":"YulBlock","src":"2878:28:21","statements":[{"nodeType":"YulAssignment","src":"2888:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2895:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2888:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2864:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2874:3:21","type":""}],"src":"2846:60:21"},{"body":{"nodeType":"YulBlock","src":"2972:82:21","statements":[{"nodeType":"YulAssignment","src":"2982:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3040:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3022:17:21"},"nodeType":"YulFunctionCall","src":"3022:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3013:8:21"},"nodeType":"YulFunctionCall","src":"3013:34:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2995:17:21"},"nodeType":"YulFunctionCall","src":"2995:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2982:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2952:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2962:9:21","type":""}],"src":"2912:142:21"},{"body":{"nodeType":"YulBlock","src":"3107:28:21","statements":[{"nodeType":"YulAssignment","src":"3117:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"3124:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3117:3:21"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3093:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3103:3:21","type":""}],"src":"3060:75:21"},{"body":{"nodeType":"YulBlock","src":"3217:193:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3227:63:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3282:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3251:30:21"},"nodeType":"YulFunctionCall","src":"3251:39:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3231:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3306:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3346:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3340:5:21"},"nodeType":"YulFunctionCall","src":"3340:11:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3353:6:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3385:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3361:23:21"},"nodeType":"YulFunctionCall","src":"3361:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3312:27:21"},"nodeType":"YulFunctionCall","src":"3312:91:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3299:6:21"},"nodeType":"YulFunctionCall","src":"3299:105:21"},"nodeType":"YulExpressionStatement","src":"3299:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3194:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3200:6:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3208:7:21","type":""}],"src":"3141:269:21"},{"body":{"nodeType":"YulBlock","src":"3465:24:21","statements":[{"nodeType":"YulAssignment","src":"3475:8:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3482:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3475:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3461:3:21","type":""}],"src":"3416:73:21"},{"body":{"nodeType":"YulBlock","src":"3548:136:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3558:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3572:30:21"},"nodeType":"YulFunctionCall","src":"3572:32:21"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3562:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3657:4:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3663:6:21"},{"name":"zero_0","nodeType":"YulIdentifier","src":"3671:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3613:43:21"},"nodeType":"YulFunctionCall","src":"3613:65:21"},"nodeType":"YulExpressionStatement","src":"3613:65:21"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3534:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3540:6:21","type":""}],"src":"3495:189:21"},{"body":{"nodeType":"YulBlock","src":"3740:136:21","statements":[{"body":{"nodeType":"YulBlock","src":"3807:63:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3851:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3858:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"3821:29:21"},"nodeType":"YulFunctionCall","src":"3821:39:21"},"nodeType":"YulExpressionStatement","src":"3821:39:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3760:5:21"},{"name":"end","nodeType":"YulIdentifier","src":"3767:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3757:2:21"},"nodeType":"YulFunctionCall","src":"3757:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3772:26:21","statements":[{"nodeType":"YulAssignment","src":"3774:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3787:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3794:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3783:3:21"},"nodeType":"YulFunctionCall","src":"3783:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3774:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"3754:2:21","statements":[]},"src":"3750:120:21"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"3728:5:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"3735:3:21","type":""}],"src":"3690:186:21"},{"body":{"nodeType":"YulBlock","src":"3961:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"3987:431:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4001:54:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4049:5:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4017:31:21"},"nodeType":"YulFunctionCall","src":"4017:38:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4005:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4068:63:21","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4091:8:21"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4119:10:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4101:17:21"},"nodeType":"YulFunctionCall","src":"4101:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4087:3:21"},"nodeType":"YulFunctionCall","src":"4087:44:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4072:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"4288:27:21","statements":[{"nodeType":"YulAssignment","src":"4290:23:21","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4305:8:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4290:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4272:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"4284:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4269:2:21"},"nodeType":"YulFunctionCall","src":"4269:18:21"},"nodeType":"YulIf","src":"4266:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4357:11:21"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4374:8:21"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4402:3:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4384:17:21"},"nodeType":"YulFunctionCall","src":"4384:22:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4370:3:21"},"nodeType":"YulFunctionCall","src":"4370:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4328:28:21"},"nodeType":"YulFunctionCall","src":"4328:80:21"},"nodeType":"YulExpressionStatement","src":"4328:80:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3978:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3983:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3975:2:21"},"nodeType":"YulFunctionCall","src":"3975:11:21"},"nodeType":"YulIf","src":"3972:446:21"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3937:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"3944:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"3949:10:21","type":""}],"src":"3882:543:21"},{"body":{"nodeType":"YulBlock","src":"4494:54:21","statements":[{"nodeType":"YulAssignment","src":"4504:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4529:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"4535:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4525:3:21"},"nodeType":"YulFunctionCall","src":"4525:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4504:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4469:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"4475:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4485:8:21","type":""}],"src":"4431:117:21"},{"body":{"nodeType":"YulBlock","src":"4605:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4615:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4664:1:21","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"4667:5:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4660:3:21"},"nodeType":"YulFunctionCall","src":"4660:13:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4679:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4675:3:21"},"nodeType":"YulFunctionCall","src":"4675:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4631:28:21"},"nodeType":"YulFunctionCall","src":"4631:51:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4627:3:21"},"nodeType":"YulFunctionCall","src":"4627:56:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4619:4:21","type":""}]},{"nodeType":"YulAssignment","src":"4692:25:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4706:4:21"},{"name":"mask","nodeType":"YulIdentifier","src":"4712:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4702:3:21"},"nodeType":"YulFunctionCall","src":"4702:15:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4692:6:21"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4582:4:21","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4588:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4598:6:21","type":""}],"src":"4554:169:21"},{"body":{"nodeType":"YulBlock","src":"4809:214:21","statements":[{"nodeType":"YulAssignment","src":"4942:37:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4969:4:21"},{"name":"len","nodeType":"YulIdentifier","src":"4975:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4950:18:21"},"nodeType":"YulFunctionCall","src":"4950:29:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4942:4:21"}]},{"nodeType":"YulAssignment","src":"4988:29:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4999:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5009:1:21","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5012:3:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5005:3:21"},"nodeType":"YulFunctionCall","src":"5005:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4996:2:21"},"nodeType":"YulFunctionCall","src":"4996:21:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"4988:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4790:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"4796:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"4804:4:21","type":""}],"src":"4728:295:21"},{"body":{"nodeType":"YulBlock","src":"5120:1303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5131:51:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5178:3:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5145:32:21"},"nodeType":"YulFunctionCall","src":"5145:37:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5135:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5267:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5269:16:21"},"nodeType":"YulFunctionCall","src":"5269:18:21"},"nodeType":"YulExpressionStatement","src":"5269:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5239:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5247:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5236:2:21"},"nodeType":"YulFunctionCall","src":"5236:30:21"},"nodeType":"YulIf","src":"5233:56:21"},{"nodeType":"YulVariableDeclaration","src":"5299:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5345:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5339:5:21"},"nodeType":"YulFunctionCall","src":"5339:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5313:25:21"},"nodeType":"YulFunctionCall","src":"5313:38:21"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5303:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5444:4:21"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5450:6:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"5458:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5398:45:21"},"nodeType":"YulFunctionCall","src":"5398:67:21"},"nodeType":"YulExpressionStatement","src":"5398:67:21"},{"nodeType":"YulVariableDeclaration","src":"5475:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5492:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5479:9:21","type":""}]},{"nodeType":"YulAssignment","src":"5503:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5516:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5503:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5567:611:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5581:37:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5600:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5612:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5608:3:21"},"nodeType":"YulFunctionCall","src":"5608:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5596:3:21"},"nodeType":"YulFunctionCall","src":"5596:22:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5585:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5632:51:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5678:4:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5646:31:21"},"nodeType":"YulFunctionCall","src":"5646:37:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5636:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5696:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5705:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5700:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5764:163:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5789:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5807:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5812:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5803:3:21"},"nodeType":"YulFunctionCall","src":"5803:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5797:5:21"},"nodeType":"YulFunctionCall","src":"5797:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5782:6:21"},"nodeType":"YulFunctionCall","src":"5782:42:21"},"nodeType":"YulExpressionStatement","src":"5782:42:21"},{"nodeType":"YulAssignment","src":"5841:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5855:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5863:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5851:3:21"},"nodeType":"YulFunctionCall","src":"5851:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5841:6:21"}]},{"nodeType":"YulAssignment","src":"5882:31:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5899:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5910:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5895:3:21"},"nodeType":"YulFunctionCall","src":"5895:18:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5882:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5730:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5733:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5727:2:21"},"nodeType":"YulFunctionCall","src":"5727:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5742:21:21","statements":[{"nodeType":"YulAssignment","src":"5744:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5753:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"5756:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5749:3:21"},"nodeType":"YulFunctionCall","src":"5749:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5744:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"5723:3:21","statements":[]},"src":"5719:208:21"},{"body":{"nodeType":"YulBlock","src":"5963:156:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5981:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6008:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6013:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6004:3:21"},"nodeType":"YulFunctionCall","src":"6004:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5998:5:21"},"nodeType":"YulFunctionCall","src":"5998:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"5985:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6048:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6075:9:21"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6090:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6098:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6086:3:21"},"nodeType":"YulFunctionCall","src":"6086:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6056:18:21"},"nodeType":"YulFunctionCall","src":"6056:48:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6041:6:21"},"nodeType":"YulFunctionCall","src":"6041:64:21"},"nodeType":"YulExpressionStatement","src":"6041:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"5946:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"5955:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5943:2:21"},"nodeType":"YulFunctionCall","src":"5943:19:21"},"nodeType":"YulIf","src":"5940:179:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6139:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6153:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6161:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6149:3:21"},"nodeType":"YulFunctionCall","src":"6149:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"6165:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6145:3:21"},"nodeType":"YulFunctionCall","src":"6145:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6132:6:21"},"nodeType":"YulFunctionCall","src":"6132:36:21"},"nodeType":"YulExpressionStatement","src":"6132:36:21"}]},"nodeType":"YulCase","src":"5560:618:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5565:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6195:222:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6209:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6222:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6213:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6246:67:21","statements":[{"nodeType":"YulAssignment","src":"6264:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6283:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6288:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6279:3:21"},"nodeType":"YulFunctionCall","src":"6279:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6273:5:21"},"nodeType":"YulFunctionCall","src":"6273:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6264:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6239:6:21"},"nodeType":"YulIf","src":"6236:77:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6333:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6392:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"6399:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6339:52:21"},"nodeType":"YulFunctionCall","src":"6339:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6326:6:21"},"nodeType":"YulFunctionCall","src":"6326:81:21"},"nodeType":"YulExpressionStatement","src":"6326:81:21"}]},"nodeType":"YulCase","src":"6187:230:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5540:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5548:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5537:2:21"},"nodeType":"YulFunctionCall","src":"5537:14:21"},"nodeType":"YulSwitch","src":"5530:887:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5109:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"5115:3:21","type":""}],"src":"5028:1395:21"},{"body":{"nodeType":"YulBlock","src":"6494:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6511:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6534:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6516:17:21"},"nodeType":"YulFunctionCall","src":"6516:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6504:6:21"},"nodeType":"YulFunctionCall","src":"6504:37:21"},"nodeType":"YulExpressionStatement","src":"6504:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6482:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6489:3:21","type":""}],"src":"6429:118:21"},{"body":{"nodeType":"YulBlock","src":"6651:124:21","statements":[{"nodeType":"YulAssignment","src":"6661:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6673:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6684:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6669:3:21"},"nodeType":"YulFunctionCall","src":"6669:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6661:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6741:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6754:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6765:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6750:3:21"},"nodeType":"YulFunctionCall","src":"6750:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6697:43:21"},"nodeType":"YulFunctionCall","src":"6697:71:21"},"nodeType":"YulExpressionStatement","src":"6697:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6623:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6635:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6646:4:21","type":""}],"src":"6553:222:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162004ac138038062004ac18339818101604052810190620000379190620002d1565b336040518060400160405280600f81526020017f4d6f76696541727469636c654e465400000000000000000000000000000000008152506040518060400160405280600581526020017f4d414e46540000000000000000000000000000000000000000000000000000008152508160009081620000b591906200057d565b508060019081620000c791906200057d565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013f5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000136919062000675565b60405180910390fd5b6200015081620001a160201b60201c565b50600160078190555080601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000692565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000299826200026c565b9050919050565b620002ab816200028c565b8114620002b757600080fd5b50565b600081519050620002cb81620002a0565b92915050565b600060208284031215620002ea57620002e962000267565b5b6000620002fa84828501620002ba565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038557607f821691505b6020821081036200039b576200039a6200033d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004057fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003c6565b620004118683620003c6565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200045e62000458620004528462000429565b62000433565b62000429565b9050919050565b6000819050919050565b6200047a836200043d565b62000492620004898262000465565b848454620003d3565b825550505050565b600090565b620004a96200049a565b620004b68184846200046f565b505050565b5b81811015620004de57620004d26000826200049f565b600181019050620004bc565b5050565b601f8211156200052d57620004f781620003a1565b6200050284620003b6565b8101602085101562000512578190505b6200052a6200052185620003b6565b830182620004bb565b50505b505050565b600082821c905092915050565b6000620005526000198460080262000532565b1980831691505092915050565b60006200056d83836200053f565b9150826002028217905092915050565b620005888262000303565b67ffffffffffffffff811115620005a457620005a36200030e565b5b620005b082546200036c565b620005bd828285620004e2565b600060209050601f831160018114620005f55760008415620005e0578287015190505b620005ec85826200055f565b8655506200065c565b601f1984166200060586620003a1565b60005b828110156200062f5784890151825560018201915060208501945060208101905062000608565b868310156200064f57848901516200064b601f8916826200053f565b8355505b6001600288020188555050505b505050505050565b6200066f816200028c565b82525050565b60006020820190506200068c600083018462000664565b92915050565b61441f80620006a26000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80638a9a62a81161011a578063c87b56dd116100ad578063e3e03dc01161007c578063e3e03dc0146105ff578063e985e9c51461062f578063edcfafe61461065f578063f2fde38b14610699578063f7c618c1146106b5576101fb565b8063c87b56dd14610565578063d5df1e1d14610595578063ddf556d0146105b1578063e36465a3146105cf576101fb565b806395d89b41116100e957806395d89b41146104df578063a22cb465146104fd578063b5b96ae014610519578063b88d4fde14610549576101fb565b80638a9a62a8146104455780638da5cb5b146104615780638fb7092c1461047f5780639178af65146104af576101fb565b8063315a095d116101925780636fd91da9116101615780636fd91da9146103bf57806370a08231146103db578063715018a61461040b5780637331fa9514610415576101fb565b8063315a095d1461033b57806342842e0e146103575780634fa650f1146103735780636352211e1461038f576101fb565b80630ebf1d3d116101ce5780630ebf1d3d1461029a5780631cee0700146102b857806323b872dd146102ef578063302438341461030b576101fb565b806301ffc9a71461020057806306fdde0314610230578063081812fc1461024e578063095ea7b31461027e575b600080fd5b61021a60048036038101906102159190612f2d565b6106d3565b6040516102279190612f75565b60405180910390f35b6102386107b5565b6040516102459190613020565b60405180910390f35b61026860048036038101906102639190613078565b610847565b60405161027591906130e6565b60405180910390f35b6102986004803603810190610293919061312d565b610863565b005b6102a2610879565b6040516102af919061317c565b60405180910390f35b6102d260048036038101906102cd9190613078565b610883565b6040516102e6989796959493929190613197565b60405180910390f35b6103096004803603810190610304919061321c565b610980565b005b6103256004803603810190610320919061326f565b610a82565b604051610332919061317c565b60405180910390f35b61035560048036038101906103509190613078565b610ab3565b005b610371600480360381019061036c919061321c565b610b66565b005b61038d600480360381019061038891906133e4565b610b86565b005b6103a960048036038101906103a49190613078565b61104d565b6040516103b691906130e6565b60405180910390f35b6103d960048036038101906103d4919061326f565b61105f565b005b6103f560048036038101906103f09190613440565b6112c0565b604051610402919061317c565b60405180910390f35b61041361137a565b005b61042f600480360381019061042a919061312d565b61138e565b60405161043c919061317c565b60405180910390f35b61045f600480360381019061045a9190613078565b6113bf565b005b610469611622565b60405161047691906130e6565b60405180910390f35b6104996004803603810190610494919061346d565b61164c565b6040516104a69190612f75565b60405180910390f35b6104c960048036038101906104c491906134ad565b61167b565b6040516104d6919061317c565b60405180910390f35b6104e761185d565b6040516104f49190613020565b60405180910390f35b610517600480360381019061051291906135a8565b6118ef565b005b610533600480360381019061052e919061346d565b611905565b6040516105409190612f75565b60405180910390f35b610563600480360381019061055e9190613689565b611934565b005b61057f600480360381019061057a9190613078565b611959565b60405161058c9190613020565b60405180910390f35b6105af60048036038101906105aa9190613078565b6119c2565b005b6105b9611b8c565b6040516105c6919061317c565b60405180910390f35b6105e960048036038101906105e49190613440565b611b96565b6040516105f691906137ca565b60405180910390f35b61061960048036038101906106149190613078565b611c2d565b60405161062691906137ca565b60405180910390f35b610649600480360381019061064491906137ec565b611c98565b6040516106569190612f75565b60405180910390f35b61067960048036038101906106749190613078565b611d2c565b6040516106909b9a9998979695949392919061382c565b60405180910390f35b6106b360048036038101906106ae9190613440565b611f4b565b005b6106bd611fd1565b6040516106ca919061394b565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061079e57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806107ae57506107ad82611ff7565b5b9050919050565b6060600080546107c490613995565b80601f01602080910402602001604051908101604052809291908181526020018280546107f090613995565b801561083d5780601f106108125761010080835404028352916020019161083d565b820191906000526020600020905b81548152906001019060200180831161082057829003601f168201915b5050505050905090565b600061085282612061565b5061085c826120e9565b9050919050565b6108758282610870612126565b61212e565b5050565b6000600854905090565b600b6020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030180546108d890613995565b80601f016020809104026020016040519081016040528092919081815260200182805461090490613995565b80156109515780601f1061092657610100808354040283529160200191610951565b820191906000526020600020905b81548152906001019060200180831161093457829003601f168201915b5050505050908060040154908060050154908060060154908060070160009054906101000a900460ff16905088565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109f25760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016109e991906130e6565b60405180910390fd5b6000610a068383610a01612126565b612140565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a7c578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610a73939291906139c6565b60405180910390fd5b50505050565b600c6020528160005260406000208181548110610a9e57600080fd5b90600052602060002001600091509150505481565b610abb61235a565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610b01611622565b836040518363ffffffff1660e01b8152600401610b1f9291906139fd565b6020604051808303816000875af1158015610b3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b629190613a3b565b5050565b610b8183838360405180602001604052806000815250611934565b505050565b600854821115610bcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc290613ab4565b60405180910390fd5b600a600083815260200190815260200160002060080160009054906101000a900460ff1615610c2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2690613b20565b60405180910390fd5b600e600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610ccd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc490613bb2565b60405180910390fd5b600a60008381526020019081526020016000206009015481511015610d27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1e90613c1e565b60405180910390fd5b600a6000838152602001908152602001600020600a0154600a60008481526020019081526020016000206006015410610d95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8c90613c8a565b60405180910390fd5b60096000815480929190610da890613cd9565b9190505550600060095490506040518061010001604052808281526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001428152602001600081526020016000815260200160001515815250600b6000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003019081610e8c9190613ec3565b506080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff021916908315150217905550905050600c6000848152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190915055600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150556001600e600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600a60008481526020019081526020016000206006016000815480929190610ffe90613cd9565b91905055503373ffffffffffffffffffffffffffffffffffffffff1683827f390f5f279da0ce4afc2046a3c1440c27a0637ea7261a5636e5518a2258bed26960405160405180910390a4505050565b600061105882612061565b9050919050565b61106761235a565b6009548211156110ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a390613fe1565b60405180910390fd5b600b600083815260200190815260200160002060070160009054906101000a900460ff1615611110576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111079061404d565b60405180910390fd5b6001600b600084815260200190815260200160002060070160006101000a81548160ff02191690831515021790555080600b6000848152602001908152602001600020600601819055506000600b600084815260200190815260200160002060010154905081600a6000838152602001908152602001600020600701600082825461119b919061406d565b92505081905550600082111561128357601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600b600086815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b815260040161123e9291906139fd565b6020604051808303816000875af115801561125d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112819190613a3b565b505b827fbfe577b36f6862b4729cc4b1ab7de20f7d8017e3b23552b685712e81741efe95836040516112b3919061317c565b60405180910390a2505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113335760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161132a91906130e6565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61138261235a565b61138c60006123e1565b565b600d60205281600052604060002081815481106113aa57600080fd5b90600052602060002001600091509150505481565b600954811115611404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113fb90613fe1565b60405180910390fd5b600f600082815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156114a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611499906140ed565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600b600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153d9061417f565b60405180910390fd5b600b6000828152602001908152602001600020600501600081548092919061156d90613cd9565b91905055506001600f600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16817f160fb30f1ee635c3caa0e5d3a7884222081dcafa69308e0d695e2332515aec2260405160405180910390a350565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600f6020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60006008600081548092919061169090613cd9565b9190505550600060085490506040518061016001604052808281526020018881526020018781526020018681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001600081526020016000815260200160001515815260200185815260200184815250600a60008381526020019081526020016000206000820151816000015560208201518160010190816117359190613ec3565b50604082015181600201908161174b9190613ec3565b5060608201518160030190816117619190613ec3565b5060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff021916908315150217905550610120820151816009015561014082015181600a01559050503373ffffffffffffffffffffffffffffffffffffffff16817fe539a333a3cfd582c41b5f4712067ec24868a7a493c0ab524d9fcfde5bb0d410896040516118489190613020565b60405180910390a38091505095945050505050565b60606001805461186c90613995565b80601f016020809104026020016040519081016040528092919081815260200182805461189890613995565b80156118e55780601f106118ba576101008083540402835291602001916118e5565b820191906000526020600020905b8154815290600101906020018083116118c857829003601f168201915b5050505050905090565b6119016118fa612126565b83836124a7565b5050565b600e6020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b61193f848484610980565b61195361194a612126565b85858585612616565b50505050565b606061196482612061565b50600061196f6127c7565b9050600081511161198f57604051806020016040528060008152506119ba565b80611999846127de565b6040516020016119aa9291906141db565b6040516020818303038152906040525b915050919050565b6119ca61235a565b600854811115611a0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0690613ab4565b60405180910390fd5b600a600082815260200190815260200160002060080160009054906101000a900460ff1615611a73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6a9061424b565b60405180910390fd5b6000600a60008381526020019081526020016000206006015411611acc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ac3906142b7565b60405180910390fd5b6001600a600083815260200190815260200160002060080160006101000a81548160ff021916908315150217905550611b3b600a600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826128ac565b807fcecd5d5df52f22750a7b838a07823685059f55f29d937091bb81ff96a6612d8d600a600084815260200190815260200160002060070154604051611b81919061317c565b60405180910390a250565b6000600954905090565b6060600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611c2157602002820191906000526020600020905b815481526020019060010190808311611c0d575b50505050509050919050565b6060600c6000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611c8c57602002820191906000526020600020905b815481526020019060010190808311611c78575b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600a602052806000526040600020600091509050806000015490806001018054611d5590613995565b80601f0160208091040260200160405190810160405280929190818152602001828054611d8190613995565b8015611dce5780601f10611da357610100808354040283529160200191611dce565b820191906000526020600020905b815481529060010190602001808311611db157829003601f168201915b505050505090806002018054611de390613995565b80601f0160208091040260200160405190810160405280929190818152602001828054611e0f90613995565b8015611e5c5780601f10611e3157610100808354040283529160200191611e5c565b820191906000526020600020905b815481529060010190602001808311611e3f57829003601f168201915b505050505090806003018054611e7190613995565b80601f0160208091040260200160405190810160405280929190818152602001828054611e9d90613995565b8015611eea5780601f10611ebf57610100808354040283529160200191611eea565b820191906000526020600020905b815481529060010190602001808311611ecd57829003601f168201915b5050505050908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154908060070154908060080160009054906101000a900460ff169080600901549080600a015490508b565b611f5361235a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611fc55760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611fbc91906130e6565b60405180910390fd5b611fce816123e1565b50565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008061206d836128ca565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036120e057826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016120d7919061317c565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b61213b8383836001612907565b505050565b60008061214c846128ca565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461218e5761218d818486612acc565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461221f576121d0600085600080612907565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146122a2576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b612362612126565b73ffffffffffffffffffffffffffffffffffffffff16612380611622565b73ffffffffffffffffffffffffffffffffffffffff16146123df576123a3612126565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016123d691906130e6565b60405180910390fd5b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361251857816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161250f91906130e6565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516126099190612f75565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156127c0578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401612675949392919061432c565b6020604051808303816000875af19250505080156126b157506040513d601f19601f820116820180604052508101906126ae919061438d565b60015b612735573d80600081146126e1576040519150601f19603f3d011682016040523d82523d6000602084013e6126e6565b606091505b50600081510361272d57836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161272491906130e6565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146127be57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016127b591906130e6565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b6060600060016127ed84612b90565b01905060008167ffffffffffffffff81111561280c5761280b6132b9565b5b6040519080825280601f01601f19166020018201604052801561283e5781602001600182028036833780820191505090505b509050600082602001820190505b6001156128a1578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581612895576128946143ba565b5b0494506000850361284c575b819350505050919050565b6128c6828260405180602001604052806000815250612ce3565b5050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806129405750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15612a7457600061295084612061565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156129bb57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156129ce57506129cc8184611c98565b155b15612a1057826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401612a0791906130e6565b60405180910390fd5b8115612a7257838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b612ad7838383612d07565b612b8b57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612b4c57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401612b43919061317c565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401612b829291906139fd565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612bee577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381612be457612be36143ba565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310612c2b576d04ee2d6d415b85acef81000000008381612c2157612c206143ba565b5b0492506020810190505b662386f26fc100008310612c5a57662386f26fc100008381612c5057612c4f6143ba565b5b0492506010810190505b6305f5e1008310612c83576305f5e1008381612c7957612c786143ba565b5b0492506008810190505b6127108310612ca8576127108381612c9e57612c9d6143ba565b5b0492506004810190505b60648310612ccb5760648381612cc157612cc06143ba565b5b0492506002810190505b600a8310612cda576001810190505b80915050919050565b612ced8383612dc8565b612d02612cf8612126565b6000858585612616565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015612dbf57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612d805750612d7f8484611c98565b5b80612dbe57508273ffffffffffffffffffffffffffffffffffffffff16612da6836120e9565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612e3a5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401612e3191906130e6565b60405180910390fd5b6000612e4883836000612140565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612ebc5760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401612eb391906130e6565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612f0a81612ed5565b8114612f1557600080fd5b50565b600081359050612f2781612f01565b92915050565b600060208284031215612f4357612f42612ecb565b5b6000612f5184828501612f18565b91505092915050565b60008115159050919050565b612f6f81612f5a565b82525050565b6000602082019050612f8a6000830184612f66565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612fca578082015181840152602081019050612faf565b60008484015250505050565b6000601f19601f8301169050919050565b6000612ff282612f90565b612ffc8185612f9b565b935061300c818560208601612fac565b61301581612fd6565b840191505092915050565b6000602082019050818103600083015261303a8184612fe7565b905092915050565b6000819050919050565b61305581613042565b811461306057600080fd5b50565b6000813590506130728161304c565b92915050565b60006020828403121561308e5761308d612ecb565b5b600061309c84828501613063565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006130d0826130a5565b9050919050565b6130e0816130c5565b82525050565b60006020820190506130fb60008301846130d7565b92915050565b61310a816130c5565b811461311557600080fd5b50565b60008135905061312781613101565b92915050565b6000806040838503121561314457613143612ecb565b5b600061315285828601613118565b925050602061316385828601613063565b9150509250929050565b61317681613042565b82525050565b6000602082019050613191600083018461316d565b92915050565b6000610100820190506131ad600083018b61316d565b6131ba602083018a61316d565b6131c760408301896130d7565b81810360608301526131d98188612fe7565b90506131e8608083018761316d565b6131f560a083018661316d565b61320260c083018561316d565b61320f60e0830184612f66565b9998505050505050505050565b60008060006060848603121561323557613234612ecb565b5b600061324386828701613118565b935050602061325486828701613118565b925050604061326586828701613063565b9150509250925092565b6000806040838503121561328657613285612ecb565b5b600061329485828601613063565b92505060206132a585828601613063565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6132f182612fd6565b810181811067ffffffffffffffff821117156133105761330f6132b9565b5b80604052505050565b6000613323612ec1565b905061332f82826132e8565b919050565b600067ffffffffffffffff82111561334f5761334e6132b9565b5b61335882612fd6565b9050602081019050919050565b82818337600083830152505050565b600061338761338284613334565b613319565b9050828152602081018484840111156133a3576133a26132b4565b5b6133ae848285613365565b509392505050565b600082601f8301126133cb576133ca6132af565b5b81356133db848260208601613374565b91505092915050565b600080604083850312156133fb576133fa612ecb565b5b600061340985828601613063565b925050602083013567ffffffffffffffff81111561342a57613429612ed0565b5b613436858286016133b6565b9150509250929050565b60006020828403121561345657613455612ecb565b5b600061346484828501613118565b91505092915050565b6000806040838503121561348457613483612ecb565b5b600061349285828601613063565b92505060206134a385828601613118565b9150509250929050565b600080600080600060a086880312156134c9576134c8612ecb565b5b600086013567ffffffffffffffff8111156134e7576134e6612ed0565b5b6134f3888289016133b6565b955050602086013567ffffffffffffffff81111561351457613513612ed0565b5b613520888289016133b6565b945050604086013567ffffffffffffffff81111561354157613540612ed0565b5b61354d888289016133b6565b935050606061355e88828901613063565b925050608061356f88828901613063565b9150509295509295909350565b61358581612f5a565b811461359057600080fd5b50565b6000813590506135a28161357c565b92915050565b600080604083850312156135bf576135be612ecb565b5b60006135cd85828601613118565b92505060206135de85828601613593565b9150509250929050565b600067ffffffffffffffff821115613603576136026132b9565b5b61360c82612fd6565b9050602081019050919050565b600061362c613627846135e8565b613319565b905082815260208101848484011115613648576136476132b4565b5b613653848285613365565b509392505050565b600082601f8301126136705761366f6132af565b5b8135613680848260208601613619565b91505092915050565b600080600080608085870312156136a3576136a2612ecb565b5b60006136b187828801613118565b94505060206136c287828801613118565b93505060406136d387828801613063565b925050606085013567ffffffffffffffff8111156136f4576136f3612ed0565b5b6137008782880161365b565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61374181613042565b82525050565b60006137538383613738565b60208301905092915050565b6000602082019050919050565b60006137778261370c565b6137818185613717565b935061378c83613728565b8060005b838110156137bd5781516137a48882613747565b97506137af8361375f565b925050600181019050613790565b5085935050505092915050565b600060208201905081810360008301526137e4818461376c565b905092915050565b6000806040838503121561380357613802612ecb565b5b600061381185828601613118565b925050602061382285828601613118565b9150509250929050565b600061016082019050613842600083018e61316d565b8181036020830152613854818d612fe7565b90508181036040830152613868818c612fe7565b9050818103606083015261387c818b612fe7565b905061388b608083018a6130d7565b61389860a083018961316d565b6138a560c083018861316d565b6138b260e083018761316d565b6138c0610100830186612f66565b6138ce61012083018561316d565b6138dc61014083018461316d565b9c9b505050505050505050505050565b6000819050919050565b600061391161390c613907846130a5565b6138ec565b6130a5565b9050919050565b6000613923826138f6565b9050919050565b600061393582613918565b9050919050565b6139458161392a565b82525050565b6000602082019050613960600083018461393c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806139ad57607f821691505b6020821081036139c0576139bf613966565b5b50919050565b60006060820190506139db60008301866130d7565b6139e8602083018561316d565b6139f560408301846130d7565b949350505050565b6000604082019050613a1260008301856130d7565b613a1f602083018461316d565b9392505050565b600081519050613a358161357c565b92915050565b600060208284031215613a5157613a50612ecb565b5b6000613a5f84828501613a26565b91505092915050565b7f41727469636c6520646f6573206e6f7420657869737400000000000000000000600082015250565b6000613a9e601683612f9b565b9150613aa982613a68565b602082019050919050565b60006020820190508181036000830152613acd81613a91565b9050919050565b7f41727469636c6520697320636f6d706c65746564000000000000000000000000600082015250565b6000613b0a601483612f9b565b9150613b1582613ad4565b602082019050919050565b60006020820190508181036000830152613b3981613afd565b9050919050565b7f596f75206861766520616c726561647920636f6e747269627574656420746f2060008201527f746869732061727469636c650000000000000000000000000000000000000000602082015250565b6000613b9c602c83612f9b565b9150613ba782613b40565b604082019050919050565b60006020820190508181036000830152613bcb81613b8f565b9050919050565b7f436f6e74656e7420746f6f2073686f7274000000000000000000000000000000600082015250565b6000613c08601183612f9b565b9150613c1382613bd2565b602082019050919050565b60006020820190508181036000830152613c3781613bfb565b9050919050565b7f4d617820636f6e7472696275746f727320726561636865640000000000000000600082015250565b6000613c74601883612f9b565b9150613c7f82613c3e565b602082019050919050565b60006020820190508181036000830152613ca381613c67565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613ce482613042565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613d1657613d15613caa565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613d837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613d46565b613d8d8683613d46565b95508019841693508086168417925050509392505050565b6000613dc0613dbb613db684613042565b6138ec565b613042565b9050919050565b6000819050919050565b613dda83613da5565b613dee613de682613dc7565b848454613d53565b825550505050565b600090565b613e03613df6565b613e0e818484613dd1565b505050565b5b81811015613e3257613e27600082613dfb565b600181019050613e14565b5050565b601f821115613e7757613e4881613d21565b613e5184613d36565b81016020851015613e60578190505b613e74613e6c85613d36565b830182613e13565b50505b505050565b600082821c905092915050565b6000613e9a60001984600802613e7c565b1980831691505092915050565b6000613eb38383613e89565b9150826002028217905092915050565b613ecc82612f90565b67ffffffffffffffff811115613ee557613ee46132b9565b5b613eef8254613995565b613efa828285613e36565b600060209050601f831160018114613f2d5760008415613f1b578287015190505b613f258582613ea7565b865550613f8d565b601f198416613f3b86613d21565b60005b82811015613f6357848901518255600182019150602085019450602081019050613f3e565b86831015613f805784890151613f7c601f891682613e89565b8355505b6001600288020188555050505b505050505050565b7f436f6e747269627574696f6e20646f6573206e6f742065786973740000000000600082015250565b6000613fcb601b83612f9b565b9150613fd682613f95565b602082019050919050565b60006020820190508181036000830152613ffa81613fbe565b9050919050565b7f436f6e747269627574696f6e20616c726561647920617070726f766564000000600082015250565b6000614037601d83612f9b565b915061404282614001565b602082019050919050565b600060208201905081810360008301526140668161402a565b9050919050565b600061407882613042565b915061408383613042565b925082820190508082111561409b5761409a613caa565b5b92915050565b7f596f75206861766520616c7265616479206c696b656420746869730000000000600082015250565b60006140d7601b83612f9b565b91506140e2826140a1565b602082019050919050565b60006020820190508181036000830152614106816140ca565b9050919050565b7f43616e6e6f74206c696b6520796f7572206f776e20636f6e747269627574696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000614169602183612f9b565b91506141748261410d565b604082019050919050565b600060208201905081810360008301526141988161415c565b9050919050565b600081905092915050565b60006141b582612f90565b6141bf818561419f565b93506141cf818560208601612fac565b80840191505092915050565b60006141e782856141aa565b91506141f382846141aa565b91508190509392505050565b7f41727469636c6520616c726561647920636f6d706c6574656400000000000000600082015250565b6000614235601983612f9b565b9150614240826141ff565b602082019050919050565b6000602082019050818103600083015261426481614228565b9050919050565b7f41727469636c6520686173206e6f20636f6e747269627574696f6e7300000000600082015250565b60006142a1601c83612f9b565b91506142ac8261426b565b602082019050919050565b600060208201905081810360008301526142d081614294565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006142fe826142d7565b61430881856142e2565b9350614318818560208601612fac565b61432181612fd6565b840191505092915050565b600060808201905061434160008301876130d7565b61434e60208301866130d7565b61435b604083018561316d565b818103606083015261436d81846142f3565b905095945050505050565b60008151905061438781612f01565b92915050565b6000602082840312156143a3576143a2612ecb565b5b60006143b184828501614378565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220309c484f94dbd360e285b604062771fb5f568b342a4e511362b83fe341c7e5b764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4AC1 CODESIZE SUB DUP1 PUSH3 0x4AC1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2D1 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D6F76696541727469636C654E46540000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D414E4654000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0xB5 SWAP2 SWAP1 PUSH3 0x57D JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC7 SWAP2 SWAP1 PUSH3 0x57D JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x136 SWAP2 SWAP1 PUSH3 0x675 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x150 DUP2 PUSH3 0x1A1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x10 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x692 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x299 DUP3 PUSH3 0x26C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2AB DUP2 PUSH3 0x28C JUMP JUMPDEST DUP2 EQ PUSH3 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2CB DUP2 PUSH3 0x2A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2EA JUMPI PUSH3 0x2E9 PUSH3 0x267 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2FA DUP5 DUP3 DUP6 ADD PUSH3 0x2BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x385 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x39B JUMPI PUSH3 0x39A PUSH3 0x33D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x405 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x3C6 JUMP JUMPDEST PUSH3 0x411 DUP7 DUP4 PUSH3 0x3C6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x45E PUSH3 0x458 PUSH3 0x452 DUP5 PUSH3 0x429 JUMP JUMPDEST PUSH3 0x433 JUMP JUMPDEST PUSH3 0x429 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x47A DUP4 PUSH3 0x43D JUMP JUMPDEST PUSH3 0x492 PUSH3 0x489 DUP3 PUSH3 0x465 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x3D3 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x4A9 PUSH3 0x49A JUMP JUMPDEST PUSH3 0x4B6 DUP2 DUP5 DUP5 PUSH3 0x46F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4DE JUMPI PUSH3 0x4D2 PUSH1 0x0 DUP3 PUSH3 0x49F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x4BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x52D JUMPI PUSH3 0x4F7 DUP2 PUSH3 0x3A1 JUMP JUMPDEST PUSH3 0x502 DUP5 PUSH3 0x3B6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x512 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x52A PUSH3 0x521 DUP6 PUSH3 0x3B6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x4BB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x552 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x532 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x56D DUP4 DUP4 PUSH3 0x53F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x588 DUP3 PUSH3 0x303 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5A4 JUMPI PUSH3 0x5A3 PUSH3 0x30E JUMP JUMPDEST JUMPDEST PUSH3 0x5B0 DUP3 SLOAD PUSH3 0x36C JUMP JUMPDEST PUSH3 0x5BD DUP3 DUP3 DUP6 PUSH3 0x4E2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5F5 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x5E0 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5EC DUP6 DUP3 PUSH3 0x55F JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x65C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x605 DUP7 PUSH3 0x3A1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x62F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x608 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x64F JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x64B PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x53F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x66F DUP2 PUSH3 0x28C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x68C PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x664 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x441F DUP1 PUSH3 0x6A2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A9A62A8 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE3E03DC0 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE3E03DC0 EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0xEDCFAFE6 EQ PUSH2 0x65F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x6B5 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0xD5DF1E1D EQ PUSH2 0x595 JUMPI DUP1 PUSH4 0xDDF556D0 EQ PUSH2 0x5B1 JUMPI DUP1 PUSH4 0xE36465A3 EQ PUSH2 0x5CF JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xB5B96AE0 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x549 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x8A9A62A8 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0x8FB7092C EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0x9178AF65 EQ PUSH2 0x4AF JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x315A095D GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x6FD91DA9 GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x6FD91DA9 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0x7331FA95 EQ PUSH2 0x415 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x315A095D EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x4FA650F1 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x38F JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0xEBF1D3D GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0xEBF1D3D EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x1CEE0700 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x30243834 EQ PUSH2 0x30B JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x27E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x2F2D JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x2F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x3020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x847 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x312D JUMP JUMPDEST PUSH2 0x863 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A2 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3197 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x321C JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x326F JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0xAB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x321C JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x104D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x326F JUMP JUMPDEST PUSH2 0x105F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x3440 JUMP JUMPDEST PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x413 PUSH2 0x137A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x312D JUMP JUMPDEST PUSH2 0x138E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45A SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x13BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x469 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x476 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x346D JUMP JUMPDEST PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x2F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x34AD JUMP JUMPDEST PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E7 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0x3020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x517 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x35A8 JUMP JUMPDEST PUSH2 0x18EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x533 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x346D JUMP JUMPDEST PUSH2 0x1905 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x2F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x563 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH2 0x1934 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x1959 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x3020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5AA SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x19C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B9 PUSH2 0x1B8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E4 SWAP2 SWAP1 PUSH2 0x3440 JUMP JUMPDEST PUSH2 0x1B96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x619 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x626 SWAP2 SWAP1 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x649 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x644 SWAP2 SWAP1 PUSH2 0x37EC JUMP JUMPDEST PUSH2 0x1C98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x656 SWAP2 SWAP1 PUSH2 0x2F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x679 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x690 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x382C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6AE SWAP2 SWAP1 PUSH2 0x3440 JUMP JUMPDEST PUSH2 0x1F4B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6BD PUSH2 0x1FD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CA SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x79E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x7AE JUMPI POP PUSH2 0x7AD DUP3 PUSH2 0x1FF7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x7C4 SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7F0 SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x83D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x812 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x83D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x820 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x852 DUP3 PUSH2 0x2061 JUMP JUMPDEST POP PUSH2 0x85C DUP3 PUSH2 0x20E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x875 DUP3 DUP3 PUSH2 0x870 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x212E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x8D8 SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x904 SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x951 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x926 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x951 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x934 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E9 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA06 DUP4 DUP4 PUSH2 0xA01 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x2140 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA7C JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA73 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xABB PUSH2 0x235A JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0xB01 PUSH2 0x1622 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP3 SWAP2 SWAP1 PUSH2 0x39FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB3E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB62 SWAP2 SWAP1 PUSH2 0x3A3B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB81 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1934 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP3 GT ISZERO PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC2 SWAP1 PUSH2 0x3AB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC26 SWAP1 PUSH2 0x3B20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC4 SWAP1 PUSH2 0x3BB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD SLOAD DUP2 MLOAD LT ISZERO PUSH2 0xD27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1E SWAP1 PUSH2 0x3C1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD LT PUSH2 0xD95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8C SWAP1 PUSH2 0x3C8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xDA8 SWAP1 PUSH2 0x3CD9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0xE8C SWAP2 SWAP1 PUSH2 0x3EC3 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFFE SWAP1 PUSH2 0x3CD9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 PUSH32 0x390F5F279DA0CE4AFC2046A3C1440C27A0637EA7261A5636E5518A2258BED269 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1058 DUP3 PUSH2 0x2061 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1067 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 GT ISZERO PUSH2 0x10AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A3 SWAP1 PUSH2 0x3FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1110 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1107 SWAP1 PUSH2 0x404D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP2 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x119B SWAP2 SWAP1 PUSH2 0x406D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x1283 JUMPI PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xB PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123E SWAP3 SWAP2 SWAP1 PUSH2 0x39FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x125D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1281 SWAP2 SWAP1 PUSH2 0x3A3B JUMP JUMPDEST POP JUMPDEST DUP3 PUSH32 0xBFE577B36F6862B4729CC4B1AB7DE20F7D8017E3B23552B685712E81741EFE95 DUP4 PUSH1 0x40 MLOAD PUSH2 0x12B3 SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1333 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132A SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1382 PUSH2 0x235A JUMP JUMPDEST PUSH2 0x138C PUSH1 0x0 PUSH2 0x23E1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 GT ISZERO PUSH2 0x1404 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FB SWAP1 PUSH2 0x3FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1499 SWAP1 PUSH2 0x40ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1546 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153D SWAP1 PUSH2 0x417F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x156D SWAP1 PUSH2 0x3CD9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x160FB30F1EE635C3CAA0E5D3A7884222081DCAFA69308E0D695E2332515AEC22 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1690 SWAP1 PUSH2 0x3CD9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1735 SWAP2 SWAP1 PUSH2 0x3EC3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x174B SWAP2 SWAP1 PUSH2 0x3EC3 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1761 SWAP2 SWAP1 PUSH2 0x3EC3 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0xE539A333A3CFD582C41B5F4712067EC24868A7A493C0AB524D9FCFDE5BB0D410 DUP10 PUSH1 0x40 MLOAD PUSH2 0x1848 SWAP2 SWAP1 PUSH2 0x3020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x186C SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1898 SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18E5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18BA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18E5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18C8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1901 PUSH2 0x18FA PUSH2 0x2126 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x24A7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x193F DUP5 DUP5 DUP5 PUSH2 0x980 JUMP JUMPDEST PUSH2 0x1953 PUSH2 0x194A PUSH2 0x2126 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x2616 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1964 DUP3 PUSH2 0x2061 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x196F PUSH2 0x27C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x198F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x19BA JUMP JUMPDEST DUP1 PUSH2 0x1999 DUP5 PUSH2 0x27DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19AA SWAP3 SWAP2 SWAP1 PUSH2 0x41DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CA PUSH2 0x235A JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 GT ISZERO PUSH2 0x1A0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A06 SWAP1 PUSH2 0x3AB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6A SWAP1 PUSH2 0x424B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD GT PUSH2 0x1ACC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AC3 SWAP1 PUSH2 0x42B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1B3B PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x28AC JUMP JUMPDEST DUP1 PUSH32 0xCECD5D5DF52F22750A7B838A07823685059F55F29D937091BB81FF96A6612D8D PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1B81 SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1C21 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1C0D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1C8C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1C78 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1D55 SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D81 SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DCE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DA3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DCE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1DB1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1DE3 SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E0F SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E5C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E31 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E5C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E3F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1E71 SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E9D SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1EEA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EBF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1EEA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1ECD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x9 ADD SLOAD SWAP1 DUP1 PUSH1 0xA ADD SLOAD SWAP1 POP DUP12 JUMP JUMPDEST PUSH2 0x1F53 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FC5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FBC SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FCE DUP2 PUSH2 0x23E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x206D DUP4 PUSH2 0x28CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20E0 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20D7 SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x213B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2907 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x214C DUP5 PUSH2 0x28CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x218E JUMPI PUSH2 0x218D DUP2 DUP5 DUP7 PUSH2 0x2ACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x221F JUMPI PUSH2 0x21D0 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x2907 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x22A2 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2362 PUSH2 0x2126 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2380 PUSH2 0x1622 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23DF JUMPI PUSH2 0x23A3 PUSH2 0x2126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23D6 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2518 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250F SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2609 SWAP2 SWAP1 PUSH2 0x2F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x27C0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2675 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x432C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x26B1 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26AE SWAP2 SWAP1 PUSH2 0x438D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2735 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x26E1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x26E6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x272D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2724 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x27BE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27B5 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x27ED DUP5 PUSH2 0x2B90 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x280C JUMPI PUSH2 0x280B PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x283E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x28A1 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2895 JUMPI PUSH2 0x2894 PUSH2 0x43BA JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x284C JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28C6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2CE3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2940 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2A74 JUMPI PUSH1 0x0 PUSH2 0x2950 DUP5 PUSH2 0x2061 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x29BB JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x29CE JUMPI POP PUSH2 0x29CC DUP2 DUP5 PUSH2 0x1C98 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2A10 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A07 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2A72 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2AD7 DUP4 DUP4 DUP4 PUSH2 0x2D07 JUMP JUMPDEST PUSH2 0x2B8B JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B4C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B43 SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B82 SWAP3 SWAP2 SWAP1 PUSH2 0x39FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x2BEE JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x2BE4 JUMPI PUSH2 0x2BE3 PUSH2 0x43BA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2C2B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x2C21 JUMPI PUSH2 0x2C20 PUSH2 0x43BA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x2C5A JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x2C50 JUMPI PUSH2 0x2C4F PUSH2 0x43BA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x2C83 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2C79 JUMPI PUSH2 0x2C78 PUSH2 0x43BA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x2CA8 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x2C9E JUMPI PUSH2 0x2C9D PUSH2 0x43BA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2CCB JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x2CC1 JUMPI PUSH2 0x2CC0 PUSH2 0x43BA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2CDA JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CED DUP4 DUP4 PUSH2 0x2DC8 JUMP JUMPDEST PUSH2 0x2D02 PUSH2 0x2CF8 PUSH2 0x2126 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x2616 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2DBF JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2D80 JUMPI POP PUSH2 0x2D7F DUP5 DUP5 PUSH2 0x1C98 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2DBE JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DA6 DUP4 PUSH2 0x20E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2E3A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E31 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E48 DUP4 DUP4 PUSH1 0x0 PUSH2 0x2140 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EBC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EB3 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F0A DUP2 PUSH2 0x2ED5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F27 DUP2 PUSH2 0x2F01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F43 JUMPI PUSH2 0x2F42 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F51 DUP5 DUP3 DUP6 ADD PUSH2 0x2F18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F6F DUP2 PUSH2 0x2F5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F8A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2FCA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FAF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FF2 DUP3 PUSH2 0x2F90 JUMP JUMPDEST PUSH2 0x2FFC DUP2 DUP6 PUSH2 0x2F9B JUMP JUMPDEST SWAP4 POP PUSH2 0x300C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FAC JUMP JUMPDEST PUSH2 0x3015 DUP2 PUSH2 0x2FD6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x303A DUP2 DUP5 PUSH2 0x2FE7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3055 DUP2 PUSH2 0x3042 JUMP JUMPDEST DUP2 EQ PUSH2 0x3060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3072 DUP2 PUSH2 0x304C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x308E JUMPI PUSH2 0x308D PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x309C DUP5 DUP3 DUP6 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30D0 DUP3 PUSH2 0x30A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30E0 DUP2 PUSH2 0x30C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x310A DUP2 PUSH2 0x30C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x3115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3127 DUP2 PUSH2 0x3101 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3144 JUMPI PUSH2 0x3143 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3152 DUP6 DUP3 DUP7 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3163 DUP6 DUP3 DUP7 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3176 DUP2 PUSH2 0x3042 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3191 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x316D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x31AD PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x31BA PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x31C7 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x30D7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x31D9 DUP2 DUP9 PUSH2 0x2FE7 JUMP JUMPDEST SWAP1 POP PUSH2 0x31E8 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x31F5 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x3202 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x320F PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x2F66 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3235 JUMPI PUSH2 0x3234 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3243 DUP7 DUP3 DUP8 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3254 DUP7 DUP3 DUP8 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3265 DUP7 DUP3 DUP8 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3286 JUMPI PUSH2 0x3285 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3294 DUP6 DUP3 DUP7 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x32A5 DUP6 DUP3 DUP7 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x32F1 DUP3 PUSH2 0x2FD6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3310 JUMPI PUSH2 0x330F PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3323 PUSH2 0x2EC1 JUMP JUMPDEST SWAP1 POP PUSH2 0x332F DUP3 DUP3 PUSH2 0x32E8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x334F JUMPI PUSH2 0x334E PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH2 0x3358 DUP3 PUSH2 0x2FD6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3387 PUSH2 0x3382 DUP5 PUSH2 0x3334 JUMP JUMPDEST PUSH2 0x3319 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x33A3 JUMPI PUSH2 0x33A2 PUSH2 0x32B4 JUMP JUMPDEST JUMPDEST PUSH2 0x33AE DUP5 DUP3 DUP6 PUSH2 0x3365 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x33CB JUMPI PUSH2 0x33CA PUSH2 0x32AF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x33DB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3374 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33FB JUMPI PUSH2 0x33FA PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3409 DUP6 DUP3 DUP7 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x342A JUMPI PUSH2 0x3429 PUSH2 0x2ED0 JUMP JUMPDEST JUMPDEST PUSH2 0x3436 DUP6 DUP3 DUP7 ADD PUSH2 0x33B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3456 JUMPI PUSH2 0x3455 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3464 DUP5 DUP3 DUP6 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3484 JUMPI PUSH2 0x3483 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3492 DUP6 DUP3 DUP7 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x34A3 DUP6 DUP3 DUP7 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x34C9 JUMPI PUSH2 0x34C8 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34E7 JUMPI PUSH2 0x34E6 PUSH2 0x2ED0 JUMP JUMPDEST JUMPDEST PUSH2 0x34F3 DUP9 DUP3 DUP10 ADD PUSH2 0x33B6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3514 JUMPI PUSH2 0x3513 PUSH2 0x2ED0 JUMP JUMPDEST JUMPDEST PUSH2 0x3520 DUP9 DUP3 DUP10 ADD PUSH2 0x33B6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3541 JUMPI PUSH2 0x3540 PUSH2 0x2ED0 JUMP JUMPDEST JUMPDEST PUSH2 0x354D DUP9 DUP3 DUP10 ADD PUSH2 0x33B6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x355E DUP9 DUP3 DUP10 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x356F DUP9 DUP3 DUP10 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x3585 DUP2 PUSH2 0x2F5A JUMP JUMPDEST DUP2 EQ PUSH2 0x3590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x35A2 DUP2 PUSH2 0x357C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x35BF JUMPI PUSH2 0x35BE PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35CD DUP6 DUP3 DUP7 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x35DE DUP6 DUP3 DUP7 ADD PUSH2 0x3593 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3603 JUMPI PUSH2 0x3602 PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH2 0x360C DUP3 PUSH2 0x2FD6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x362C PUSH2 0x3627 DUP5 PUSH2 0x35E8 JUMP JUMPDEST PUSH2 0x3319 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3648 JUMPI PUSH2 0x3647 PUSH2 0x32B4 JUMP JUMPDEST JUMPDEST PUSH2 0x3653 DUP5 DUP3 DUP6 PUSH2 0x3365 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3670 JUMPI PUSH2 0x366F PUSH2 0x32AF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3680 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3619 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x36A3 JUMPI PUSH2 0x36A2 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36B1 DUP8 DUP3 DUP9 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x36C2 DUP8 DUP3 DUP9 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x36D3 DUP8 DUP3 DUP9 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36F4 JUMPI PUSH2 0x36F3 PUSH2 0x2ED0 JUMP JUMPDEST JUMPDEST PUSH2 0x3700 DUP8 DUP3 DUP9 ADD PUSH2 0x365B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3741 DUP2 PUSH2 0x3042 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3753 DUP4 DUP4 PUSH2 0x3738 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3777 DUP3 PUSH2 0x370C JUMP JUMPDEST PUSH2 0x3781 DUP2 DUP6 PUSH2 0x3717 JUMP JUMPDEST SWAP4 POP PUSH2 0x378C DUP4 PUSH2 0x3728 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x37BD JUMPI DUP2 MLOAD PUSH2 0x37A4 DUP9 DUP3 PUSH2 0x3747 JUMP JUMPDEST SWAP8 POP PUSH2 0x37AF DUP4 PUSH2 0x375F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3790 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37E4 DUP2 DUP5 PUSH2 0x376C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3803 JUMPI PUSH2 0x3802 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3811 DUP6 DUP3 DUP7 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3822 DUP6 DUP3 DUP7 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x3842 PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x316D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3854 DUP2 DUP14 PUSH2 0x2FE7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3868 DUP2 DUP13 PUSH2 0x2FE7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x387C DUP2 DUP12 PUSH2 0x2FE7 JUMP JUMPDEST SWAP1 POP PUSH2 0x388B PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x30D7 JUMP JUMPDEST PUSH2 0x3898 PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x38A5 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x38B2 PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x38C0 PUSH2 0x100 DUP4 ADD DUP7 PUSH2 0x2F66 JUMP JUMPDEST PUSH2 0x38CE PUSH2 0x120 DUP4 ADD DUP6 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x38DC PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x316D JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3911 PUSH2 0x390C PUSH2 0x3907 DUP5 PUSH2 0x30A5 JUMP JUMPDEST PUSH2 0x38EC JUMP JUMPDEST PUSH2 0x30A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3923 DUP3 PUSH2 0x38F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3935 DUP3 PUSH2 0x3918 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3945 DUP2 PUSH2 0x392A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3960 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x393C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x39AD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x39C0 JUMPI PUSH2 0x39BF PUSH2 0x3966 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x39DB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x30D7 JUMP JUMPDEST PUSH2 0x39E8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x39F5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x30D7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A12 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x30D7 JUMP JUMPDEST PUSH2 0x3A1F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x316D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3A35 DUP2 PUSH2 0x357C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A51 JUMPI PUSH2 0x3A50 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A5F DUP5 DUP3 DUP6 ADD PUSH2 0x3A26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41727469636C6520646F6573206E6F7420657869737400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A9E PUSH1 0x16 DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x3AA9 DUP3 PUSH2 0x3A68 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ACD DUP2 PUSH2 0x3A91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41727469636C6520697320636F6D706C65746564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B0A PUSH1 0x14 DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x3B15 DUP3 PUSH2 0x3AD4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B39 DUP2 PUSH2 0x3AFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F75206861766520616C726561647920636F6E747269627574656420746F20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746869732061727469636C650000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B9C PUSH1 0x2C DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x3BA7 DUP3 PUSH2 0x3B40 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BCB DUP2 PUSH2 0x3B8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E74656E7420746F6F2073686F7274000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C08 PUSH1 0x11 DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x3C13 DUP3 PUSH2 0x3BD2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C37 DUP2 PUSH2 0x3BFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D617820636F6E7472696275746F727320726561636865640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C74 PUSH1 0x18 DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x3C7F DUP3 PUSH2 0x3C3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CA3 DUP2 PUSH2 0x3C67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3CE4 DUP3 PUSH2 0x3042 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3D16 JUMPI PUSH2 0x3D15 PUSH2 0x3CAA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3D83 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3D46 JUMP JUMPDEST PUSH2 0x3D8D DUP7 DUP4 PUSH2 0x3D46 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DC0 PUSH2 0x3DBB PUSH2 0x3DB6 DUP5 PUSH2 0x3042 JUMP JUMPDEST PUSH2 0x38EC JUMP JUMPDEST PUSH2 0x3042 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DDA DUP4 PUSH2 0x3DA5 JUMP JUMPDEST PUSH2 0x3DEE PUSH2 0x3DE6 DUP3 PUSH2 0x3DC7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3D53 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3E03 PUSH2 0x3DF6 JUMP JUMPDEST PUSH2 0x3E0E DUP2 DUP5 DUP5 PUSH2 0x3DD1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3E32 JUMPI PUSH2 0x3E27 PUSH1 0x0 DUP3 PUSH2 0x3DFB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3E14 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3E77 JUMPI PUSH2 0x3E48 DUP2 PUSH2 0x3D21 JUMP JUMPDEST PUSH2 0x3E51 DUP5 PUSH2 0x3D36 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3E60 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3E74 PUSH2 0x3E6C DUP6 PUSH2 0x3D36 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3E13 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E9A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3E7C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EB3 DUP4 DUP4 PUSH2 0x3E89 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3ECC DUP3 PUSH2 0x2F90 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EE5 JUMPI PUSH2 0x3EE4 PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH2 0x3EEF DUP3 SLOAD PUSH2 0x3995 JUMP JUMPDEST PUSH2 0x3EFA DUP3 DUP3 DUP6 PUSH2 0x3E36 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3F2D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3F1B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3F25 DUP6 DUP3 PUSH2 0x3EA7 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3F8D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3F3B DUP7 PUSH2 0x3D21 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3F63 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F3E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3F80 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3F7C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3E89 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x436F6E747269627574696F6E20646F6573206E6F742065786973740000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FCB PUSH1 0x1B DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x3FD6 DUP3 PUSH2 0x3F95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FFA DUP2 PUSH2 0x3FBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E747269627574696F6E20616C726561647920617070726F766564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4037 PUSH1 0x1D DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x4042 DUP3 PUSH2 0x4001 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4066 DUP2 PUSH2 0x402A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4078 DUP3 PUSH2 0x3042 JUMP JUMPDEST SWAP2 POP PUSH2 0x4083 DUP4 PUSH2 0x3042 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x409B JUMPI PUSH2 0x409A PUSH2 0x3CAA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206861766520616C7265616479206C696B656420746869730000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D7 PUSH1 0x1B DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x40E2 DUP3 PUSH2 0x40A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4106 DUP2 PUSH2 0x40CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206C696B6520796F7572206F776E20636F6E747269627574696F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4169 PUSH1 0x21 DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x4174 DUP3 PUSH2 0x410D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4198 DUP2 PUSH2 0x415C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41B5 DUP3 PUSH2 0x2F90 JUMP JUMPDEST PUSH2 0x41BF DUP2 DUP6 PUSH2 0x419F JUMP JUMPDEST SWAP4 POP PUSH2 0x41CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FAC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E7 DUP3 DUP6 PUSH2 0x41AA JUMP JUMPDEST SWAP2 POP PUSH2 0x41F3 DUP3 DUP5 PUSH2 0x41AA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x41727469636C6520616C726561647920636F6D706C6574656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4235 PUSH1 0x19 DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x4240 DUP3 PUSH2 0x41FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4264 DUP2 PUSH2 0x4228 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41727469636C6520686173206E6F20636F6E747269627574696F6E7300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42A1 PUSH1 0x1C DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x42AC DUP3 PUSH2 0x426B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42D0 DUP2 PUSH2 0x4294 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42FE DUP3 PUSH2 0x42D7 JUMP JUMPDEST PUSH2 0x4308 DUP2 DUP6 PUSH2 0x42E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x4318 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FAC JUMP JUMPDEST PUSH2 0x4321 DUP2 PUSH2 0x2FD6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4341 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x30D7 JUMP JUMPDEST PUSH2 0x434E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x30D7 JUMP JUMPDEST PUSH2 0x435B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x316D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x436D DUP2 DUP5 PUSH2 0x42F3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4387 DUP2 PUSH2 0x2F01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43A3 JUMPI PUSH2 0x43A2 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43B1 DUP5 DUP3 DUP6 ADD PUSH2 0x4378 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS SWAP13 BASEFEE 0x4F SWAP5 0xDB 0xD3 PUSH1 0xE2 DUP6 0xB6 DIV MOD 0x27 PUSH18 0xFB5F568B342A4E511362B83FE341C7E5B764 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"295:7345:19:-:0;;;2252:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2329:10;1380:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:5;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1857:1:12;2061:7;:21;;;;2373:12:19::2;2352:11;;:34;;;;;;;;;;;;;;;;;;2252:142:::0;295:7345;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:21:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;295:7345:19:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1727":{"entryPoint":8494,"id":1727,"parameterSlots":3,"returnSlots":0},"@_approve_1793":{"entryPoint":10503,"id":1793,"parameterSlots":4,"returnSlots":0},"@_baseURI_1108":{"entryPoint":10183,"id":1108,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_1367":{"entryPoint":10956,"id":1367,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":9050,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_1294":{"entryPoint":8425,"id":1294,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_1330":{"entryPoint":11527,"id":1330,"parameterSlots":3,"returnSlots":1},"@_mint_1523":{"entryPoint":11720,"id":1523,"parameterSlots":2,"returnSlots":0},"@_msgSender_2112":{"entryPoint":8486,"id":2112,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1281":{"entryPoint":10442,"id":1281,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1859":{"entryPoint":8289,"id":1859,"parameterSlots":1,"returnSlots":1},"@_safeMint_1538":{"entryPoint":10412,"id":1538,"parameterSlots":2,"returnSlots":0},"@_safeMint_1568":{"entryPoint":11491,"id":1568,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_1830":{"entryPoint":9383,"id":1830,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":9185,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_1473":{"entryPoint":8512,"id":1473,"parameterSlots":3,"returnSlots":1},"@addContribution_7545":{"entryPoint":2950,"id":7545,"parameterSlots":2,"returnSlots":0},"@approveContribution_7675":{"entryPoint":4191,"id":7675,"parameterSlots":2,"returnSlots":0},"@approve_1124":{"entryPoint":2147,"id":1124,"parameterSlots":2,"returnSlots":0},"@articleContributions_7290":{"entryPoint":2690,"id":7290,"parameterSlots":0,"returnSlots":0},"@articles_7280":{"entryPoint":7468,"id":7280,"parameterSlots":0,"returnSlots":0},"@balanceOf_1032":{"entryPoint":4800,"id":1032,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_2099":{"entryPoint":9750,"id":2099,"parameterSlots":5,"returnSlots":0},"@completeArticle_7732":{"entryPoint":6594,"id":7732,"parameterSlots":1,"returnSlots":0},"@contributions_7285":{"entryPoint":2179,"id":7285,"parameterSlots":0,"returnSlots":0},"@createArticle_7422":{"entryPoint":5755,"id":7422,"parameterSlots":5,"returnSlots":1},"@getApproved_1141":{"entryPoint":2119,"id":1141,"parameterSlots":1,"returnSlots":1},"@getArticleContributions_7745":{"entryPoint":7213,"id":7745,"parameterSlots":1,"returnSlots":1},"@getTotalArticles_7766":{"entryPoint":2169,"id":7766,"parameterSlots":0,"returnSlots":1},"@getTotalContributions_7774":{"entryPoint":7052,"id":7774,"parameterSlots":0,"returnSlots":1},"@getUserContributions_7758":{"entryPoint":7062,"id":7758,"parameterSlots":1,"returnSlots":1},"@hasContributed_7301":{"entryPoint":6405,"id":7301,"parameterSlots":0,"returnSlots":0},"@hasLiked_7307":{"entryPoint":5708,"id":7307,"parameterSlots":0,"returnSlots":0},"@isApprovedForAll_1174":{"entryPoint":7320,"id":1174,"parameterSlots":2,"returnSlots":1},"@likeContribution_7601":{"entryPoint":5055,"id":7601,"parameterSlots":1,"returnSlots":0},"@log10_5142":{"entryPoint":11152,"id":5142,"parameterSlots":1,"returnSlots":1},"@name_1054":{"entryPoint":1973,"id":1054,"parameterSlots":0,"returnSlots":1},"@ownerOf_1045":{"entryPoint":4173,"id":1045,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":5666,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":4986,"id":98,"parameterSlots":0,"returnSlots":0},"@rewardToken_7310":{"entryPoint":8145,"id":7310,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1238":{"entryPoint":2918,"id":1238,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1268":{"entryPoint":6452,"id":1268,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1157":{"entryPoint":6383,"id":1157,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1004":{"entryPoint":1747,"id":1004,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3676":{"entryPoint":8183,"id":3676,"parameterSlots":1,"returnSlots":1},"@symbol_1063":{"entryPoint":6237,"id":1063,"parameterSlots":0,"returnSlots":1},"@toString_2365":{"entryPoint":10206,"id":2365,"parameterSlots":1,"returnSlots":1},"@tokenURI_1099":{"entryPoint":6489,"id":1099,"parameterSlots":1,"returnSlots":1},"@transferFrom_1220":{"entryPoint":2432,"id":1220,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":8011,"id":126,"parameterSlots":1,"returnSlots":0},"@userContributions_7295":{"entryPoint":5006,"id":7295,"parameterSlots":0,"returnSlots":0},"@withdrawTokens_7790":{"entryPoint":2739,"id":7790,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":13849,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":13172,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":12568,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":13715,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":14886,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":12056,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":17272,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":13915,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":13238,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":12387,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":13376,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":14316,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":12828,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":13961,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":13736,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":12589,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":14907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":12077,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":17293,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256t_uint256":{"entryPoint":13485,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":12408,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":13421,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":13284,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":12911,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":14151,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":12503,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":14188,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":12134,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":17139,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack":{"entryPoint":14652,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":12263,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16810,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_1394d4b534d0dc7bf0a3afc76d97dbbcad41ddbfb1be0e236a6002070f3821d0_to_t_string_memory_ptr_fromStack":{"entryPoint":16936,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_23e270ac03cbb43a13b96ad46240f8c443bd3c1a0a4a872ab6e9183bce8a845a_to_t_string_memory_ptr_fromStack":{"entryPoint":15463,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_318f2476c7a187ea609a6f60b5fe8031470a5935a58fd7a84564aa0d3e925432_to_t_string_memory_ptr_fromStack":{"entryPoint":14993,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_549cb4a8c3e774ad0b20f76b2942a5cbca162f76ac34664dbd7b963e12b9d3c3_to_t_string_memory_ptr_fromStack":{"entryPoint":15101,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_64070001cd7be5174bf6cb1186885b53bfefdb2599edd30ca264edcf6e59b5c6_to_t_string_memory_ptr_fromStack":{"entryPoint":16586,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6b2a98265ef84b474bc9646c3d278cc98711afd3001de274b5b5af4a75c1f1fa_to_t_string_memory_ptr_fromStack":{"entryPoint":17044,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8bc5c6f6c5528dc5ae3ac1cf9bf495637b9493da913183d40f293b3288430e6f_to_t_string_memory_ptr_fromStack":{"entryPoint":16318,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9f9fb7b7e7c190c50712b6e3ca34698c7d207b60087eb7739ddab517eac2a1cc_to_t_string_memory_ptr_fromStack":{"entryPoint":16732,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c871f1b7893184c0a61eff62af505af653a7d64957316c5dd8e38e77764f2392_to_t_string_memory_ptr_fromStack":{"entryPoint":15247,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d8b9ca560d0edd639e2bd9185ac1236c99f01b71294011330912cf50a5bfbee4_to_t_string_memory_ptr_fromStack":{"entryPoint":15355,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20_to_t_string_memory_ptr_fromStack":{"entryPoint":16426,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":14136,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":12653,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":16859,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":12518,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":17196,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":14845,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":14790,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14282,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":12149,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed":{"entryPoint":14667,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12320,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1394d4b534d0dc7bf0a3afc76d97dbbcad41ddbfb1be0e236a6002070f3821d0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16971,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_23e270ac03cbb43a13b96ad46240f8c443bd3c1a0a4a872ab6e9183bce8a845a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15498,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_318f2476c7a187ea609a6f60b5fe8031470a5935a58fd7a84564aa0d3e925432__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15028,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_549cb4a8c3e774ad0b20f76b2942a5cbca162f76ac34664dbd7b963e12b9d3c3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15136,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_64070001cd7be5174bf6cb1186885b53bfefdb2599edd30ca264edcf6e59b5c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16621,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6b2a98265ef84b474bc9646c3d278cc98711afd3001de274b5b5af4a75c1f1fa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17079,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8bc5c6f6c5528dc5ae3ac1cf9bf495637b9493da913183d40f293b3288430e6f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16353,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9f9fb7b7e7c190c50712b6e3ca34698c7d207b60087eb7739ddab517eac2a1cc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16767,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c871f1b7893184c0a61eff62af505af653a7d64957316c5dd8e38e77764f2392__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15282,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d8b9ca560d0edd639e2bd9185ac1236c99f01b71294011330912cf50a5bfbee4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15390,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16461,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":12668,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_uint256__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":14380,"id":null,"parameterSlots":12,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":12695,"id":null,"parameterSlots":9,"returnSlots":1},"allocate_memory":{"entryPoint":13081,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":11969,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":13800,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":13108,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":14120,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":15649,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":14092,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":17111,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":12176,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":14175,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":14103,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":17122,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":12187,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16799,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":16493,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":15926,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":12485,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":12122,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":11989,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":12453,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":12354,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":15891,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_contract$_IERC20_$877_to_t_address":{"entryPoint":14634,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":14616,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":14582,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":15781,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":16067,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":13157,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":12204,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":15670,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":14741,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":16039,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":13032,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":14572,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":15577,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":16009,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":15530,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":17338,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":14694,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":12985,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":15815,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":12975,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":12980,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":11984,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":11979,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":12246,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":15686,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":15996,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":15867,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_1394d4b534d0dc7bf0a3afc76d97dbbcad41ddbfb1be0e236a6002070f3821d0":{"entryPoint":16895,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_23e270ac03cbb43a13b96ad46240f8c443bd3c1a0a4a872ab6e9183bce8a845a":{"entryPoint":15422,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_318f2476c7a187ea609a6f60b5fe8031470a5935a58fd7a84564aa0d3e925432":{"entryPoint":14952,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_549cb4a8c3e774ad0b20f76b2942a5cbca162f76ac34664dbd7b963e12b9d3c3":{"entryPoint":15060,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_64070001cd7be5174bf6cb1186885b53bfefdb2599edd30ca264edcf6e59b5c6":{"entryPoint":16545,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6b2a98265ef84b474bc9646c3d278cc98711afd3001de274b5b5af4a75c1f1fa":{"entryPoint":17003,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8bc5c6f6c5528dc5ae3ac1cf9bf495637b9493da913183d40f293b3288430e6f":{"entryPoint":16277,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9f9fb7b7e7c190c50712b6e3ca34698c7d207b60087eb7739ddab517eac2a1cc":{"entryPoint":16653,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c871f1b7893184c0a61eff62af505af653a7d64957316c5dd8e38e77764f2392":{"entryPoint":15168,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d8b9ca560d0edd639e2bd9185ac1236c99f01b71294011330912cf50a5bfbee4":{"entryPoint":15314,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20":{"entryPoint":16385,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":15699,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":15825,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":12545,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":13692,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":12033,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":12364,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":15862,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:40781:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"378:105:21","statements":[{"nodeType":"YulAssignment","src":"388:89:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:21","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:21"},"nodeType":"YulFunctionCall","src":"399:78:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:21"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:21","type":""}],"src":"334:149:21"},{"body":{"nodeType":"YulBlock","src":"531:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:21"},"nodeType":"YulFunctionCall","src":"589:12:21"},"nodeType":"YulExpressionStatement","src":"589:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:21"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:21"},"nodeType":"YulFunctionCall","src":"561:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:21"},"nodeType":"YulFunctionCall","src":"551:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:21"},"nodeType":"YulFunctionCall","src":"544:42:21"},"nodeType":"YulIf","src":"541:62:21"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:21","type":""}],"src":"489:120:21"},{"body":{"nodeType":"YulBlock","src":"666:86:21","statements":[{"nodeType":"YulAssignment","src":"676:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:21"},"nodeType":"YulFunctionCall","src":"685:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:21"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:21"},"nodeType":"YulFunctionCall","src":"714:32:21"},"nodeType":"YulExpressionStatement","src":"714:32:21"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:21","type":""}],"src":"615:137:21"},{"body":{"nodeType":"YulBlock","src":"823:262:21","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:21"},"nodeType":"YulFunctionCall","src":"871:79:21"},"nodeType":"YulExpressionStatement","src":"871:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:21"},"nodeType":"YulFunctionCall","src":"840:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:21"},"nodeType":"YulFunctionCall","src":"836:32:21"},"nodeType":"YulIf","src":"833:119:21"},{"nodeType":"YulBlock","src":"962:116:21","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:21"},"nodeType":"YulFunctionCall","src":"1036:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:21"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:21"},"nodeType":"YulFunctionCall","src":"1016:52:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:21","type":""}],"src":"758:327:21"},{"body":{"nodeType":"YulBlock","src":"1133:48:21","statements":[{"nodeType":"YulAssignment","src":"1143:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:21"},"nodeType":"YulFunctionCall","src":"1161:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:21"},"nodeType":"YulFunctionCall","src":"1154:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:21","type":""}],"src":"1091:90:21"},{"body":{"nodeType":"YulBlock","src":"1246:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:21"},"nodeType":"YulFunctionCall","src":"1268:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:21"},"nodeType":"YulFunctionCall","src":"1256:34:21"},"nodeType":"YulExpressionStatement","src":"1256:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:21","type":""}],"src":"1187:109:21"},{"body":{"nodeType":"YulBlock","src":"1394:118:21","statements":[{"nodeType":"YulAssignment","src":"1404:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:21"},"nodeType":"YulFunctionCall","src":"1412:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:21"},"nodeType":"YulFunctionCall","src":"1487:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:21"},"nodeType":"YulFunctionCall","src":"1440:65:21"},"nodeType":"YulExpressionStatement","src":"1440:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:21","type":""}],"src":"1302:210:21"},{"body":{"nodeType":"YulBlock","src":"1577:40:21","statements":[{"nodeType":"YulAssignment","src":"1588:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:21"},"nodeType":"YulFunctionCall","src":"1598:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:21","type":""}],"src":"1518:99:21"},{"body":{"nodeType":"YulBlock","src":"1719:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:21"},"nodeType":"YulFunctionCall","src":"1729:19:21"},"nodeType":"YulExpressionStatement","src":"1729:19:21"},{"nodeType":"YulAssignment","src":"1757:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:21"},"nodeType":"YulFunctionCall","src":"1772:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:21","type":""}],"src":"1623:169:21"},{"body":{"nodeType":"YulBlock","src":"1860:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:21"},"nodeType":"YulFunctionCall","src":"1960:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:21"},"nodeType":"YulFunctionCall","src":"1979:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:21"},"nodeType":"YulFunctionCall","src":"1973:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:21"},"nodeType":"YulFunctionCall","src":"1953:39:21"},"nodeType":"YulExpressionStatement","src":"1953:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:21"},"nodeType":"YulFunctionCall","src":"1897:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:21","statements":[{"nodeType":"YulAssignment","src":"1913:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:21"},"nodeType":"YulFunctionCall","src":"1918:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:21","statements":[]},"src":"1889:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:21"},"nodeType":"YulFunctionCall","src":"2018:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:21"},"nodeType":"YulFunctionCall","src":"2011:27:21"},"nodeType":"YulExpressionStatement","src":"2011:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:21","type":""}],"src":"1798:246:21"},{"body":{"nodeType":"YulBlock","src":"2098:54:21","statements":[{"nodeType":"YulAssignment","src":"2108:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:21"},"nodeType":"YulFunctionCall","src":"2122:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:21"},"nodeType":"YulFunctionCall","src":"2138:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:21"},"nodeType":"YulFunctionCall","src":"2118:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:21","type":""}],"src":"2050:102:21"},{"body":{"nodeType":"YulBlock","src":"2250:285:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:21"},"nodeType":"YulFunctionCall","src":"2274:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:21"},"nodeType":"YulFunctionCall","src":"2329:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:21"},"nodeType":"YulFunctionCall","src":"2444:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:21"},"nodeType":"YulFunctionCall","src":"2409:65:21"},"nodeType":"YulExpressionStatement","src":"2409:65:21"},{"nodeType":"YulAssignment","src":"2483:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:21"},"nodeType":"YulFunctionCall","src":"2499:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:21"},"nodeType":"YulFunctionCall","src":"2490:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:21","type":""}],"src":"2158:377:21"},{"body":{"nodeType":"YulBlock","src":"2659:195:21","statements":[{"nodeType":"YulAssignment","src":"2669:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:21"},"nodeType":"YulFunctionCall","src":"2677:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:21"},"nodeType":"YulFunctionCall","src":"2712:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:21"},"nodeType":"YulFunctionCall","src":"2731:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:21"},"nodeType":"YulFunctionCall","src":"2705:47:21"},"nodeType":"YulExpressionStatement","src":"2705:47:21"},{"nodeType":"YulAssignment","src":"2761:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:21"},"nodeType":"YulFunctionCall","src":"2769:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:21","type":""}],"src":"2541:313:21"},{"body":{"nodeType":"YulBlock","src":"2905:32:21","statements":[{"nodeType":"YulAssignment","src":"2915:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:21","type":""}],"src":"2860:77:21"},{"body":{"nodeType":"YulBlock","src":"2986:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:21"},"nodeType":"YulFunctionCall","src":"3045:12:21"},"nodeType":"YulExpressionStatement","src":"3045:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:21"},"nodeType":"YulFunctionCall","src":"3016:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:21"},"nodeType":"YulFunctionCall","src":"3006:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:21"},"nodeType":"YulFunctionCall","src":"2999:43:21"},"nodeType":"YulIf","src":"2996:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:21","type":""}],"src":"2943:122:21"},{"body":{"nodeType":"YulBlock","src":"3123:87:21","statements":[{"nodeType":"YulAssignment","src":"3133:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:21"},"nodeType":"YulFunctionCall","src":"3142:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:21"},"nodeType":"YulFunctionCall","src":"3171:33:21"},"nodeType":"YulExpressionStatement","src":"3171:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:21","type":""}],"src":"3071:139:21"},{"body":{"nodeType":"YulBlock","src":"3282:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:21"},"nodeType":"YulFunctionCall","src":"3330:79:21"},"nodeType":"YulExpressionStatement","src":"3330:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:21"},"nodeType":"YulFunctionCall","src":"3299:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:21"},"nodeType":"YulFunctionCall","src":"3295:32:21"},"nodeType":"YulIf","src":"3292:119:21"},{"nodeType":"YulBlock","src":"3421:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:21"},"nodeType":"YulFunctionCall","src":"3496:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:21"},"nodeType":"YulFunctionCall","src":"3475:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:21","type":""}],"src":"3216:329:21"},{"body":{"nodeType":"YulBlock","src":"3596:81:21","statements":[{"nodeType":"YulAssignment","src":"3606:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:21"},"nodeType":"YulFunctionCall","src":"3617:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:21","type":""}],"src":"3551:126:21"},{"body":{"nodeType":"YulBlock","src":"3728:51:21","statements":[{"nodeType":"YulAssignment","src":"3738:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:21"},"nodeType":"YulFunctionCall","src":"3749:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:21","type":""}],"src":"3683:96:21"},{"body":{"nodeType":"YulBlock","src":"3850:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:21"},"nodeType":"YulFunctionCall","src":"3872:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:21"},"nodeType":"YulFunctionCall","src":"3860:37:21"},"nodeType":"YulExpressionStatement","src":"3860:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:21","type":""}],"src":"3785:118:21"},{"body":{"nodeType":"YulBlock","src":"4007:124:21","statements":[{"nodeType":"YulAssignment","src":"4017:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:21"},"nodeType":"YulFunctionCall","src":"4025:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:21"},"nodeType":"YulFunctionCall","src":"4106:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:21"},"nodeType":"YulFunctionCall","src":"4053:71:21"},"nodeType":"YulExpressionStatement","src":"4053:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:21","type":""}],"src":"3909:222:21"},{"body":{"nodeType":"YulBlock","src":"4180:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:21"},"nodeType":"YulFunctionCall","src":"4239:12:21"},"nodeType":"YulExpressionStatement","src":"4239:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:21"},"nodeType":"YulFunctionCall","src":"4210:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:21"},"nodeType":"YulFunctionCall","src":"4200:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:21"},"nodeType":"YulFunctionCall","src":"4193:43:21"},"nodeType":"YulIf","src":"4190:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:21","type":""}],"src":"4137:122:21"},{"body":{"nodeType":"YulBlock","src":"4317:87:21","statements":[{"nodeType":"YulAssignment","src":"4327:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:21"},"nodeType":"YulFunctionCall","src":"4336:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:21"},"nodeType":"YulFunctionCall","src":"4365:33:21"},"nodeType":"YulExpressionStatement","src":"4365:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:21","type":""}],"src":"4265:139:21"},{"body":{"nodeType":"YulBlock","src":"4493:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:21"},"nodeType":"YulFunctionCall","src":"4541:79:21"},"nodeType":"YulExpressionStatement","src":"4541:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:21"},"nodeType":"YulFunctionCall","src":"4510:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:21"},"nodeType":"YulFunctionCall","src":"4506:32:21"},"nodeType":"YulIf","src":"4503:119:21"},{"nodeType":"YulBlock","src":"4632:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:21"},"nodeType":"YulFunctionCall","src":"4707:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:21"},"nodeType":"YulFunctionCall","src":"4686:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:21"}]}]},{"nodeType":"YulBlock","src":"4759:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:21"},"nodeType":"YulFunctionCall","src":"4835:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:21"},"nodeType":"YulFunctionCall","src":"4814:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:21","type":""}],"src":"4410:474:21"},{"body":{"nodeType":"YulBlock","src":"4955:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4972:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4995:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4977:17:21"},"nodeType":"YulFunctionCall","src":"4977:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4965:6:21"},"nodeType":"YulFunctionCall","src":"4965:37:21"},"nodeType":"YulExpressionStatement","src":"4965:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4943:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4950:3:21","type":""}],"src":"4890:118:21"},{"body":{"nodeType":"YulBlock","src":"5112:124:21","statements":[{"nodeType":"YulAssignment","src":"5122:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5134:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5145:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5130:3:21"},"nodeType":"YulFunctionCall","src":"5130:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5122:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5202:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5215:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5226:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5211:3:21"},"nodeType":"YulFunctionCall","src":"5211:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5158:43:21"},"nodeType":"YulFunctionCall","src":"5158:71:21"},"nodeType":"YulExpressionStatement","src":"5158:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5084:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5096:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5107:4:21","type":""}],"src":"5014:222:21"},{"body":{"nodeType":"YulBlock","src":"5550:768:21","statements":[{"nodeType":"YulAssignment","src":"5560:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5572:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5583:3:21","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5568:3:21"},"nodeType":"YulFunctionCall","src":"5568:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5560:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5641:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5654:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5665:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5650:3:21"},"nodeType":"YulFunctionCall","src":"5650:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5597:43:21"},"nodeType":"YulFunctionCall","src":"5597:71:21"},"nodeType":"YulExpressionStatement","src":"5597:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5722:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5735:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5746:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5731:3:21"},"nodeType":"YulFunctionCall","src":"5731:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5678:43:21"},"nodeType":"YulFunctionCall","src":"5678:72:21"},"nodeType":"YulExpressionStatement","src":"5678:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5804:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5817:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5828:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5813:3:21"},"nodeType":"YulFunctionCall","src":"5813:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5760:43:21"},"nodeType":"YulFunctionCall","src":"5760:72:21"},"nodeType":"YulExpressionStatement","src":"5760:72:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5853:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5864:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5849:3:21"},"nodeType":"YulFunctionCall","src":"5849:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5873:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5879:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5869:3:21"},"nodeType":"YulFunctionCall","src":"5869:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5842:6:21"},"nodeType":"YulFunctionCall","src":"5842:48:21"},"nodeType":"YulExpressionStatement","src":"5842:48:21"},{"nodeType":"YulAssignment","src":"5899:86:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"5971:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"5980:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5907:63:21"},"nodeType":"YulFunctionCall","src":"5907:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5899:4:21"}]},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"6039:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6052:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6063:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6048:3:21"},"nodeType":"YulFunctionCall","src":"6048:19:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5995:43:21"},"nodeType":"YulFunctionCall","src":"5995:73:21"},"nodeType":"YulExpressionStatement","src":"5995:73:21"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"6122:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6135:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6146:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6131:3:21"},"nodeType":"YulFunctionCall","src":"6131:19:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6078:43:21"},"nodeType":"YulFunctionCall","src":"6078:73:21"},"nodeType":"YulExpressionStatement","src":"6078:73:21"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"6205:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6218:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6229:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6214:3:21"},"nodeType":"YulFunctionCall","src":"6214:19:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6161:43:21"},"nodeType":"YulFunctionCall","src":"6161:73:21"},"nodeType":"YulExpressionStatement","src":"6161:73:21"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"6282:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6295:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6306:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6291:3:21"},"nodeType":"YulFunctionCall","src":"6291:19:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"6244:37:21"},"nodeType":"YulFunctionCall","src":"6244:67:21"},"nodeType":"YulExpressionStatement","src":"6244:67:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5466:9:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"5478:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"5486:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5494:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5502:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5510:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5518:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5526:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5534:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5545:4:21","type":""}],"src":"5242:1076:21"},{"body":{"nodeType":"YulBlock","src":"6424:519:21","statements":[{"body":{"nodeType":"YulBlock","src":"6470:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6472:77:21"},"nodeType":"YulFunctionCall","src":"6472:79:21"},"nodeType":"YulExpressionStatement","src":"6472:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6445:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"6454:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6441:3:21"},"nodeType":"YulFunctionCall","src":"6441:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"6466:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6437:3:21"},"nodeType":"YulFunctionCall","src":"6437:32:21"},"nodeType":"YulIf","src":"6434:119:21"},{"nodeType":"YulBlock","src":"6563:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6578:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6592:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6582:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6607:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6642:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6653:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6638:3:21"},"nodeType":"YulFunctionCall","src":"6638:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6662:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6617:20:21"},"nodeType":"YulFunctionCall","src":"6617:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6607:6:21"}]}]},{"nodeType":"YulBlock","src":"6690:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6705:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6719:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6709:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6735:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6770:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6781:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6766:3:21"},"nodeType":"YulFunctionCall","src":"6766:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6790:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6745:20:21"},"nodeType":"YulFunctionCall","src":"6745:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6735:6:21"}]}]},{"nodeType":"YulBlock","src":"6818:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6833:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6847:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6837:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6863:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6898:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6909:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6894:3:21"},"nodeType":"YulFunctionCall","src":"6894:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6918:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6873:20:21"},"nodeType":"YulFunctionCall","src":"6873:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6863:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6378:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6389:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6401:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6409:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6417:6:21","type":""}],"src":"6324:619:21"},{"body":{"nodeType":"YulBlock","src":"7032:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"7078:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7080:77:21"},"nodeType":"YulFunctionCall","src":"7080:79:21"},"nodeType":"YulExpressionStatement","src":"7080:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7053:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7062:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7049:3:21"},"nodeType":"YulFunctionCall","src":"7049:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"7074:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7045:3:21"},"nodeType":"YulFunctionCall","src":"7045:32:21"},"nodeType":"YulIf","src":"7042:119:21"},{"nodeType":"YulBlock","src":"7171:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7186:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7200:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7190:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7215:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7250:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7261:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7246:3:21"},"nodeType":"YulFunctionCall","src":"7246:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7270:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7225:20:21"},"nodeType":"YulFunctionCall","src":"7225:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7215:6:21"}]}]},{"nodeType":"YulBlock","src":"7298:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7313:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7327:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7317:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7343:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7378:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7389:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7374:3:21"},"nodeType":"YulFunctionCall","src":"7374:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7398:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7353:20:21"},"nodeType":"YulFunctionCall","src":"7353:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7343:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6994:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7005:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7017:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7025:6:21","type":""}],"src":"6949:474:21"},{"body":{"nodeType":"YulBlock","src":"7518:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7535:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7538:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7528:6:21"},"nodeType":"YulFunctionCall","src":"7528:12:21"},"nodeType":"YulExpressionStatement","src":"7528:12:21"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"7429:117:21"},{"body":{"nodeType":"YulBlock","src":"7641:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7658:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7661:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7651:6:21"},"nodeType":"YulFunctionCall","src":"7651:12:21"},"nodeType":"YulExpressionStatement","src":"7651:12:21"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7552:117:21"},{"body":{"nodeType":"YulBlock","src":"7703:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7720:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7723:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7713:6:21"},"nodeType":"YulFunctionCall","src":"7713:88:21"},"nodeType":"YulExpressionStatement","src":"7713:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7817:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7820:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7810:6:21"},"nodeType":"YulFunctionCall","src":"7810:15:21"},"nodeType":"YulExpressionStatement","src":"7810:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7841:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7844:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7834:6:21"},"nodeType":"YulFunctionCall","src":"7834:15:21"},"nodeType":"YulExpressionStatement","src":"7834:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7675:180:21"},{"body":{"nodeType":"YulBlock","src":"7904:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7914:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7936:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7966:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7944:21:21"},"nodeType":"YulFunctionCall","src":"7944:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7932:3:21"},"nodeType":"YulFunctionCall","src":"7932:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7918:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"8083:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8085:16:21"},"nodeType":"YulFunctionCall","src":"8085:18:21"},"nodeType":"YulExpressionStatement","src":"8085:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8026:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"8038:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8023:2:21"},"nodeType":"YulFunctionCall","src":"8023:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8062:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"8074:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8059:2:21"},"nodeType":"YulFunctionCall","src":"8059:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8020:2:21"},"nodeType":"YulFunctionCall","src":"8020:62:21"},"nodeType":"YulIf","src":"8017:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8121:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8125:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8114:6:21"},"nodeType":"YulFunctionCall","src":"8114:22:21"},"nodeType":"YulExpressionStatement","src":"8114:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7890:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"7898:4:21","type":""}],"src":"7861:281:21"},{"body":{"nodeType":"YulBlock","src":"8189:88:21","statements":[{"nodeType":"YulAssignment","src":"8199:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"8209:18:21"},"nodeType":"YulFunctionCall","src":"8209:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8199:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8258:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"8266:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"8238:19:21"},"nodeType":"YulFunctionCall","src":"8238:33:21"},"nodeType":"YulExpressionStatement","src":"8238:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"8173:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"8182:6:21","type":""}],"src":"8148:129:21"},{"body":{"nodeType":"YulBlock","src":"8350:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"8455:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8457:16:21"},"nodeType":"YulFunctionCall","src":"8457:18:21"},"nodeType":"YulExpressionStatement","src":"8457:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8427:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8435:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8424:2:21"},"nodeType":"YulFunctionCall","src":"8424:30:21"},"nodeType":"YulIf","src":"8421:56:21"},{"nodeType":"YulAssignment","src":"8487:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8517:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8495:21:21"},"nodeType":"YulFunctionCall","src":"8495:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8487:4:21"}]},{"nodeType":"YulAssignment","src":"8561:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8573:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"8579:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8569:3:21"},"nodeType":"YulFunctionCall","src":"8569:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8561:4:21"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8334:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8345:4:21","type":""}],"src":"8283:308:21"},{"body":{"nodeType":"YulBlock","src":"8661:82:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8684:3:21"},{"name":"src","nodeType":"YulIdentifier","src":"8689:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"8694:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8671:12:21"},"nodeType":"YulFunctionCall","src":"8671:30:21"},"nodeType":"YulExpressionStatement","src":"8671:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8721:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"8726:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8717:3:21"},"nodeType":"YulFunctionCall","src":"8717:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"8735:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8710:6:21"},"nodeType":"YulFunctionCall","src":"8710:27:21"},"nodeType":"YulExpressionStatement","src":"8710:27:21"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8643:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8648:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"8653:6:21","type":""}],"src":"8597:146:21"},{"body":{"nodeType":"YulBlock","src":"8833:341:21","statements":[{"nodeType":"YulAssignment","src":"8843:75:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8910:6:21"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8868:41:21"},"nodeType":"YulFunctionCall","src":"8868:49:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8852:15:21"},"nodeType":"YulFunctionCall","src":"8852:66:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8843:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8934:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"8941:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8927:6:21"},"nodeType":"YulFunctionCall","src":"8927:21:21"},"nodeType":"YulExpressionStatement","src":"8927:21:21"},{"nodeType":"YulVariableDeclaration","src":"8957:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8972:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"8979:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8968:3:21"},"nodeType":"YulFunctionCall","src":"8968:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8961:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"9022:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"9024:77:21"},"nodeType":"YulFunctionCall","src":"9024:79:21"},"nodeType":"YulExpressionStatement","src":"9024:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9003:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"9008:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8999:3:21"},"nodeType":"YulFunctionCall","src":"8999:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"9017:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8996:2:21"},"nodeType":"YulFunctionCall","src":"8996:25:21"},"nodeType":"YulIf","src":"8993:112:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9151:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"9156:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"9161:6:21"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9114:36:21"},"nodeType":"YulFunctionCall","src":"9114:54:21"},"nodeType":"YulExpressionStatement","src":"9114:54:21"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8806:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"8811:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"8819:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8827:5:21","type":""}],"src":"8749:425:21"},{"body":{"nodeType":"YulBlock","src":"9256:278:21","statements":[{"body":{"nodeType":"YulBlock","src":"9305:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9307:77:21"},"nodeType":"YulFunctionCall","src":"9307:79:21"},"nodeType":"YulExpressionStatement","src":"9307:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9284:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9292:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9280:3:21"},"nodeType":"YulFunctionCall","src":"9280:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"9299:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9276:3:21"},"nodeType":"YulFunctionCall","src":"9276:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9269:6:21"},"nodeType":"YulFunctionCall","src":"9269:35:21"},"nodeType":"YulIf","src":"9266:122:21"},{"nodeType":"YulVariableDeclaration","src":"9397:34:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9424:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9411:12:21"},"nodeType":"YulFunctionCall","src":"9411:20:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9401:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9440:88:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9501:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9509:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9497:3:21"},"nodeType":"YulFunctionCall","src":"9497:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"9516:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"9524:3:21"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9449:47:21"},"nodeType":"YulFunctionCall","src":"9449:79:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9440:5:21"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9234:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"9242:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9250:5:21","type":""}],"src":"9194:340:21"},{"body":{"nodeType":"YulBlock","src":"9633:561:21","statements":[{"body":{"nodeType":"YulBlock","src":"9679:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9681:77:21"},"nodeType":"YulFunctionCall","src":"9681:79:21"},"nodeType":"YulExpressionStatement","src":"9681:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9654:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9663:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9650:3:21"},"nodeType":"YulFunctionCall","src":"9650:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"9675:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9646:3:21"},"nodeType":"YulFunctionCall","src":"9646:32:21"},"nodeType":"YulIf","src":"9643:119:21"},{"nodeType":"YulBlock","src":"9772:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9787:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9801:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9791:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9816:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9851:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9862:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9847:3:21"},"nodeType":"YulFunctionCall","src":"9847:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9871:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9826:20:21"},"nodeType":"YulFunctionCall","src":"9826:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9816:6:21"}]}]},{"nodeType":"YulBlock","src":"9899:288:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9914:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9945:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9956:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9941:3:21"},"nodeType":"YulFunctionCall","src":"9941:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9928:12:21"},"nodeType":"YulFunctionCall","src":"9928:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9918:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"10007:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10009:77:21"},"nodeType":"YulFunctionCall","src":"10009:79:21"},"nodeType":"YulExpressionStatement","src":"10009:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9979:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9987:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9976:2:21"},"nodeType":"YulFunctionCall","src":"9976:30:21"},"nodeType":"YulIf","src":"9973:117:21"},{"nodeType":"YulAssignment","src":"10104:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10149:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10160:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10145:3:21"},"nodeType":"YulFunctionCall","src":"10145:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10169:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10114:30:21"},"nodeType":"YulFunctionCall","src":"10114:63:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10104:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9595:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9606:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9618:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9626:6:21","type":""}],"src":"9540:654:21"},{"body":{"nodeType":"YulBlock","src":"10266:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"10312:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10314:77:21"},"nodeType":"YulFunctionCall","src":"10314:79:21"},"nodeType":"YulExpressionStatement","src":"10314:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10287:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10296:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10283:3:21"},"nodeType":"YulFunctionCall","src":"10283:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"10308:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10279:3:21"},"nodeType":"YulFunctionCall","src":"10279:32:21"},"nodeType":"YulIf","src":"10276:119:21"},{"nodeType":"YulBlock","src":"10405:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10420:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10434:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10424:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10449:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10484:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10495:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10480:3:21"},"nodeType":"YulFunctionCall","src":"10480:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10504:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10459:20:21"},"nodeType":"YulFunctionCall","src":"10459:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10449:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10236:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10247:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10259:6:21","type":""}],"src":"10200:329:21"},{"body":{"nodeType":"YulBlock","src":"10618:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"10664:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10666:77:21"},"nodeType":"YulFunctionCall","src":"10666:79:21"},"nodeType":"YulExpressionStatement","src":"10666:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10639:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10648:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10635:3:21"},"nodeType":"YulFunctionCall","src":"10635:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"10660:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10631:3:21"},"nodeType":"YulFunctionCall","src":"10631:32:21"},"nodeType":"YulIf","src":"10628:119:21"},{"nodeType":"YulBlock","src":"10757:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10772:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10786:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10776:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10801:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10836:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10847:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10832:3:21"},"nodeType":"YulFunctionCall","src":"10832:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10856:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10811:20:21"},"nodeType":"YulFunctionCall","src":"10811:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10801:6:21"}]}]},{"nodeType":"YulBlock","src":"10884:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10899:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10913:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10903:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10929:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10964:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"10975:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10960:3:21"},"nodeType":"YulFunctionCall","src":"10960:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10984:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10939:20:21"},"nodeType":"YulFunctionCall","src":"10939:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10929:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10580:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10591:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10603:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10611:6:21","type":""}],"src":"10535:474:21"},{"body":{"nodeType":"YulBlock","src":"11179:1287:21","statements":[{"body":{"nodeType":"YulBlock","src":"11226:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11228:77:21"},"nodeType":"YulFunctionCall","src":"11228:79:21"},"nodeType":"YulExpressionStatement","src":"11228:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11200:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11209:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11196:3:21"},"nodeType":"YulFunctionCall","src":"11196:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"11221:3:21","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11192:3:21"},"nodeType":"YulFunctionCall","src":"11192:33:21"},"nodeType":"YulIf","src":"11189:120:21"},{"nodeType":"YulBlock","src":"11319:287:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11334:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11365:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11376:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11361:3:21"},"nodeType":"YulFunctionCall","src":"11361:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11348:12:21"},"nodeType":"YulFunctionCall","src":"11348:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11338:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"11426:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11428:77:21"},"nodeType":"YulFunctionCall","src":"11428:79:21"},"nodeType":"YulExpressionStatement","src":"11428:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11398:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11406:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11395:2:21"},"nodeType":"YulFunctionCall","src":"11395:30:21"},"nodeType":"YulIf","src":"11392:117:21"},{"nodeType":"YulAssignment","src":"11523:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11568:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11579:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11564:3:21"},"nodeType":"YulFunctionCall","src":"11564:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11588:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11533:30:21"},"nodeType":"YulFunctionCall","src":"11533:63:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11523:6:21"}]}]},{"nodeType":"YulBlock","src":"11616:288:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11631:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11662:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11673:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11658:3:21"},"nodeType":"YulFunctionCall","src":"11658:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11645:12:21"},"nodeType":"YulFunctionCall","src":"11645:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11635:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"11724:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11726:77:21"},"nodeType":"YulFunctionCall","src":"11726:79:21"},"nodeType":"YulExpressionStatement","src":"11726:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11696:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11704:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11693:2:21"},"nodeType":"YulFunctionCall","src":"11693:30:21"},"nodeType":"YulIf","src":"11690:117:21"},{"nodeType":"YulAssignment","src":"11821:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11866:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11877:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11862:3:21"},"nodeType":"YulFunctionCall","src":"11862:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11886:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11831:30:21"},"nodeType":"YulFunctionCall","src":"11831:63:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11821:6:21"}]}]},{"nodeType":"YulBlock","src":"11914:288:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11929:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11960:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11971:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11956:3:21"},"nodeType":"YulFunctionCall","src":"11956:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11943:12:21"},"nodeType":"YulFunctionCall","src":"11943:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11933:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"12022:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12024:77:21"},"nodeType":"YulFunctionCall","src":"12024:79:21"},"nodeType":"YulExpressionStatement","src":"12024:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11994:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12002:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11991:2:21"},"nodeType":"YulFunctionCall","src":"11991:30:21"},"nodeType":"YulIf","src":"11988:117:21"},{"nodeType":"YulAssignment","src":"12119:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12164:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12175:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12160:3:21"},"nodeType":"YulFunctionCall","src":"12160:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12184:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12129:30:21"},"nodeType":"YulFunctionCall","src":"12129:63:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12119:6:21"}]}]},{"nodeType":"YulBlock","src":"12212:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12227:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"12241:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12231:6:21","type":""}]},{"nodeType":"YulAssignment","src":"12257:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12292:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12303:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12288:3:21"},"nodeType":"YulFunctionCall","src":"12288:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12312:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12267:20:21"},"nodeType":"YulFunctionCall","src":"12267:53:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12257:6:21"}]}]},{"nodeType":"YulBlock","src":"12340:119:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12355:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"12369:3:21","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12359:6:21","type":""}]},{"nodeType":"YulAssignment","src":"12386:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12421:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12432:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12417:3:21"},"nodeType":"YulFunctionCall","src":"12417:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12441:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12396:20:21"},"nodeType":"YulFunctionCall","src":"12396:53:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12386:6:21"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11117:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11128:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11140:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11148:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11156:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11164:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11172:6:21","type":""}],"src":"11015:1451:21"},{"body":{"nodeType":"YulBlock","src":"12512:76:21","statements":[{"body":{"nodeType":"YulBlock","src":"12566:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12575:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12578:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12568:6:21"},"nodeType":"YulFunctionCall","src":"12568:12:21"},"nodeType":"YulExpressionStatement","src":"12568:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12535:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12557:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"12542:14:21"},"nodeType":"YulFunctionCall","src":"12542:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12532:2:21"},"nodeType":"YulFunctionCall","src":"12532:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12525:6:21"},"nodeType":"YulFunctionCall","src":"12525:40:21"},"nodeType":"YulIf","src":"12522:60:21"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12505:5:21","type":""}],"src":"12472:116:21"},{"body":{"nodeType":"YulBlock","src":"12643:84:21","statements":[{"nodeType":"YulAssignment","src":"12653:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12675:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12662:12:21"},"nodeType":"YulFunctionCall","src":"12662:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12653:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12715:5:21"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"12691:23:21"},"nodeType":"YulFunctionCall","src":"12691:30:21"},"nodeType":"YulExpressionStatement","src":"12691:30:21"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12621:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"12629:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12637:5:21","type":""}],"src":"12594:133:21"},{"body":{"nodeType":"YulBlock","src":"12813:388:21","statements":[{"body":{"nodeType":"YulBlock","src":"12859:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12861:77:21"},"nodeType":"YulFunctionCall","src":"12861:79:21"},"nodeType":"YulExpressionStatement","src":"12861:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12834:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"12843:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12830:3:21"},"nodeType":"YulFunctionCall","src":"12830:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"12855:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12826:3:21"},"nodeType":"YulFunctionCall","src":"12826:32:21"},"nodeType":"YulIf","src":"12823:119:21"},{"nodeType":"YulBlock","src":"12952:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12967:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"12981:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12971:6:21","type":""}]},{"nodeType":"YulAssignment","src":"12996:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13031:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"13042:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13027:3:21"},"nodeType":"YulFunctionCall","src":"13027:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13051:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13006:20:21"},"nodeType":"YulFunctionCall","src":"13006:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12996:6:21"}]}]},{"nodeType":"YulBlock","src":"13079:115:21","statements":[{"nodeType":"YulVariableDeclaration","src":"13094:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"13108:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13098:6:21","type":""}]},{"nodeType":"YulAssignment","src":"13124:60:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13156:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"13167:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13152:3:21"},"nodeType":"YulFunctionCall","src":"13152:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13176:7:21"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"13134:17:21"},"nodeType":"YulFunctionCall","src":"13134:50:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13124:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12775:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12786:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12798:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12806:6:21","type":""}],"src":"12733:468:21"},{"body":{"nodeType":"YulBlock","src":"13273:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"13378:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13380:16:21"},"nodeType":"YulFunctionCall","src":"13380:18:21"},"nodeType":"YulExpressionStatement","src":"13380:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13350:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13358:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13347:2:21"},"nodeType":"YulFunctionCall","src":"13347:30:21"},"nodeType":"YulIf","src":"13344:56:21"},{"nodeType":"YulAssignment","src":"13410:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13440:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13418:21:21"},"nodeType":"YulFunctionCall","src":"13418:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13410:4:21"}]},{"nodeType":"YulAssignment","src":"13484:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"13496:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"13502:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13492:3:21"},"nodeType":"YulFunctionCall","src":"13492:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13484:4:21"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"13257:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"13268:4:21","type":""}],"src":"13207:307:21"},{"body":{"nodeType":"YulBlock","src":"13603:340:21","statements":[{"nodeType":"YulAssignment","src":"13613:74:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13679:6:21"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13638:40:21"},"nodeType":"YulFunctionCall","src":"13638:48:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"13622:15:21"},"nodeType":"YulFunctionCall","src":"13622:65:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13613:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13703:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"13710:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13696:6:21"},"nodeType":"YulFunctionCall","src":"13696:21:21"},"nodeType":"YulExpressionStatement","src":"13696:21:21"},{"nodeType":"YulVariableDeclaration","src":"13726:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13741:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"13748:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13737:3:21"},"nodeType":"YulFunctionCall","src":"13737:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"13730:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"13791:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"13793:77:21"},"nodeType":"YulFunctionCall","src":"13793:79:21"},"nodeType":"YulExpressionStatement","src":"13793:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13772:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"13777:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13768:3:21"},"nodeType":"YulFunctionCall","src":"13768:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"13786:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13765:2:21"},"nodeType":"YulFunctionCall","src":"13765:25:21"},"nodeType":"YulIf","src":"13762:112:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13920:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"13925:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"13930:6:21"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13883:36:21"},"nodeType":"YulFunctionCall","src":"13883:54:21"},"nodeType":"YulExpressionStatement","src":"13883:54:21"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13576:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"13581:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"13589:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13597:5:21","type":""}],"src":"13520:423:21"},{"body":{"nodeType":"YulBlock","src":"14023:277:21","statements":[{"body":{"nodeType":"YulBlock","src":"14072:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"14074:77:21"},"nodeType":"YulFunctionCall","src":"14074:79:21"},"nodeType":"YulExpressionStatement","src":"14074:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14051:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14059:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14047:3:21"},"nodeType":"YulFunctionCall","src":"14047:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"14066:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14043:3:21"},"nodeType":"YulFunctionCall","src":"14043:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14036:6:21"},"nodeType":"YulFunctionCall","src":"14036:35:21"},"nodeType":"YulIf","src":"14033:122:21"},{"nodeType":"YulVariableDeclaration","src":"14164:34:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14191:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14178:12:21"},"nodeType":"YulFunctionCall","src":"14178:20:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14168:6:21","type":""}]},{"nodeType":"YulAssignment","src":"14207:87:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14267:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14275:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14263:3:21"},"nodeType":"YulFunctionCall","src":"14263:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"14282:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"14290:3:21"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14216:46:21"},"nodeType":"YulFunctionCall","src":"14216:78:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14207:5:21"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14001:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"14009:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"14017:5:21","type":""}],"src":"13962:338:21"},{"body":{"nodeType":"YulBlock","src":"14432:817:21","statements":[{"body":{"nodeType":"YulBlock","src":"14479:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14481:77:21"},"nodeType":"YulFunctionCall","src":"14481:79:21"},"nodeType":"YulExpressionStatement","src":"14481:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14453:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14462:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14449:3:21"},"nodeType":"YulFunctionCall","src":"14449:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"14474:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14445:3:21"},"nodeType":"YulFunctionCall","src":"14445:33:21"},"nodeType":"YulIf","src":"14442:120:21"},{"nodeType":"YulBlock","src":"14572:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14587:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"14601:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14591:6:21","type":""}]},{"nodeType":"YulAssignment","src":"14616:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14651:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"14662:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14647:3:21"},"nodeType":"YulFunctionCall","src":"14647:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14671:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14626:20:21"},"nodeType":"YulFunctionCall","src":"14626:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14616:6:21"}]}]},{"nodeType":"YulBlock","src":"14699:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14714:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"14728:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14718:6:21","type":""}]},{"nodeType":"YulAssignment","src":"14744:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14779:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"14790:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14775:3:21"},"nodeType":"YulFunctionCall","src":"14775:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14799:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14754:20:21"},"nodeType":"YulFunctionCall","src":"14754:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14744:6:21"}]}]},{"nodeType":"YulBlock","src":"14827:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14842:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"14856:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14846:6:21","type":""}]},{"nodeType":"YulAssignment","src":"14872:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14907:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"14918:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14903:3:21"},"nodeType":"YulFunctionCall","src":"14903:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14927:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14882:20:21"},"nodeType":"YulFunctionCall","src":"14882:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14872:6:21"}]}]},{"nodeType":"YulBlock","src":"14955:287:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14970:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15001:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15012:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14997:3:21"},"nodeType":"YulFunctionCall","src":"14997:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14984:12:21"},"nodeType":"YulFunctionCall","src":"14984:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14974:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"15063:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15065:77:21"},"nodeType":"YulFunctionCall","src":"15065:79:21"},"nodeType":"YulExpressionStatement","src":"15065:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15035:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15043:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15032:2:21"},"nodeType":"YulFunctionCall","src":"15032:30:21"},"nodeType":"YulIf","src":"15029:117:21"},{"nodeType":"YulAssignment","src":"15160:72:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15204:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"15215:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15200:3:21"},"nodeType":"YulFunctionCall","src":"15200:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15224:7:21"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"15170:29:21"},"nodeType":"YulFunctionCall","src":"15170:62:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"15160:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14378:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14389:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14401:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14409:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14417:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14425:6:21","type":""}],"src":"14306:943:21"},{"body":{"nodeType":"YulBlock","src":"15329:40:21","statements":[{"nodeType":"YulAssignment","src":"15340:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15356:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15350:5:21"},"nodeType":"YulFunctionCall","src":"15350:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15340:6:21"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15312:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15322:6:21","type":""}],"src":"15255:114:21"},{"body":{"nodeType":"YulBlock","src":"15486:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15503:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"15508:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15496:6:21"},"nodeType":"YulFunctionCall","src":"15496:19:21"},"nodeType":"YulExpressionStatement","src":"15496:19:21"},{"nodeType":"YulAssignment","src":"15524:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15543:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15548:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15539:3:21"},"nodeType":"YulFunctionCall","src":"15539:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15524:11:21"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15458:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"15463:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15474:11:21","type":""}],"src":"15375:184:21"},{"body":{"nodeType":"YulBlock","src":"15637:60:21","statements":[{"nodeType":"YulAssignment","src":"15647:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"15655:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15647:4:21"}]},{"nodeType":"YulAssignment","src":"15668:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15680:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15685:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15676:3:21"},"nodeType":"YulFunctionCall","src":"15676:14:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15668:4:21"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15624:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"15632:4:21","type":""}],"src":"15565:132:21"},{"body":{"nodeType":"YulBlock","src":"15758:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15775:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15798:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15780:17:21"},"nodeType":"YulFunctionCall","src":"15780:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15768:6:21"},"nodeType":"YulFunctionCall","src":"15768:37:21"},"nodeType":"YulExpressionStatement","src":"15768:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15746:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15753:3:21","type":""}],"src":"15703:108:21"},{"body":{"nodeType":"YulBlock","src":"15897:99:21","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15941:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"15949:3:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"15907:33:21"},"nodeType":"YulFunctionCall","src":"15907:46:21"},"nodeType":"YulExpressionStatement","src":"15907:46:21"},{"nodeType":"YulAssignment","src":"15962:28:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15980:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15985:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15976:3:21"},"nodeType":"YulFunctionCall","src":"15976:14:21"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"15962:10:21"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"15870:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15878:3:21","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"15886:10:21","type":""}],"src":"15817:179:21"},{"body":{"nodeType":"YulBlock","src":"16077:38:21","statements":[{"nodeType":"YulAssignment","src":"16087:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16099:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16104:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16095:3:21"},"nodeType":"YulFunctionCall","src":"16095:14:21"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"16087:4:21"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16064:3:21","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"16072:4:21","type":""}],"src":"16002:113:21"},{"body":{"nodeType":"YulBlock","src":"16275:608:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16285:68:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16347:5:21"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16299:47:21"},"nodeType":"YulFunctionCall","src":"16299:54:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16289:6:21","type":""}]},{"nodeType":"YulAssignment","src":"16362:93:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16443:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"16448:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16369:73:21"},"nodeType":"YulFunctionCall","src":"16369:86:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16362:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"16464:71:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16529:5:21"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16479:49:21"},"nodeType":"YulFunctionCall","src":"16479:56:21"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"16468:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16544:21:21","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"16558:7:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"16548:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"16634:224:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16648:34:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16675:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16669:5:21"},"nodeType":"YulFunctionCall","src":"16669:13:21"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"16652:13:21","type":""}]},{"nodeType":"YulAssignment","src":"16695:70:21","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"16746:13:21"},{"name":"pos","nodeType":"YulIdentifier","src":"16761:3:21"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16702:43:21"},"nodeType":"YulFunctionCall","src":"16702:63:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16695:3:21"}]},{"nodeType":"YulAssignment","src":"16778:70:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16841:6:21"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16788:52:21"},"nodeType":"YulFunctionCall","src":"16788:60:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16778:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16596:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"16599:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16593:2:21"},"nodeType":"YulFunctionCall","src":"16593:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16607:18:21","statements":[{"nodeType":"YulAssignment","src":"16609:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16618:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"16621:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16614:3:21"},"nodeType":"YulFunctionCall","src":"16614:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16609:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"16578:14:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16580:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"16589:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16584:1:21","type":""}]}]},"src":"16574:284:21"},{"nodeType":"YulAssignment","src":"16867:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"16874:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16867:3:21"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16254:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16261:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16270:3:21","type":""}],"src":"16151:732:21"},{"body":{"nodeType":"YulBlock","src":"17037:225:21","statements":[{"nodeType":"YulAssignment","src":"17047:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17059:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17070:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17055:3:21"},"nodeType":"YulFunctionCall","src":"17055:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17047:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17094:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17105:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17090:3:21"},"nodeType":"YulFunctionCall","src":"17090:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17113:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"17119:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17109:3:21"},"nodeType":"YulFunctionCall","src":"17109:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17083:6:21"},"nodeType":"YulFunctionCall","src":"17083:47:21"},"nodeType":"YulExpressionStatement","src":"17083:47:21"},{"nodeType":"YulAssignment","src":"17139:116:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17241:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"17250:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17147:93:21"},"nodeType":"YulFunctionCall","src":"17147:108:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17139:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17009:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17021:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17032:4:21","type":""}],"src":"16889:373:21"},{"body":{"nodeType":"YulBlock","src":"17351:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"17397:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17399:77:21"},"nodeType":"YulFunctionCall","src":"17399:79:21"},"nodeType":"YulExpressionStatement","src":"17399:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17372:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"17381:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17368:3:21"},"nodeType":"YulFunctionCall","src":"17368:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"17393:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17364:3:21"},"nodeType":"YulFunctionCall","src":"17364:32:21"},"nodeType":"YulIf","src":"17361:119:21"},{"nodeType":"YulBlock","src":"17490:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17505:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17519:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17509:6:21","type":""}]},{"nodeType":"YulAssignment","src":"17534:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17569:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"17580:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17565:3:21"},"nodeType":"YulFunctionCall","src":"17565:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17589:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17544:20:21"},"nodeType":"YulFunctionCall","src":"17544:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17534:6:21"}]}]},{"nodeType":"YulBlock","src":"17617:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17632:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17646:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17636:6:21","type":""}]},{"nodeType":"YulAssignment","src":"17662:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17697:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"17708:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17693:3:21"},"nodeType":"YulFunctionCall","src":"17693:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17717:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17672:20:21"},"nodeType":"YulFunctionCall","src":"17672:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17662:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17313:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17324:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17336:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17344:6:21","type":""}],"src":"17268:474:21"},{"body":{"nodeType":"YulBlock","src":"18181:1160:21","statements":[{"nodeType":"YulAssignment","src":"18191:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18203:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18214:3:21","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18199:3:21"},"nodeType":"YulFunctionCall","src":"18199:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18191:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18272:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18285:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18296:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18281:3:21"},"nodeType":"YulFunctionCall","src":"18281:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18228:43:21"},"nodeType":"YulFunctionCall","src":"18228:71:21"},"nodeType":"YulExpressionStatement","src":"18228:71:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18320:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18331:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18316:3:21"},"nodeType":"YulFunctionCall","src":"18316:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18340:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18346:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18336:3:21"},"nodeType":"YulFunctionCall","src":"18336:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18309:6:21"},"nodeType":"YulFunctionCall","src":"18309:48:21"},"nodeType":"YulExpressionStatement","src":"18309:48:21"},{"nodeType":"YulAssignment","src":"18366:86:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18438:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"18447:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18374:63:21"},"nodeType":"YulFunctionCall","src":"18374:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18366:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18473:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18484:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18469:3:21"},"nodeType":"YulFunctionCall","src":"18469:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18493:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18499:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18489:3:21"},"nodeType":"YulFunctionCall","src":"18489:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18462:6:21"},"nodeType":"YulFunctionCall","src":"18462:48:21"},"nodeType":"YulExpressionStatement","src":"18462:48:21"},{"nodeType":"YulAssignment","src":"18519:86:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18591:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"18600:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18527:63:21"},"nodeType":"YulFunctionCall","src":"18527:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18519:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18626:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18637:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18622:3:21"},"nodeType":"YulFunctionCall","src":"18622:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18646:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18652:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18642:3:21"},"nodeType":"YulFunctionCall","src":"18642:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18615:6:21"},"nodeType":"YulFunctionCall","src":"18615:48:21"},"nodeType":"YulExpressionStatement","src":"18615:48:21"},{"nodeType":"YulAssignment","src":"18672:86:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18744:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"18753:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18680:63:21"},"nodeType":"YulFunctionCall","src":"18680:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18672:4:21"}]},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"18812:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18825:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18836:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18821:3:21"},"nodeType":"YulFunctionCall","src":"18821:19:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18768:43:21"},"nodeType":"YulFunctionCall","src":"18768:73:21"},"nodeType":"YulExpressionStatement","src":"18768:73:21"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"18895:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18908:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18919:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18904:3:21"},"nodeType":"YulFunctionCall","src":"18904:19:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18851:43:21"},"nodeType":"YulFunctionCall","src":"18851:73:21"},"nodeType":"YulExpressionStatement","src":"18851:73:21"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"18978:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18991:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19002:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18987:3:21"},"nodeType":"YulFunctionCall","src":"18987:19:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18934:43:21"},"nodeType":"YulFunctionCall","src":"18934:73:21"},"nodeType":"YulExpressionStatement","src":"18934:73:21"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"19061:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19074:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19085:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19070:3:21"},"nodeType":"YulFunctionCall","src":"19070:19:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19017:43:21"},"nodeType":"YulFunctionCall","src":"19017:73:21"},"nodeType":"YulExpressionStatement","src":"19017:73:21"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"19138:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19151:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19162:3:21","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19147:3:21"},"nodeType":"YulFunctionCall","src":"19147:19:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"19100:37:21"},"nodeType":"YulFunctionCall","src":"19100:67:21"},"nodeType":"YulExpressionStatement","src":"19100:67:21"},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"19221:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19234:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19245:3:21","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19230:3:21"},"nodeType":"YulFunctionCall","src":"19230:19:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19177:43:21"},"nodeType":"YulFunctionCall","src":"19177:73:21"},"nodeType":"YulExpressionStatement","src":"19177:73:21"},{"expression":{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"19304:7:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19318:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19329:3:21","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19314:3:21"},"nodeType":"YulFunctionCall","src":"19314:19:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19260:43:21"},"nodeType":"YulFunctionCall","src":"19260:74:21"},"nodeType":"YulExpressionStatement","src":"19260:74:21"}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_uint256__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18072:9:21","type":""},{"name":"value10","nodeType":"YulTypedName","src":"18084:7:21","type":""},{"name":"value9","nodeType":"YulTypedName","src":"18093:6:21","type":""},{"name":"value8","nodeType":"YulTypedName","src":"18101:6:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"18109:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"18117:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"18125:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18133:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18141:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18149:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18157:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18165:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18176:4:21","type":""}],"src":"17748:1593:21"},{"body":{"nodeType":"YulBlock","src":"19379:28:21","statements":[{"nodeType":"YulAssignment","src":"19389:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"19396:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19389:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19365:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19375:3:21","type":""}],"src":"19347:60:21"},{"body":{"nodeType":"YulBlock","src":"19473:82:21","statements":[{"nodeType":"YulAssignment","src":"19483:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19541:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"19523:17:21"},"nodeType":"YulFunctionCall","src":"19523:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"19514:8:21"},"nodeType":"YulFunctionCall","src":"19514:34:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"19496:17:21"},"nodeType":"YulFunctionCall","src":"19496:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"19483:9:21"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19453:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"19463:9:21","type":""}],"src":"19413:142:21"},{"body":{"nodeType":"YulBlock","src":"19621:66:21","statements":[{"nodeType":"YulAssignment","src":"19631:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19675:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"19644:30:21"},"nodeType":"YulFunctionCall","src":"19644:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"19631:9:21"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19601:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"19611:9:21","type":""}],"src":"19561:126:21"},{"body":{"nodeType":"YulBlock","src":"19767:66:21","statements":[{"nodeType":"YulAssignment","src":"19777:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19821:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"19790:30:21"},"nodeType":"YulFunctionCall","src":"19790:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"19777:9:21"}]}]},"name":"convert_t_contract$_IERC20_$877_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19747:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"19757:9:21","type":""}],"src":"19693:140:21"},{"body":{"nodeType":"YulBlock","src":"19918:80:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19935:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19985:5:21"}],"functionName":{"name":"convert_t_contract$_IERC20_$877_to_t_address","nodeType":"YulIdentifier","src":"19940:44:21"},"nodeType":"YulFunctionCall","src":"19940:51:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19928:6:21"},"nodeType":"YulFunctionCall","src":"19928:64:21"},"nodeType":"YulExpressionStatement","src":"19928:64:21"}]},"name":"abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19906:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19913:3:21","type":""}],"src":"19839:159:21"},{"body":{"nodeType":"YulBlock","src":"20116:138:21","statements":[{"nodeType":"YulAssignment","src":"20126:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20138:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20149:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20134:3:21"},"nodeType":"YulFunctionCall","src":"20134:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20126:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20220:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20233:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20244:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20229:3:21"},"nodeType":"YulFunctionCall","src":"20229:17:21"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20162:57:21"},"nodeType":"YulFunctionCall","src":"20162:85:21"},"nodeType":"YulExpressionStatement","src":"20162:85:21"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20088:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20100:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20111:4:21","type":""}],"src":"20004:250:21"},{"body":{"nodeType":"YulBlock","src":"20288:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20305:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20308:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20298:6:21"},"nodeType":"YulFunctionCall","src":"20298:88:21"},"nodeType":"YulExpressionStatement","src":"20298:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20402:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20405:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20395:6:21"},"nodeType":"YulFunctionCall","src":"20395:15:21"},"nodeType":"YulExpressionStatement","src":"20395:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20426:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20429:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20419:6:21"},"nodeType":"YulFunctionCall","src":"20419:15:21"},"nodeType":"YulExpressionStatement","src":"20419:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"20260:180:21"},{"body":{"nodeType":"YulBlock","src":"20497:269:21","statements":[{"nodeType":"YulAssignment","src":"20507:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20521:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"20527:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"20517:3:21"},"nodeType":"YulFunctionCall","src":"20517:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20507:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"20538:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20568:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"20574:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20564:3:21"},"nodeType":"YulFunctionCall","src":"20564:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"20542:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"20615:51:21","statements":[{"nodeType":"YulAssignment","src":"20629:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20643:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20651:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20639:3:21"},"nodeType":"YulFunctionCall","src":"20639:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20629:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"20595:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20588:6:21"},"nodeType":"YulFunctionCall","src":"20588:26:21"},"nodeType":"YulIf","src":"20585:81:21"},{"body":{"nodeType":"YulBlock","src":"20718:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"20732:16:21"},"nodeType":"YulFunctionCall","src":"20732:18:21"},"nodeType":"YulExpressionStatement","src":"20732:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"20682:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20705:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20713:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20702:2:21"},"nodeType":"YulFunctionCall","src":"20702:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20679:2:21"},"nodeType":"YulFunctionCall","src":"20679:38:21"},"nodeType":"YulIf","src":"20676:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20481:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20490:6:21","type":""}],"src":"20446:320:21"},{"body":{"nodeType":"YulBlock","src":"20926:288:21","statements":[{"nodeType":"YulAssignment","src":"20936:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20948:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20959:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20944:3:21"},"nodeType":"YulFunctionCall","src":"20944:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20936:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21016:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21029:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21040:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21025:3:21"},"nodeType":"YulFunctionCall","src":"21025:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20972:43:21"},"nodeType":"YulFunctionCall","src":"20972:71:21"},"nodeType":"YulExpressionStatement","src":"20972:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21097:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21110:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21121:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21106:3:21"},"nodeType":"YulFunctionCall","src":"21106:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21053:43:21"},"nodeType":"YulFunctionCall","src":"21053:72:21"},"nodeType":"YulExpressionStatement","src":"21053:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21179:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21192:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21203:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21188:3:21"},"nodeType":"YulFunctionCall","src":"21188:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21135:43:21"},"nodeType":"YulFunctionCall","src":"21135:72:21"},"nodeType":"YulExpressionStatement","src":"21135:72:21"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20882:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20894:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20902:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20910:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20921:4:21","type":""}],"src":"20772:442:21"},{"body":{"nodeType":"YulBlock","src":"21346:206:21","statements":[{"nodeType":"YulAssignment","src":"21356:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21368:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21379:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21364:3:21"},"nodeType":"YulFunctionCall","src":"21364:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21356:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21436:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21449:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21460:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21445:3:21"},"nodeType":"YulFunctionCall","src":"21445:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21392:43:21"},"nodeType":"YulFunctionCall","src":"21392:71:21"},"nodeType":"YulExpressionStatement","src":"21392:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21517:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21530:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21541:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21526:3:21"},"nodeType":"YulFunctionCall","src":"21526:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21473:43:21"},"nodeType":"YulFunctionCall","src":"21473:72:21"},"nodeType":"YulExpressionStatement","src":"21473:72:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21310:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21322:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21330:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21341:4:21","type":""}],"src":"21220:332:21"},{"body":{"nodeType":"YulBlock","src":"21618:77:21","statements":[{"nodeType":"YulAssignment","src":"21628:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21643:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21637:5:21"},"nodeType":"YulFunctionCall","src":"21637:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21628:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21683:5:21"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"21659:23:21"},"nodeType":"YulFunctionCall","src":"21659:30:21"},"nodeType":"YulExpressionStatement","src":"21659:30:21"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21596:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"21604:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"21612:5:21","type":""}],"src":"21558:137:21"},{"body":{"nodeType":"YulBlock","src":"21775:271:21","statements":[{"body":{"nodeType":"YulBlock","src":"21821:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21823:77:21"},"nodeType":"YulFunctionCall","src":"21823:79:21"},"nodeType":"YulExpressionStatement","src":"21823:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21796:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"21805:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21792:3:21"},"nodeType":"YulFunctionCall","src":"21792:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"21817:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21788:3:21"},"nodeType":"YulFunctionCall","src":"21788:32:21"},"nodeType":"YulIf","src":"21785:119:21"},{"nodeType":"YulBlock","src":"21914:125:21","statements":[{"nodeType":"YulVariableDeclaration","src":"21929:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"21943:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21933:6:21","type":""}]},{"nodeType":"YulAssignment","src":"21958:71:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22001:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"22012:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21997:3:21"},"nodeType":"YulFunctionCall","src":"21997:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22021:7:21"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"21968:28:21"},"nodeType":"YulFunctionCall","src":"21968:61:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21958:6:21"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21745:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21756:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21768:6:21","type":""}],"src":"21701:345:21"},{"body":{"nodeType":"YulBlock","src":"22158:66:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22180:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"22188:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22176:3:21"},"nodeType":"YulFunctionCall","src":"22176:14:21"},{"hexValue":"41727469636c6520646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"22192:24:21","type":"","value":"Article does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22169:6:21"},"nodeType":"YulFunctionCall","src":"22169:48:21"},"nodeType":"YulExpressionStatement","src":"22169:48:21"}]},"name":"store_literal_in_memory_318f2476c7a187ea609a6f60b5fe8031470a5935a58fd7a84564aa0d3e925432","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22150:6:21","type":""}],"src":"22052:172:21"},{"body":{"nodeType":"YulBlock","src":"22376:220:21","statements":[{"nodeType":"YulAssignment","src":"22386:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22452:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22457:2:21","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22393:58:21"},"nodeType":"YulFunctionCall","src":"22393:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22386:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22558:3:21"}],"functionName":{"name":"store_literal_in_memory_318f2476c7a187ea609a6f60b5fe8031470a5935a58fd7a84564aa0d3e925432","nodeType":"YulIdentifier","src":"22469:88:21"},"nodeType":"YulFunctionCall","src":"22469:93:21"},"nodeType":"YulExpressionStatement","src":"22469:93:21"},{"nodeType":"YulAssignment","src":"22571:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22582:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22587:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22578:3:21"},"nodeType":"YulFunctionCall","src":"22578:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22571:3:21"}]}]},"name":"abi_encode_t_stringliteral_318f2476c7a187ea609a6f60b5fe8031470a5935a58fd7a84564aa0d3e925432_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22364:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22372:3:21","type":""}],"src":"22230:366:21"},{"body":{"nodeType":"YulBlock","src":"22773:248:21","statements":[{"nodeType":"YulAssignment","src":"22783:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22795:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22806:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22791:3:21"},"nodeType":"YulFunctionCall","src":"22791:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22783:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22830:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22841:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22826:3:21"},"nodeType":"YulFunctionCall","src":"22826:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22849:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"22855:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22845:3:21"},"nodeType":"YulFunctionCall","src":"22845:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22819:6:21"},"nodeType":"YulFunctionCall","src":"22819:47:21"},"nodeType":"YulExpressionStatement","src":"22819:47:21"},{"nodeType":"YulAssignment","src":"22875:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23009:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_318f2476c7a187ea609a6f60b5fe8031470a5935a58fd7a84564aa0d3e925432_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22883:124:21"},"nodeType":"YulFunctionCall","src":"22883:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22875:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_318f2476c7a187ea609a6f60b5fe8031470a5935a58fd7a84564aa0d3e925432__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22753:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22768:4:21","type":""}],"src":"22602:419:21"},{"body":{"nodeType":"YulBlock","src":"23133:64:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23155:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23163:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23151:3:21"},"nodeType":"YulFunctionCall","src":"23151:14:21"},{"hexValue":"41727469636c6520697320636f6d706c65746564","kind":"string","nodeType":"YulLiteral","src":"23167:22:21","type":"","value":"Article is completed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23144:6:21"},"nodeType":"YulFunctionCall","src":"23144:46:21"},"nodeType":"YulExpressionStatement","src":"23144:46:21"}]},"name":"store_literal_in_memory_549cb4a8c3e774ad0b20f76b2942a5cbca162f76ac34664dbd7b963e12b9d3c3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23125:6:21","type":""}],"src":"23027:170:21"},{"body":{"nodeType":"YulBlock","src":"23349:220:21","statements":[{"nodeType":"YulAssignment","src":"23359:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23425:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"23430:2:21","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23366:58:21"},"nodeType":"YulFunctionCall","src":"23366:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23359:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23531:3:21"}],"functionName":{"name":"store_literal_in_memory_549cb4a8c3e774ad0b20f76b2942a5cbca162f76ac34664dbd7b963e12b9d3c3","nodeType":"YulIdentifier","src":"23442:88:21"},"nodeType":"YulFunctionCall","src":"23442:93:21"},"nodeType":"YulExpressionStatement","src":"23442:93:21"},{"nodeType":"YulAssignment","src":"23544:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23555:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"23560:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23551:3:21"},"nodeType":"YulFunctionCall","src":"23551:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23544:3:21"}]}]},"name":"abi_encode_t_stringliteral_549cb4a8c3e774ad0b20f76b2942a5cbca162f76ac34664dbd7b963e12b9d3c3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23337:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23345:3:21","type":""}],"src":"23203:366:21"},{"body":{"nodeType":"YulBlock","src":"23746:248:21","statements":[{"nodeType":"YulAssignment","src":"23756:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23768:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23779:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23764:3:21"},"nodeType":"YulFunctionCall","src":"23764:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23756:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23803:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23814:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23799:3:21"},"nodeType":"YulFunctionCall","src":"23799:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23822:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"23828:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23818:3:21"},"nodeType":"YulFunctionCall","src":"23818:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23792:6:21"},"nodeType":"YulFunctionCall","src":"23792:47:21"},"nodeType":"YulExpressionStatement","src":"23792:47:21"},{"nodeType":"YulAssignment","src":"23848:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23982:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_549cb4a8c3e774ad0b20f76b2942a5cbca162f76ac34664dbd7b963e12b9d3c3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23856:124:21"},"nodeType":"YulFunctionCall","src":"23856:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23848:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_549cb4a8c3e774ad0b20f76b2942a5cbca162f76ac34664dbd7b963e12b9d3c3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23726:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23741:4:21","type":""}],"src":"23575:419:21"},{"body":{"nodeType":"YulBlock","src":"24106:125:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24128:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"24136:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24124:3:21"},"nodeType":"YulFunctionCall","src":"24124:14:21"},{"hexValue":"596f75206861766520616c726561647920636f6e747269627574656420746f20","kind":"string","nodeType":"YulLiteral","src":"24140:34:21","type":"","value":"You have already contributed to "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24117:6:21"},"nodeType":"YulFunctionCall","src":"24117:58:21"},"nodeType":"YulExpressionStatement","src":"24117:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24196:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"24204:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24192:3:21"},"nodeType":"YulFunctionCall","src":"24192:15:21"},{"hexValue":"746869732061727469636c65","kind":"string","nodeType":"YulLiteral","src":"24209:14:21","type":"","value":"this article"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24185:6:21"},"nodeType":"YulFunctionCall","src":"24185:39:21"},"nodeType":"YulExpressionStatement","src":"24185:39:21"}]},"name":"store_literal_in_memory_c871f1b7893184c0a61eff62af505af653a7d64957316c5dd8e38e77764f2392","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24098:6:21","type":""}],"src":"24000:231:21"},{"body":{"nodeType":"YulBlock","src":"24383:220:21","statements":[{"nodeType":"YulAssignment","src":"24393:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24459:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"24464:2:21","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24400:58:21"},"nodeType":"YulFunctionCall","src":"24400:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24393:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24565:3:21"}],"functionName":{"name":"store_literal_in_memory_c871f1b7893184c0a61eff62af505af653a7d64957316c5dd8e38e77764f2392","nodeType":"YulIdentifier","src":"24476:88:21"},"nodeType":"YulFunctionCall","src":"24476:93:21"},"nodeType":"YulExpressionStatement","src":"24476:93:21"},{"nodeType":"YulAssignment","src":"24578:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24589:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"24594:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24585:3:21"},"nodeType":"YulFunctionCall","src":"24585:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24578:3:21"}]}]},"name":"abi_encode_t_stringliteral_c871f1b7893184c0a61eff62af505af653a7d64957316c5dd8e38e77764f2392_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24371:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24379:3:21","type":""}],"src":"24237:366:21"},{"body":{"nodeType":"YulBlock","src":"24780:248:21","statements":[{"nodeType":"YulAssignment","src":"24790:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24802:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24813:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24798:3:21"},"nodeType":"YulFunctionCall","src":"24798:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24790:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24837:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24848:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24833:3:21"},"nodeType":"YulFunctionCall","src":"24833:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24856:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"24862:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24852:3:21"},"nodeType":"YulFunctionCall","src":"24852:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24826:6:21"},"nodeType":"YulFunctionCall","src":"24826:47:21"},"nodeType":"YulExpressionStatement","src":"24826:47:21"},{"nodeType":"YulAssignment","src":"24882:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25016:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_c871f1b7893184c0a61eff62af505af653a7d64957316c5dd8e38e77764f2392_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24890:124:21"},"nodeType":"YulFunctionCall","src":"24890:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24882:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c871f1b7893184c0a61eff62af505af653a7d64957316c5dd8e38e77764f2392__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24760:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24775:4:21","type":""}],"src":"24609:419:21"},{"body":{"nodeType":"YulBlock","src":"25140:61:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25162:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"25170:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25158:3:21"},"nodeType":"YulFunctionCall","src":"25158:14:21"},{"hexValue":"436f6e74656e7420746f6f2073686f7274","kind":"string","nodeType":"YulLiteral","src":"25174:19:21","type":"","value":"Content too short"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25151:6:21"},"nodeType":"YulFunctionCall","src":"25151:43:21"},"nodeType":"YulExpressionStatement","src":"25151:43:21"}]},"name":"store_literal_in_memory_d8b9ca560d0edd639e2bd9185ac1236c99f01b71294011330912cf50a5bfbee4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25132:6:21","type":""}],"src":"25034:167:21"},{"body":{"nodeType":"YulBlock","src":"25353:220:21","statements":[{"nodeType":"YulAssignment","src":"25363:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25429:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"25434:2:21","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25370:58:21"},"nodeType":"YulFunctionCall","src":"25370:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25363:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25535:3:21"}],"functionName":{"name":"store_literal_in_memory_d8b9ca560d0edd639e2bd9185ac1236c99f01b71294011330912cf50a5bfbee4","nodeType":"YulIdentifier","src":"25446:88:21"},"nodeType":"YulFunctionCall","src":"25446:93:21"},"nodeType":"YulExpressionStatement","src":"25446:93:21"},{"nodeType":"YulAssignment","src":"25548:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25559:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"25564:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25555:3:21"},"nodeType":"YulFunctionCall","src":"25555:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25548:3:21"}]}]},"name":"abi_encode_t_stringliteral_d8b9ca560d0edd639e2bd9185ac1236c99f01b71294011330912cf50a5bfbee4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25341:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25349:3:21","type":""}],"src":"25207:366:21"},{"body":{"nodeType":"YulBlock","src":"25750:248:21","statements":[{"nodeType":"YulAssignment","src":"25760:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25772:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25783:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25768:3:21"},"nodeType":"YulFunctionCall","src":"25768:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25760:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25807:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25818:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25803:3:21"},"nodeType":"YulFunctionCall","src":"25803:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25826:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"25832:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25822:3:21"},"nodeType":"YulFunctionCall","src":"25822:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25796:6:21"},"nodeType":"YulFunctionCall","src":"25796:47:21"},"nodeType":"YulExpressionStatement","src":"25796:47:21"},{"nodeType":"YulAssignment","src":"25852:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25986:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_d8b9ca560d0edd639e2bd9185ac1236c99f01b71294011330912cf50a5bfbee4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25860:124:21"},"nodeType":"YulFunctionCall","src":"25860:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25852:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d8b9ca560d0edd639e2bd9185ac1236c99f01b71294011330912cf50a5bfbee4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25730:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25745:4:21","type":""}],"src":"25579:419:21"},{"body":{"nodeType":"YulBlock","src":"26110:68:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26132:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"26140:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26128:3:21"},"nodeType":"YulFunctionCall","src":"26128:14:21"},{"hexValue":"4d617820636f6e7472696275746f72732072656163686564","kind":"string","nodeType":"YulLiteral","src":"26144:26:21","type":"","value":"Max contributors reached"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26121:6:21"},"nodeType":"YulFunctionCall","src":"26121:50:21"},"nodeType":"YulExpressionStatement","src":"26121:50:21"}]},"name":"store_literal_in_memory_23e270ac03cbb43a13b96ad46240f8c443bd3c1a0a4a872ab6e9183bce8a845a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26102:6:21","type":""}],"src":"26004:174:21"},{"body":{"nodeType":"YulBlock","src":"26330:220:21","statements":[{"nodeType":"YulAssignment","src":"26340:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26406:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"26411:2:21","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26347:58:21"},"nodeType":"YulFunctionCall","src":"26347:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26340:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26512:3:21"}],"functionName":{"name":"store_literal_in_memory_23e270ac03cbb43a13b96ad46240f8c443bd3c1a0a4a872ab6e9183bce8a845a","nodeType":"YulIdentifier","src":"26423:88:21"},"nodeType":"YulFunctionCall","src":"26423:93:21"},"nodeType":"YulExpressionStatement","src":"26423:93:21"},{"nodeType":"YulAssignment","src":"26525:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26536:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"26541:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26532:3:21"},"nodeType":"YulFunctionCall","src":"26532:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26525:3:21"}]}]},"name":"abi_encode_t_stringliteral_23e270ac03cbb43a13b96ad46240f8c443bd3c1a0a4a872ab6e9183bce8a845a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26318:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26326:3:21","type":""}],"src":"26184:366:21"},{"body":{"nodeType":"YulBlock","src":"26727:248:21","statements":[{"nodeType":"YulAssignment","src":"26737:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26749:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26760:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26745:3:21"},"nodeType":"YulFunctionCall","src":"26745:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26737:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26784:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26795:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26780:3:21"},"nodeType":"YulFunctionCall","src":"26780:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26803:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"26809:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26799:3:21"},"nodeType":"YulFunctionCall","src":"26799:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26773:6:21"},"nodeType":"YulFunctionCall","src":"26773:47:21"},"nodeType":"YulExpressionStatement","src":"26773:47:21"},{"nodeType":"YulAssignment","src":"26829:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26963:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_23e270ac03cbb43a13b96ad46240f8c443bd3c1a0a4a872ab6e9183bce8a845a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26837:124:21"},"nodeType":"YulFunctionCall","src":"26837:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26829:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_23e270ac03cbb43a13b96ad46240f8c443bd3c1a0a4a872ab6e9183bce8a845a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26707:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26722:4:21","type":""}],"src":"26556:419:21"},{"body":{"nodeType":"YulBlock","src":"27009:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27026:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27029:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27019:6:21"},"nodeType":"YulFunctionCall","src":"27019:88:21"},"nodeType":"YulExpressionStatement","src":"27019:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27123:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27126:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27116:6:21"},"nodeType":"YulFunctionCall","src":"27116:15:21"},"nodeType":"YulExpressionStatement","src":"27116:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27147:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27150:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27140:6:21"},"nodeType":"YulFunctionCall","src":"27140:15:21"},"nodeType":"YulExpressionStatement","src":"27140:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"26981:180:21"},{"body":{"nodeType":"YulBlock","src":"27210:190:21","statements":[{"nodeType":"YulAssignment","src":"27220:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27247:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27229:17:21"},"nodeType":"YulFunctionCall","src":"27229:24:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"27220:5:21"}]},{"body":{"nodeType":"YulBlock","src":"27343:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27345:16:21"},"nodeType":"YulFunctionCall","src":"27345:18:21"},"nodeType":"YulExpressionStatement","src":"27345:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27268:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"27275:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"27265:2:21"},"nodeType":"YulFunctionCall","src":"27265:77:21"},"nodeType":"YulIf","src":"27262:103:21"},{"nodeType":"YulAssignment","src":"27374:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27385:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"27392:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27381:3:21"},"nodeType":"YulFunctionCall","src":"27381:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"27374:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27196:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"27206:3:21","type":""}],"src":"27167:233:21"},{"body":{"nodeType":"YulBlock","src":"27460:87:21","statements":[{"nodeType":"YulAssignment","src":"27470:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"27478:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"27470:4:21"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27498:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"27501:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27491:6:21"},"nodeType":"YulFunctionCall","src":"27491:14:21"},"nodeType":"YulExpressionStatement","src":"27491:14:21"},{"nodeType":"YulAssignment","src":"27514:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27532:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27535:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"27522:9:21"},"nodeType":"YulFunctionCall","src":"27522:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"27514:4:21"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"27447:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"27455:4:21","type":""}],"src":"27406:141:21"},{"body":{"nodeType":"YulBlock","src":"27597:49:21","statements":[{"nodeType":"YulAssignment","src":"27607:33:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27625:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"27632:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27621:3:21"},"nodeType":"YulFunctionCall","src":"27621:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"27637:2:21","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"27617:3:21"},"nodeType":"YulFunctionCall","src":"27617:23:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"27607:6:21"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27580:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"27590:6:21","type":""}],"src":"27553:93:21"},{"body":{"nodeType":"YulBlock","src":"27705:54:21","statements":[{"nodeType":"YulAssignment","src":"27715:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"27740:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"27746:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"27736:3:21"},"nodeType":"YulFunctionCall","src":"27736:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"27715:8:21"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"27680:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"27686:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"27696:8:21","type":""}],"src":"27652:107:21"},{"body":{"nodeType":"YulBlock","src":"27841:317:21","statements":[{"nodeType":"YulVariableDeclaration","src":"27851:35:21","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"27872:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"27884:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27868:3:21"},"nodeType":"YulFunctionCall","src":"27868:18:21"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"27855:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"27895:109:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"27926:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27937:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"27907:18:21"},"nodeType":"YulFunctionCall","src":"27907:97:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"27899:4:21","type":""}]},{"nodeType":"YulAssignment","src":"28013:51:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"28044:9:21"},{"name":"toInsert","nodeType":"YulIdentifier","src":"28055:8:21"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"28025:18:21"},"nodeType":"YulFunctionCall","src":"28025:39:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"28013:8:21"}]},{"nodeType":"YulAssignment","src":"28073:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28086:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"28097:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"28093:3:21"},"nodeType":"YulFunctionCall","src":"28093:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28082:3:21"},"nodeType":"YulFunctionCall","src":"28082:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"28073:5:21"}]},{"nodeType":"YulAssignment","src":"28112:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28125:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"28136:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"28146:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28132:3:21"},"nodeType":"YulFunctionCall","src":"28132:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28122:2:21"},"nodeType":"YulFunctionCall","src":"28122:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"28112:6:21"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27802:5:21","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"27809:10:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"27821:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"27834:6:21","type":""}],"src":"27765:393:21"},{"body":{"nodeType":"YulBlock","src":"28224:82:21","statements":[{"nodeType":"YulAssignment","src":"28234:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28292:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28274:17:21"},"nodeType":"YulFunctionCall","src":"28274:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"28265:8:21"},"nodeType":"YulFunctionCall","src":"28265:34:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28247:17:21"},"nodeType":"YulFunctionCall","src":"28247:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"28234:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28204:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"28214:9:21","type":""}],"src":"28164:142:21"},{"body":{"nodeType":"YulBlock","src":"28359:28:21","statements":[{"nodeType":"YulAssignment","src":"28369:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"28376:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"28369:3:21"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28345:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"28355:3:21","type":""}],"src":"28312:75:21"},{"body":{"nodeType":"YulBlock","src":"28469:193:21","statements":[{"nodeType":"YulVariableDeclaration","src":"28479:63:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"28534:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"28503:30:21"},"nodeType":"YulFunctionCall","src":"28503:39:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"28483:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28558:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28598:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"28592:5:21"},"nodeType":"YulFunctionCall","src":"28592:11:21"},{"name":"offset","nodeType":"YulIdentifier","src":"28605:6:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"28637:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"28613:23:21"},"nodeType":"YulFunctionCall","src":"28613:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"28564:27:21"},"nodeType":"YulFunctionCall","src":"28564:91:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"28551:6:21"},"nodeType":"YulFunctionCall","src":"28551:105:21"},"nodeType":"YulExpressionStatement","src":"28551:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"28446:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"28452:6:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"28460:7:21","type":""}],"src":"28393:269:21"},{"body":{"nodeType":"YulBlock","src":"28717:24:21","statements":[{"nodeType":"YulAssignment","src":"28727:8:21","value":{"kind":"number","nodeType":"YulLiteral","src":"28734:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"28727:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"28713:3:21","type":""}],"src":"28668:73:21"},{"body":{"nodeType":"YulBlock","src":"28800:136:21","statements":[{"nodeType":"YulVariableDeclaration","src":"28810:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"28824:30:21"},"nodeType":"YulFunctionCall","src":"28824:32:21"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"28814:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28909:4:21"},{"name":"offset","nodeType":"YulIdentifier","src":"28915:6:21"},{"name":"zero_0","nodeType":"YulIdentifier","src":"28923:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"28865:43:21"},"nodeType":"YulFunctionCall","src":"28865:65:21"},"nodeType":"YulExpressionStatement","src":"28865:65:21"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"28786:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"28792:6:21","type":""}],"src":"28747:189:21"},{"body":{"nodeType":"YulBlock","src":"28992:136:21","statements":[{"body":{"nodeType":"YulBlock","src":"29059:63:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"29103:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"29110:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"29073:29:21"},"nodeType":"YulFunctionCall","src":"29073:39:21"},"nodeType":"YulExpressionStatement","src":"29073:39:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"29012:5:21"},{"name":"end","nodeType":"YulIdentifier","src":"29019:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29009:2:21"},"nodeType":"YulFunctionCall","src":"29009:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"29024:26:21","statements":[{"nodeType":"YulAssignment","src":"29026:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"29039:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"29046:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29035:3:21"},"nodeType":"YulFunctionCall","src":"29035:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"29026:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"29006:2:21","statements":[]},"src":"29002:120:21"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"28980:5:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"28987:3:21","type":""}],"src":"28942:186:21"},{"body":{"nodeType":"YulBlock","src":"29213:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"29239:431:21","statements":[{"nodeType":"YulVariableDeclaration","src":"29253:54:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"29301:5:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"29269:31:21"},"nodeType":"YulFunctionCall","src":"29269:38:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"29257:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29320:63:21","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"29343:8:21"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"29371:10:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"29353:17:21"},"nodeType":"YulFunctionCall","src":"29353:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29339:3:21"},"nodeType":"YulFunctionCall","src":"29339:44:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"29324:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"29540:27:21","statements":[{"nodeType":"YulAssignment","src":"29542:23:21","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"29557:8:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"29542:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"29524:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"29536:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29521:2:21"},"nodeType":"YulFunctionCall","src":"29521:18:21"},"nodeType":"YulIf","src":"29518:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"29609:11:21"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"29626:8:21"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"29654:3:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"29636:17:21"},"nodeType":"YulFunctionCall","src":"29636:22:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29622:3:21"},"nodeType":"YulFunctionCall","src":"29622:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"29580:28:21"},"nodeType":"YulFunctionCall","src":"29580:80:21"},"nodeType":"YulExpressionStatement","src":"29580:80:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"29230:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"29235:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29227:2:21"},"nodeType":"YulFunctionCall","src":"29227:11:21"},"nodeType":"YulIf","src":"29224:446:21"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"29189:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"29196:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"29201:10:21","type":""}],"src":"29134:543:21"},{"body":{"nodeType":"YulBlock","src":"29746:54:21","statements":[{"nodeType":"YulAssignment","src":"29756:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"29781:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"29787:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"29777:3:21"},"nodeType":"YulFunctionCall","src":"29777:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"29756:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"29721:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"29727:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"29737:8:21","type":""}],"src":"29683:117:21"},{"body":{"nodeType":"YulBlock","src":"29857:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"29867:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29916:1:21","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"29919:5:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29912:3:21"},"nodeType":"YulFunctionCall","src":"29912:13:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29931:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"29927:3:21"},"nodeType":"YulFunctionCall","src":"29927:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"29883:28:21"},"nodeType":"YulFunctionCall","src":"29883:51:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"29879:3:21"},"nodeType":"YulFunctionCall","src":"29879:56:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"29871:4:21","type":""}]},{"nodeType":"YulAssignment","src":"29944:25:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29958:4:21"},{"name":"mask","nodeType":"YulIdentifier","src":"29964:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29954:3:21"},"nodeType":"YulFunctionCall","src":"29954:15:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"29944:6:21"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"29834:4:21","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"29840:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"29850:6:21","type":""}],"src":"29806:169:21"},{"body":{"nodeType":"YulBlock","src":"30061:214:21","statements":[{"nodeType":"YulAssignment","src":"30194:37:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"30221:4:21"},{"name":"len","nodeType":"YulIdentifier","src":"30227:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"30202:18:21"},"nodeType":"YulFunctionCall","src":"30202:29:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"30194:4:21"}]},{"nodeType":"YulAssignment","src":"30240:29:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"30251:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30261:1:21","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"30264:3:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"30257:3:21"},"nodeType":"YulFunctionCall","src":"30257:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"30248:2:21"},"nodeType":"YulFunctionCall","src":"30248:21:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"30240:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"30042:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"30048:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"30056:4:21","type":""}],"src":"29980:295:21"},{"body":{"nodeType":"YulBlock","src":"30372:1303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"30383:51:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"30430:3:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"30397:32:21"},"nodeType":"YulFunctionCall","src":"30397:37:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"30387:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"30519:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"30521:16:21"},"nodeType":"YulFunctionCall","src":"30521:18:21"},"nodeType":"YulExpressionStatement","src":"30521:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"30491:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"30499:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30488:2:21"},"nodeType":"YulFunctionCall","src":"30488:30:21"},"nodeType":"YulIf","src":"30485:56:21"},{"nodeType":"YulVariableDeclaration","src":"30551:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30597:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"30591:5:21"},"nodeType":"YulFunctionCall","src":"30591:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"30565:25:21"},"nodeType":"YulFunctionCall","src":"30565:38:21"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"30555:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30696:4:21"},{"name":"oldLen","nodeType":"YulIdentifier","src":"30702:6:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"30710:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"30650:45:21"},"nodeType":"YulFunctionCall","src":"30650:67:21"},"nodeType":"YulExpressionStatement","src":"30650:67:21"},{"nodeType":"YulVariableDeclaration","src":"30727:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"30744:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"30731:9:21","type":""}]},{"nodeType":"YulAssignment","src":"30755:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"30768:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"30755:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"30819:611:21","statements":[{"nodeType":"YulVariableDeclaration","src":"30833:37:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"30852:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30864:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"30860:3:21"},"nodeType":"YulFunctionCall","src":"30860:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30848:3:21"},"nodeType":"YulFunctionCall","src":"30848:22:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"30837:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"30884:51:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30930:4:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"30898:31:21"},"nodeType":"YulFunctionCall","src":"30898:37:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"30888:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"30948:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"30957:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"30952:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"31016:163:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"31041:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"31059:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"31064:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31055:3:21"},"nodeType":"YulFunctionCall","src":"31055:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31049:5:21"},"nodeType":"YulFunctionCall","src":"31049:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"31034:6:21"},"nodeType":"YulFunctionCall","src":"31034:42:21"},"nodeType":"YulExpressionStatement","src":"31034:42:21"},{"nodeType":"YulAssignment","src":"31093:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"31107:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"31115:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31103:3:21"},"nodeType":"YulFunctionCall","src":"31103:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"31093:6:21"}]},{"nodeType":"YulAssignment","src":"31134:31:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"31151:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31162:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31147:3:21"},"nodeType":"YulFunctionCall","src":"31147:18:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"31134:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"30982:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"30985:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30979:2:21"},"nodeType":"YulFunctionCall","src":"30979:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"30994:21:21","statements":[{"nodeType":"YulAssignment","src":"30996:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31005:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"31008:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31001:3:21"},"nodeType":"YulFunctionCall","src":"31001:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"30996:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"30975:3:21","statements":[]},"src":"30971:208:21"},{"body":{"nodeType":"YulBlock","src":"31215:156:21","statements":[{"nodeType":"YulVariableDeclaration","src":"31233:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"31260:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"31265:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31256:3:21"},"nodeType":"YulFunctionCall","src":"31256:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31250:5:21"},"nodeType":"YulFunctionCall","src":"31250:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"31237:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"31300:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"31327:9:21"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"31342:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"31350:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31338:3:21"},"nodeType":"YulFunctionCall","src":"31338:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"31308:18:21"},"nodeType":"YulFunctionCall","src":"31308:48:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"31293:6:21"},"nodeType":"YulFunctionCall","src":"31293:64:21"},"nodeType":"YulExpressionStatement","src":"31293:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"31198:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"31207:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31195:2:21"},"nodeType":"YulFunctionCall","src":"31195:19:21"},"nodeType":"YulIf","src":"31192:179:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31391:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"31405:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"31413:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"31401:3:21"},"nodeType":"YulFunctionCall","src":"31401:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"31417:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31397:3:21"},"nodeType":"YulFunctionCall","src":"31397:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"31384:6:21"},"nodeType":"YulFunctionCall","src":"31384:36:21"},"nodeType":"YulExpressionStatement","src":"31384:36:21"}]},"nodeType":"YulCase","src":"30812:618:21","value":{"kind":"number","nodeType":"YulLiteral","src":"30817:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"31447:222:21","statements":[{"nodeType":"YulVariableDeclaration","src":"31461:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"31474:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"31465:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"31498:67:21","statements":[{"nodeType":"YulAssignment","src":"31516:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"31535:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"31540:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31531:3:21"},"nodeType":"YulFunctionCall","src":"31531:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31525:5:21"},"nodeType":"YulFunctionCall","src":"31525:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"31516:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"31491:6:21"},"nodeType":"YulIf","src":"31488:77:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31585:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31644:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"31651:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"31591:52:21"},"nodeType":"YulFunctionCall","src":"31591:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"31578:6:21"},"nodeType":"YulFunctionCall","src":"31578:81:21"},"nodeType":"YulExpressionStatement","src":"31578:81:21"}]},"nodeType":"YulCase","src":"31439:230:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"30792:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"30800:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30789:2:21"},"nodeType":"YulFunctionCall","src":"30789:14:21"},"nodeType":"YulSwitch","src":"30782:887:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"30361:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"30367:3:21","type":""}],"src":"30280:1395:21"},{"body":{"nodeType":"YulBlock","src":"31787:71:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31809:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"31817:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31805:3:21"},"nodeType":"YulFunctionCall","src":"31805:14:21"},{"hexValue":"436f6e747269627574696f6e20646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"31821:29:21","type":"","value":"Contribution does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31798:6:21"},"nodeType":"YulFunctionCall","src":"31798:53:21"},"nodeType":"YulExpressionStatement","src":"31798:53:21"}]},"name":"store_literal_in_memory_8bc5c6f6c5528dc5ae3ac1cf9bf495637b9493da913183d40f293b3288430e6f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31779:6:21","type":""}],"src":"31681:177:21"},{"body":{"nodeType":"YulBlock","src":"32010:220:21","statements":[{"nodeType":"YulAssignment","src":"32020:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32086:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"32091:2:21","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32027:58:21"},"nodeType":"YulFunctionCall","src":"32027:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32020:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32192:3:21"}],"functionName":{"name":"store_literal_in_memory_8bc5c6f6c5528dc5ae3ac1cf9bf495637b9493da913183d40f293b3288430e6f","nodeType":"YulIdentifier","src":"32103:88:21"},"nodeType":"YulFunctionCall","src":"32103:93:21"},"nodeType":"YulExpressionStatement","src":"32103:93:21"},{"nodeType":"YulAssignment","src":"32205:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32216:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"32221:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32212:3:21"},"nodeType":"YulFunctionCall","src":"32212:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32205:3:21"}]}]},"name":"abi_encode_t_stringliteral_8bc5c6f6c5528dc5ae3ac1cf9bf495637b9493da913183d40f293b3288430e6f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31998:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32006:3:21","type":""}],"src":"31864:366:21"},{"body":{"nodeType":"YulBlock","src":"32407:248:21","statements":[{"nodeType":"YulAssignment","src":"32417:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32429:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32440:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32425:3:21"},"nodeType":"YulFunctionCall","src":"32425:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32417:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32464:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32475:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32460:3:21"},"nodeType":"YulFunctionCall","src":"32460:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32483:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"32489:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32479:3:21"},"nodeType":"YulFunctionCall","src":"32479:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32453:6:21"},"nodeType":"YulFunctionCall","src":"32453:47:21"},"nodeType":"YulExpressionStatement","src":"32453:47:21"},{"nodeType":"YulAssignment","src":"32509:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32643:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_8bc5c6f6c5528dc5ae3ac1cf9bf495637b9493da913183d40f293b3288430e6f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32517:124:21"},"nodeType":"YulFunctionCall","src":"32517:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32509:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_8bc5c6f6c5528dc5ae3ac1cf9bf495637b9493da913183d40f293b3288430e6f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32387:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32402:4:21","type":""}],"src":"32236:419:21"},{"body":{"nodeType":"YulBlock","src":"32767:73:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32789:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"32797:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32785:3:21"},"nodeType":"YulFunctionCall","src":"32785:14:21"},{"hexValue":"436f6e747269627574696f6e20616c726561647920617070726f766564","kind":"string","nodeType":"YulLiteral","src":"32801:31:21","type":"","value":"Contribution already approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32778:6:21"},"nodeType":"YulFunctionCall","src":"32778:55:21"},"nodeType":"YulExpressionStatement","src":"32778:55:21"}]},"name":"store_literal_in_memory_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32759:6:21","type":""}],"src":"32661:179:21"},{"body":{"nodeType":"YulBlock","src":"32992:220:21","statements":[{"nodeType":"YulAssignment","src":"33002:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33068:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"33073:2:21","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33009:58:21"},"nodeType":"YulFunctionCall","src":"33009:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33002:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33174:3:21"}],"functionName":{"name":"store_literal_in_memory_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20","nodeType":"YulIdentifier","src":"33085:88:21"},"nodeType":"YulFunctionCall","src":"33085:93:21"},"nodeType":"YulExpressionStatement","src":"33085:93:21"},{"nodeType":"YulAssignment","src":"33187:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33198:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"33203:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33194:3:21"},"nodeType":"YulFunctionCall","src":"33194:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33187:3:21"}]}]},"name":"abi_encode_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32980:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32988:3:21","type":""}],"src":"32846:366:21"},{"body":{"nodeType":"YulBlock","src":"33389:248:21","statements":[{"nodeType":"YulAssignment","src":"33399:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33411:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33422:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33407:3:21"},"nodeType":"YulFunctionCall","src":"33407:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33399:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33446:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33457:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33442:3:21"},"nodeType":"YulFunctionCall","src":"33442:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33465:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"33471:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33461:3:21"},"nodeType":"YulFunctionCall","src":"33461:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33435:6:21"},"nodeType":"YulFunctionCall","src":"33435:47:21"},"nodeType":"YulExpressionStatement","src":"33435:47:21"},{"nodeType":"YulAssignment","src":"33491:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33625:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33499:124:21"},"nodeType":"YulFunctionCall","src":"33499:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33491:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33369:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33384:4:21","type":""}],"src":"33218:419:21"},{"body":{"nodeType":"YulBlock","src":"33687:147:21","statements":[{"nodeType":"YulAssignment","src":"33697:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33720:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33702:17:21"},"nodeType":"YulFunctionCall","src":"33702:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"33697:1:21"}]},{"nodeType":"YulAssignment","src":"33731:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"33754:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33736:17:21"},"nodeType":"YulFunctionCall","src":"33736:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"33731:1:21"}]},{"nodeType":"YulAssignment","src":"33765:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33776:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"33779:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33772:3:21"},"nodeType":"YulFunctionCall","src":"33772:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"33765:3:21"}]},{"body":{"nodeType":"YulBlock","src":"33805:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"33807:16:21"},"nodeType":"YulFunctionCall","src":"33807:18:21"},"nodeType":"YulExpressionStatement","src":"33807:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33797:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"33800:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33794:2:21"},"nodeType":"YulFunctionCall","src":"33794:10:21"},"nodeType":"YulIf","src":"33791:36:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"33674:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"33677:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"33683:3:21","type":""}],"src":"33643:191:21"},{"body":{"nodeType":"YulBlock","src":"33946:71:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33968:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"33976:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33964:3:21"},"nodeType":"YulFunctionCall","src":"33964:14:21"},{"hexValue":"596f75206861766520616c7265616479206c696b65642074686973","kind":"string","nodeType":"YulLiteral","src":"33980:29:21","type":"","value":"You have already liked this"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33957:6:21"},"nodeType":"YulFunctionCall","src":"33957:53:21"},"nodeType":"YulExpressionStatement","src":"33957:53:21"}]},"name":"store_literal_in_memory_64070001cd7be5174bf6cb1186885b53bfefdb2599edd30ca264edcf6e59b5c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33938:6:21","type":""}],"src":"33840:177:21"},{"body":{"nodeType":"YulBlock","src":"34169:220:21","statements":[{"nodeType":"YulAssignment","src":"34179:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34245:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"34250:2:21","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34186:58:21"},"nodeType":"YulFunctionCall","src":"34186:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34179:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34351:3:21"}],"functionName":{"name":"store_literal_in_memory_64070001cd7be5174bf6cb1186885b53bfefdb2599edd30ca264edcf6e59b5c6","nodeType":"YulIdentifier","src":"34262:88:21"},"nodeType":"YulFunctionCall","src":"34262:93:21"},"nodeType":"YulExpressionStatement","src":"34262:93:21"},{"nodeType":"YulAssignment","src":"34364:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34375:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"34380:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34371:3:21"},"nodeType":"YulFunctionCall","src":"34371:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34364:3:21"}]}]},"name":"abi_encode_t_stringliteral_64070001cd7be5174bf6cb1186885b53bfefdb2599edd30ca264edcf6e59b5c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34157:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34165:3:21","type":""}],"src":"34023:366:21"},{"body":{"nodeType":"YulBlock","src":"34566:248:21","statements":[{"nodeType":"YulAssignment","src":"34576:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34588:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34599:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34584:3:21"},"nodeType":"YulFunctionCall","src":"34584:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34576:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34623:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34634:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34619:3:21"},"nodeType":"YulFunctionCall","src":"34619:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34642:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"34648:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34638:3:21"},"nodeType":"YulFunctionCall","src":"34638:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34612:6:21"},"nodeType":"YulFunctionCall","src":"34612:47:21"},"nodeType":"YulExpressionStatement","src":"34612:47:21"},{"nodeType":"YulAssignment","src":"34668:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34802:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_64070001cd7be5174bf6cb1186885b53bfefdb2599edd30ca264edcf6e59b5c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34676:124:21"},"nodeType":"YulFunctionCall","src":"34676:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34668:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_64070001cd7be5174bf6cb1186885b53bfefdb2599edd30ca264edcf6e59b5c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34546:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34561:4:21","type":""}],"src":"34395:419:21"},{"body":{"nodeType":"YulBlock","src":"34926:114:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34948:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"34956:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34944:3:21"},"nodeType":"YulFunctionCall","src":"34944:14:21"},{"hexValue":"43616e6e6f74206c696b6520796f7572206f776e20636f6e747269627574696f","kind":"string","nodeType":"YulLiteral","src":"34960:34:21","type":"","value":"Cannot like your own contributio"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34937:6:21"},"nodeType":"YulFunctionCall","src":"34937:58:21"},"nodeType":"YulExpressionStatement","src":"34937:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35016:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"35024:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35012:3:21"},"nodeType":"YulFunctionCall","src":"35012:15:21"},{"hexValue":"6e","kind":"string","nodeType":"YulLiteral","src":"35029:3:21","type":"","value":"n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35005:6:21"},"nodeType":"YulFunctionCall","src":"35005:28:21"},"nodeType":"YulExpressionStatement","src":"35005:28:21"}]},"name":"store_literal_in_memory_9f9fb7b7e7c190c50712b6e3ca34698c7d207b60087eb7739ddab517eac2a1cc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34918:6:21","type":""}],"src":"34820:220:21"},{"body":{"nodeType":"YulBlock","src":"35192:220:21","statements":[{"nodeType":"YulAssignment","src":"35202:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35268:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"35273:2:21","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35209:58:21"},"nodeType":"YulFunctionCall","src":"35209:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35202:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35374:3:21"}],"functionName":{"name":"store_literal_in_memory_9f9fb7b7e7c190c50712b6e3ca34698c7d207b60087eb7739ddab517eac2a1cc","nodeType":"YulIdentifier","src":"35285:88:21"},"nodeType":"YulFunctionCall","src":"35285:93:21"},"nodeType":"YulExpressionStatement","src":"35285:93:21"},{"nodeType":"YulAssignment","src":"35387:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35398:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"35403:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35394:3:21"},"nodeType":"YulFunctionCall","src":"35394:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35387:3:21"}]}]},"name":"abi_encode_t_stringliteral_9f9fb7b7e7c190c50712b6e3ca34698c7d207b60087eb7739ddab517eac2a1cc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35180:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35188:3:21","type":""}],"src":"35046:366:21"},{"body":{"nodeType":"YulBlock","src":"35589:248:21","statements":[{"nodeType":"YulAssignment","src":"35599:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35611:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35622:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35607:3:21"},"nodeType":"YulFunctionCall","src":"35607:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35599:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35646:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35657:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35642:3:21"},"nodeType":"YulFunctionCall","src":"35642:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35665:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"35671:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35661:3:21"},"nodeType":"YulFunctionCall","src":"35661:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35635:6:21"},"nodeType":"YulFunctionCall","src":"35635:47:21"},"nodeType":"YulExpressionStatement","src":"35635:47:21"},{"nodeType":"YulAssignment","src":"35691:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35825:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_9f9fb7b7e7c190c50712b6e3ca34698c7d207b60087eb7739ddab517eac2a1cc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35699:124:21"},"nodeType":"YulFunctionCall","src":"35699:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35691:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9f9fb7b7e7c190c50712b6e3ca34698c7d207b60087eb7739ddab517eac2a1cc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35569:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35584:4:21","type":""}],"src":"35418:419:21"},{"body":{"nodeType":"YulBlock","src":"35957:34:21","statements":[{"nodeType":"YulAssignment","src":"35967:18:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"35982:3:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"35967:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35929:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"35934:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"35945:11:21","type":""}],"src":"35843:148:21"},{"body":{"nodeType":"YulBlock","src":"36107:280:21","statements":[{"nodeType":"YulVariableDeclaration","src":"36117:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36164:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"36131:32:21"},"nodeType":"YulFunctionCall","src":"36131:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"36121:6:21","type":""}]},{"nodeType":"YulAssignment","src":"36179:96:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36263:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"36268:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36186:76:21"},"nodeType":"YulFunctionCall","src":"36186:89:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36179:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36323:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"36330:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36319:3:21"},"nodeType":"YulFunctionCall","src":"36319:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"36337:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"36342:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"36284:34:21"},"nodeType":"YulFunctionCall","src":"36284:65:21"},"nodeType":"YulExpressionStatement","src":"36284:65:21"},{"nodeType":"YulAssignment","src":"36358:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36369:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"36374:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36365:3:21"},"nodeType":"YulFunctionCall","src":"36365:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36358:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36088:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36095:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36103:3:21","type":""}],"src":"35997:390:21"},{"body":{"nodeType":"YulBlock","src":"36577:251:21","statements":[{"nodeType":"YulAssignment","src":"36588:102:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36677:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"36686:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36595:81:21"},"nodeType":"YulFunctionCall","src":"36595:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36588:3:21"}]},{"nodeType":"YulAssignment","src":"36700:102:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36789:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"36798:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36707:81:21"},"nodeType":"YulFunctionCall","src":"36707:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36700:3:21"}]},{"nodeType":"YulAssignment","src":"36812:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"36819:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36812:3:21"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36548:3:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36554:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36562:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36573:3:21","type":""}],"src":"36393:435:21"},{"body":{"nodeType":"YulBlock","src":"36940:69:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36962:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"36970:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36958:3:21"},"nodeType":"YulFunctionCall","src":"36958:14:21"},{"hexValue":"41727469636c6520616c726561647920636f6d706c65746564","kind":"string","nodeType":"YulLiteral","src":"36974:27:21","type":"","value":"Article already completed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36951:6:21"},"nodeType":"YulFunctionCall","src":"36951:51:21"},"nodeType":"YulExpressionStatement","src":"36951:51:21"}]},"name":"store_literal_in_memory_1394d4b534d0dc7bf0a3afc76d97dbbcad41ddbfb1be0e236a6002070f3821d0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36932:6:21","type":""}],"src":"36834:175:21"},{"body":{"nodeType":"YulBlock","src":"37161:220:21","statements":[{"nodeType":"YulAssignment","src":"37171:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37237:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"37242:2:21","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37178:58:21"},"nodeType":"YulFunctionCall","src":"37178:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37171:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37343:3:21"}],"functionName":{"name":"store_literal_in_memory_1394d4b534d0dc7bf0a3afc76d97dbbcad41ddbfb1be0e236a6002070f3821d0","nodeType":"YulIdentifier","src":"37254:88:21"},"nodeType":"YulFunctionCall","src":"37254:93:21"},"nodeType":"YulExpressionStatement","src":"37254:93:21"},{"nodeType":"YulAssignment","src":"37356:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37367:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"37372:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37363:3:21"},"nodeType":"YulFunctionCall","src":"37363:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37356:3:21"}]}]},"name":"abi_encode_t_stringliteral_1394d4b534d0dc7bf0a3afc76d97dbbcad41ddbfb1be0e236a6002070f3821d0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37149:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37157:3:21","type":""}],"src":"37015:366:21"},{"body":{"nodeType":"YulBlock","src":"37558:248:21","statements":[{"nodeType":"YulAssignment","src":"37568:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37580:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"37591:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37576:3:21"},"nodeType":"YulFunctionCall","src":"37576:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37568:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37615:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"37626:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37611:3:21"},"nodeType":"YulFunctionCall","src":"37611:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37634:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"37640:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37630:3:21"},"nodeType":"YulFunctionCall","src":"37630:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37604:6:21"},"nodeType":"YulFunctionCall","src":"37604:47:21"},"nodeType":"YulExpressionStatement","src":"37604:47:21"},{"nodeType":"YulAssignment","src":"37660:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37794:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_1394d4b534d0dc7bf0a3afc76d97dbbcad41ddbfb1be0e236a6002070f3821d0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37668:124:21"},"nodeType":"YulFunctionCall","src":"37668:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37660:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_1394d4b534d0dc7bf0a3afc76d97dbbcad41ddbfb1be0e236a6002070f3821d0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37538:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37553:4:21","type":""}],"src":"37387:419:21"},{"body":{"nodeType":"YulBlock","src":"37918:72:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37940:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"37948:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37936:3:21"},"nodeType":"YulFunctionCall","src":"37936:14:21"},{"hexValue":"41727469636c6520686173206e6f20636f6e747269627574696f6e73","kind":"string","nodeType":"YulLiteral","src":"37952:30:21","type":"","value":"Article has no contributions"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37929:6:21"},"nodeType":"YulFunctionCall","src":"37929:54:21"},"nodeType":"YulExpressionStatement","src":"37929:54:21"}]},"name":"store_literal_in_memory_6b2a98265ef84b474bc9646c3d278cc98711afd3001de274b5b5af4a75c1f1fa","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37910:6:21","type":""}],"src":"37812:178:21"},{"body":{"nodeType":"YulBlock","src":"38142:220:21","statements":[{"nodeType":"YulAssignment","src":"38152:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38218:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"38223:2:21","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38159:58:21"},"nodeType":"YulFunctionCall","src":"38159:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38152:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38324:3:21"}],"functionName":{"name":"store_literal_in_memory_6b2a98265ef84b474bc9646c3d278cc98711afd3001de274b5b5af4a75c1f1fa","nodeType":"YulIdentifier","src":"38235:88:21"},"nodeType":"YulFunctionCall","src":"38235:93:21"},"nodeType":"YulExpressionStatement","src":"38235:93:21"},{"nodeType":"YulAssignment","src":"38337:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38348:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"38353:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38344:3:21"},"nodeType":"YulFunctionCall","src":"38344:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38337:3:21"}]}]},"name":"abi_encode_t_stringliteral_6b2a98265ef84b474bc9646c3d278cc98711afd3001de274b5b5af4a75c1f1fa_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38130:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38138:3:21","type":""}],"src":"37996:366:21"},{"body":{"nodeType":"YulBlock","src":"38539:248:21","statements":[{"nodeType":"YulAssignment","src":"38549:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38561:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38572:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38557:3:21"},"nodeType":"YulFunctionCall","src":"38557:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38549:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38596:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38607:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38592:3:21"},"nodeType":"YulFunctionCall","src":"38592:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38615:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"38621:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38611:3:21"},"nodeType":"YulFunctionCall","src":"38611:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38585:6:21"},"nodeType":"YulFunctionCall","src":"38585:47:21"},"nodeType":"YulExpressionStatement","src":"38585:47:21"},{"nodeType":"YulAssignment","src":"38641:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38775:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_6b2a98265ef84b474bc9646c3d278cc98711afd3001de274b5b5af4a75c1f1fa_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38649:124:21"},"nodeType":"YulFunctionCall","src":"38649:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38641:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_6b2a98265ef84b474bc9646c3d278cc98711afd3001de274b5b5af4a75c1f1fa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38519:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38534:4:21","type":""}],"src":"38368:419:21"},{"body":{"nodeType":"YulBlock","src":"38851:40:21","statements":[{"nodeType":"YulAssignment","src":"38862:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38878:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"38872:5:21"},"nodeType":"YulFunctionCall","src":"38872:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"38862:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38834:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"38844:6:21","type":""}],"src":"38793:98:21"},{"body":{"nodeType":"YulBlock","src":"38992:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39009:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"39014:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39002:6:21"},"nodeType":"YulFunctionCall","src":"39002:19:21"},"nodeType":"YulExpressionStatement","src":"39002:19:21"},{"nodeType":"YulAssignment","src":"39030:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39049:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"39054:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39045:3:21"},"nodeType":"YulFunctionCall","src":"39045:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"39030:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38964:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"38969:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"38980:11:21","type":""}],"src":"38897:168:21"},{"body":{"nodeType":"YulBlock","src":"39161:283:21","statements":[{"nodeType":"YulVariableDeclaration","src":"39171:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39217:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"39185:31:21"},"nodeType":"YulFunctionCall","src":"39185:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"39175:6:21","type":""}]},{"nodeType":"YulAssignment","src":"39232:77:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39297:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"39302:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39239:57:21"},"nodeType":"YulFunctionCall","src":"39239:70:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39232:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39357:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"39364:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39353:3:21"},"nodeType":"YulFunctionCall","src":"39353:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"39371:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"39376:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"39318:34:21"},"nodeType":"YulFunctionCall","src":"39318:65:21"},"nodeType":"YulExpressionStatement","src":"39318:65:21"},{"nodeType":"YulAssignment","src":"39392:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39403:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"39430:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"39408:21:21"},"nodeType":"YulFunctionCall","src":"39408:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39399:3:21"},"nodeType":"YulFunctionCall","src":"39399:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39392:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39142:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"39149:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39157:3:21","type":""}],"src":"39071:373:21"},{"body":{"nodeType":"YulBlock","src":"39650:440:21","statements":[{"nodeType":"YulAssignment","src":"39660:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39672:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"39683:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39668:3:21"},"nodeType":"YulFunctionCall","src":"39668:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39660:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39741:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39754:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"39765:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39750:3:21"},"nodeType":"YulFunctionCall","src":"39750:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"39697:43:21"},"nodeType":"YulFunctionCall","src":"39697:71:21"},"nodeType":"YulExpressionStatement","src":"39697:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"39822:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39835:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"39846:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39831:3:21"},"nodeType":"YulFunctionCall","src":"39831:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"39778:43:21"},"nodeType":"YulFunctionCall","src":"39778:72:21"},"nodeType":"YulExpressionStatement","src":"39778:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"39904:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39917:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"39928:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39913:3:21"},"nodeType":"YulFunctionCall","src":"39913:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"39860:43:21"},"nodeType":"YulFunctionCall","src":"39860:72:21"},"nodeType":"YulExpressionStatement","src":"39860:72:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39953:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"39964:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39949:3:21"},"nodeType":"YulFunctionCall","src":"39949:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39973:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"39979:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39969:3:21"},"nodeType":"YulFunctionCall","src":"39969:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39942:6:21"},"nodeType":"YulFunctionCall","src":"39942:48:21"},"nodeType":"YulExpressionStatement","src":"39942:48:21"},{"nodeType":"YulAssignment","src":"39999:84:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"40069:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"40078:4:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40007:61:21"},"nodeType":"YulFunctionCall","src":"40007:76:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39999:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39598:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"39610:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"39618:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39626:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39634:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39645:4:21","type":""}],"src":"39450:640:21"},{"body":{"nodeType":"YulBlock","src":"40158:79:21","statements":[{"nodeType":"YulAssignment","src":"40168:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"40183:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"40177:5:21"},"nodeType":"YulFunctionCall","src":"40177:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"40168:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40225:5:21"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"40199:25:21"},"nodeType":"YulFunctionCall","src":"40199:32:21"},"nodeType":"YulExpressionStatement","src":"40199:32:21"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"40136:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"40144:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"40152:5:21","type":""}],"src":"40096:141:21"},{"body":{"nodeType":"YulBlock","src":"40319:273:21","statements":[{"body":{"nodeType":"YulBlock","src":"40365:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"40367:77:21"},"nodeType":"YulFunctionCall","src":"40367:79:21"},"nodeType":"YulExpressionStatement","src":"40367:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"40340:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"40349:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40336:3:21"},"nodeType":"YulFunctionCall","src":"40336:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"40361:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"40332:3:21"},"nodeType":"YulFunctionCall","src":"40332:32:21"},"nodeType":"YulIf","src":"40329:119:21"},{"nodeType":"YulBlock","src":"40458:127:21","statements":[{"nodeType":"YulVariableDeclaration","src":"40473:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"40487:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"40477:6:21","type":""}]},{"nodeType":"YulAssignment","src":"40502:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40547:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"40558:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40543:3:21"},"nodeType":"YulFunctionCall","src":"40543:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"40567:7:21"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"40512:30:21"},"nodeType":"YulFunctionCall","src":"40512:63:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"40502:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40289:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"40300:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"40312:6:21","type":""}],"src":"40243:349:21"},{"body":{"nodeType":"YulBlock","src":"40626:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40643:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40646:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40636:6:21"},"nodeType":"YulFunctionCall","src":"40636:88:21"},"nodeType":"YulExpressionStatement","src":"40636:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40740:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"40743:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40733:6:21"},"nodeType":"YulFunctionCall","src":"40733:15:21"},"nodeType":"YulExpressionStatement","src":"40733:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40764:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40767:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"40757:6:21"},"nodeType":"YulFunctionCall","src":"40757:15:21"},"nodeType":"YulExpressionStatement","src":"40757:15:21"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"40598:180:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_uint256__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart , value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 352)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value10,  add(headStart, 320))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$877_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$877_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_318f2476c7a187ea609a6f60b5fe8031470a5935a58fd7a84564aa0d3e925432(memPtr) {\n\n        mstore(add(memPtr, 0), \"Article does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_318f2476c7a187ea609a6f60b5fe8031470a5935a58fd7a84564aa0d3e925432_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_318f2476c7a187ea609a6f60b5fe8031470a5935a58fd7a84564aa0d3e925432(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_318f2476c7a187ea609a6f60b5fe8031470a5935a58fd7a84564aa0d3e925432__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_318f2476c7a187ea609a6f60b5fe8031470a5935a58fd7a84564aa0d3e925432_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_549cb4a8c3e774ad0b20f76b2942a5cbca162f76ac34664dbd7b963e12b9d3c3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Article is completed\")\n\n    }\n\n    function abi_encode_t_stringliteral_549cb4a8c3e774ad0b20f76b2942a5cbca162f76ac34664dbd7b963e12b9d3c3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_549cb4a8c3e774ad0b20f76b2942a5cbca162f76ac34664dbd7b963e12b9d3c3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_549cb4a8c3e774ad0b20f76b2942a5cbca162f76ac34664dbd7b963e12b9d3c3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_549cb4a8c3e774ad0b20f76b2942a5cbca162f76ac34664dbd7b963e12b9d3c3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c871f1b7893184c0a61eff62af505af653a7d64957316c5dd8e38e77764f2392(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have already contributed to \")\n\n        mstore(add(memPtr, 32), \"this article\")\n\n    }\n\n    function abi_encode_t_stringliteral_c871f1b7893184c0a61eff62af505af653a7d64957316c5dd8e38e77764f2392_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_c871f1b7893184c0a61eff62af505af653a7d64957316c5dd8e38e77764f2392(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c871f1b7893184c0a61eff62af505af653a7d64957316c5dd8e38e77764f2392__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c871f1b7893184c0a61eff62af505af653a7d64957316c5dd8e38e77764f2392_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d8b9ca560d0edd639e2bd9185ac1236c99f01b71294011330912cf50a5bfbee4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Content too short\")\n\n    }\n\n    function abi_encode_t_stringliteral_d8b9ca560d0edd639e2bd9185ac1236c99f01b71294011330912cf50a5bfbee4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_d8b9ca560d0edd639e2bd9185ac1236c99f01b71294011330912cf50a5bfbee4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d8b9ca560d0edd639e2bd9185ac1236c99f01b71294011330912cf50a5bfbee4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d8b9ca560d0edd639e2bd9185ac1236c99f01b71294011330912cf50a5bfbee4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_23e270ac03cbb43a13b96ad46240f8c443bd3c1a0a4a872ab6e9183bce8a845a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Max contributors reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_23e270ac03cbb43a13b96ad46240f8c443bd3c1a0a4a872ab6e9183bce8a845a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_23e270ac03cbb43a13b96ad46240f8c443bd3c1a0a4a872ab6e9183bce8a845a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_23e270ac03cbb43a13b96ad46240f8c443bd3c1a0a4a872ab6e9183bce8a845a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_23e270ac03cbb43a13b96ad46240f8c443bd3c1a0a4a872ab6e9183bce8a845a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_8bc5c6f6c5528dc5ae3ac1cf9bf495637b9493da913183d40f293b3288430e6f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contribution does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_8bc5c6f6c5528dc5ae3ac1cf9bf495637b9493da913183d40f293b3288430e6f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_8bc5c6f6c5528dc5ae3ac1cf9bf495637b9493da913183d40f293b3288430e6f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8bc5c6f6c5528dc5ae3ac1cf9bf495637b9493da913183d40f293b3288430e6f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8bc5c6f6c5528dc5ae3ac1cf9bf495637b9493da913183d40f293b3288430e6f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contribution already approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fa31755f6fe7783c1a6928897a7807a2285ddb50a6ae60e544234eec87773c20_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_64070001cd7be5174bf6cb1186885b53bfefdb2599edd30ca264edcf6e59b5c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have already liked this\")\n\n    }\n\n    function abi_encode_t_stringliteral_64070001cd7be5174bf6cb1186885b53bfefdb2599edd30ca264edcf6e59b5c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_64070001cd7be5174bf6cb1186885b53bfefdb2599edd30ca264edcf6e59b5c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64070001cd7be5174bf6cb1186885b53bfefdb2599edd30ca264edcf6e59b5c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64070001cd7be5174bf6cb1186885b53bfefdb2599edd30ca264edcf6e59b5c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9f9fb7b7e7c190c50712b6e3ca34698c7d207b60087eb7739ddab517eac2a1cc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot like your own contributio\")\n\n        mstore(add(memPtr, 32), \"n\")\n\n    }\n\n    function abi_encode_t_stringliteral_9f9fb7b7e7c190c50712b6e3ca34698c7d207b60087eb7739ddab517eac2a1cc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9f9fb7b7e7c190c50712b6e3ca34698c7d207b60087eb7739ddab517eac2a1cc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9f9fb7b7e7c190c50712b6e3ca34698c7d207b60087eb7739ddab517eac2a1cc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9f9fb7b7e7c190c50712b6e3ca34698c7d207b60087eb7739ddab517eac2a1cc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_1394d4b534d0dc7bf0a3afc76d97dbbcad41ddbfb1be0e236a6002070f3821d0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Article already completed\")\n\n    }\n\n    function abi_encode_t_stringliteral_1394d4b534d0dc7bf0a3afc76d97dbbcad41ddbfb1be0e236a6002070f3821d0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_1394d4b534d0dc7bf0a3afc76d97dbbcad41ddbfb1be0e236a6002070f3821d0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1394d4b534d0dc7bf0a3afc76d97dbbcad41ddbfb1be0e236a6002070f3821d0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1394d4b534d0dc7bf0a3afc76d97dbbcad41ddbfb1be0e236a6002070f3821d0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6b2a98265ef84b474bc9646c3d278cc98711afd3001de274b5b5af4a75c1f1fa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Article has no contributions\")\n\n    }\n\n    function abi_encode_t_stringliteral_6b2a98265ef84b474bc9646c3d278cc98711afd3001de274b5b5af4a75c1f1fa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_6b2a98265ef84b474bc9646c3d278cc98711afd3001de274b5b5af4a75c1f1fa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6b2a98265ef84b474bc9646c3d278cc98711afd3001de274b5b5af4a75c1f1fa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6b2a98265ef84b474bc9646c3d278cc98711afd3001de274b5b5af4a75c1f1fa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A9A62A8 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE3E03DC0 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE3E03DC0 EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0xEDCFAFE6 EQ PUSH2 0x65F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x6B5 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0xD5DF1E1D EQ PUSH2 0x595 JUMPI DUP1 PUSH4 0xDDF556D0 EQ PUSH2 0x5B1 JUMPI DUP1 PUSH4 0xE36465A3 EQ PUSH2 0x5CF JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xB5B96AE0 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x549 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x8A9A62A8 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0x8FB7092C EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0x9178AF65 EQ PUSH2 0x4AF JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x315A095D GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x6FD91DA9 GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x6FD91DA9 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0x7331FA95 EQ PUSH2 0x415 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x315A095D EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x4FA650F1 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x38F JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0xEBF1D3D GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0xEBF1D3D EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x1CEE0700 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x30243834 EQ PUSH2 0x30B JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x27E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x2F2D JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x2F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x3020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x847 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x312D JUMP JUMPDEST PUSH2 0x863 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A2 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3197 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x321C JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x326F JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0xAB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x321C JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x33E4 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x104D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x326F JUMP JUMPDEST PUSH2 0x105F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x3440 JUMP JUMPDEST PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x413 PUSH2 0x137A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x312D JUMP JUMPDEST PUSH2 0x138E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45A SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x13BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x469 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x476 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x346D JUMP JUMPDEST PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x2F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x34AD JUMP JUMPDEST PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E7 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0x3020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x517 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x35A8 JUMP JUMPDEST PUSH2 0x18EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x533 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x346D JUMP JUMPDEST PUSH2 0x1905 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x2F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x563 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x3689 JUMP JUMPDEST PUSH2 0x1934 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x1959 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x3020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5AA SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x19C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B9 PUSH2 0x1B8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E4 SWAP2 SWAP1 PUSH2 0x3440 JUMP JUMPDEST PUSH2 0x1B96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x619 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x626 SWAP2 SWAP1 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x649 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x644 SWAP2 SWAP1 PUSH2 0x37EC JUMP JUMPDEST PUSH2 0x1C98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x656 SWAP2 SWAP1 PUSH2 0x2F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x679 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x690 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x382C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6AE SWAP2 SWAP1 PUSH2 0x3440 JUMP JUMPDEST PUSH2 0x1F4B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6BD PUSH2 0x1FD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CA SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x79E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x7AE JUMPI POP PUSH2 0x7AD DUP3 PUSH2 0x1FF7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x7C4 SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7F0 SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x83D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x812 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x83D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x820 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x852 DUP3 PUSH2 0x2061 JUMP JUMPDEST POP PUSH2 0x85C DUP3 PUSH2 0x20E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x875 DUP3 DUP3 PUSH2 0x870 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x212E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x8D8 SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x904 SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x951 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x926 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x951 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x934 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E9 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA06 DUP4 DUP4 PUSH2 0xA01 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x2140 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA7C JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA73 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xABB PUSH2 0x235A JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0xB01 PUSH2 0x1622 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP3 SWAP2 SWAP1 PUSH2 0x39FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB3E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB62 SWAP2 SWAP1 PUSH2 0x3A3B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB81 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1934 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP3 GT ISZERO PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC2 SWAP1 PUSH2 0x3AB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC26 SWAP1 PUSH2 0x3B20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC4 SWAP1 PUSH2 0x3BB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD SLOAD DUP2 MLOAD LT ISZERO PUSH2 0xD27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1E SWAP1 PUSH2 0x3C1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD LT PUSH2 0xD95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8C SWAP1 PUSH2 0x3C8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xDA8 SWAP1 PUSH2 0x3CD9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0xE8C SWAP2 SWAP1 PUSH2 0x3EC3 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFFE SWAP1 PUSH2 0x3CD9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 PUSH32 0x390F5F279DA0CE4AFC2046A3C1440C27A0637EA7261A5636E5518A2258BED269 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1058 DUP3 PUSH2 0x2061 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1067 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 GT ISZERO PUSH2 0x10AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A3 SWAP1 PUSH2 0x3FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1110 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1107 SWAP1 PUSH2 0x404D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP2 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x119B SWAP2 SWAP1 PUSH2 0x406D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x1283 JUMPI PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xB PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123E SWAP3 SWAP2 SWAP1 PUSH2 0x39FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x125D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1281 SWAP2 SWAP1 PUSH2 0x3A3B JUMP JUMPDEST POP JUMPDEST DUP3 PUSH32 0xBFE577B36F6862B4729CC4B1AB7DE20F7D8017E3B23552B685712E81741EFE95 DUP4 PUSH1 0x40 MLOAD PUSH2 0x12B3 SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1333 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132A SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1382 PUSH2 0x235A JUMP JUMPDEST PUSH2 0x138C PUSH1 0x0 PUSH2 0x23E1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 GT ISZERO PUSH2 0x1404 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FB SWAP1 PUSH2 0x3FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1499 SWAP1 PUSH2 0x40ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1546 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153D SWAP1 PUSH2 0x417F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x156D SWAP1 PUSH2 0x3CD9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x160FB30F1EE635C3CAA0E5D3A7884222081DCAFA69308E0D695E2332515AEC22 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1690 SWAP1 PUSH2 0x3CD9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1735 SWAP2 SWAP1 PUSH2 0x3EC3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x174B SWAP2 SWAP1 PUSH2 0x3EC3 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1761 SWAP2 SWAP1 PUSH2 0x3EC3 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0xE539A333A3CFD582C41B5F4712067EC24868A7A493C0AB524D9FCFDE5BB0D410 DUP10 PUSH1 0x40 MLOAD PUSH2 0x1848 SWAP2 SWAP1 PUSH2 0x3020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x186C SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1898 SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18E5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18BA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18E5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18C8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1901 PUSH2 0x18FA PUSH2 0x2126 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x24A7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x193F DUP5 DUP5 DUP5 PUSH2 0x980 JUMP JUMPDEST PUSH2 0x1953 PUSH2 0x194A PUSH2 0x2126 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x2616 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1964 DUP3 PUSH2 0x2061 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x196F PUSH2 0x27C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x198F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x19BA JUMP JUMPDEST DUP1 PUSH2 0x1999 DUP5 PUSH2 0x27DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19AA SWAP3 SWAP2 SWAP1 PUSH2 0x41DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CA PUSH2 0x235A JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 GT ISZERO PUSH2 0x1A0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A06 SWAP1 PUSH2 0x3AB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6A SWAP1 PUSH2 0x424B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD GT PUSH2 0x1ACC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AC3 SWAP1 PUSH2 0x42B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1B3B PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x28AC JUMP JUMPDEST DUP1 PUSH32 0xCECD5D5DF52F22750A7B838A07823685059F55F29D937091BB81FF96A6612D8D PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1B81 SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1C21 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1C0D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1C8C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1C78 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1D55 SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D81 SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DCE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DA3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DCE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1DB1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1DE3 SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E0F SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E5C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E31 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E5C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E3F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1E71 SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E9D SWAP1 PUSH2 0x3995 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1EEA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EBF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1EEA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1ECD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x9 ADD SLOAD SWAP1 DUP1 PUSH1 0xA ADD SLOAD SWAP1 POP DUP12 JUMP JUMPDEST PUSH2 0x1F53 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FC5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FBC SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FCE DUP2 PUSH2 0x23E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x206D DUP4 PUSH2 0x28CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20E0 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20D7 SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x213B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2907 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x214C DUP5 PUSH2 0x28CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x218E JUMPI PUSH2 0x218D DUP2 DUP5 DUP7 PUSH2 0x2ACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x221F JUMPI PUSH2 0x21D0 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x2907 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x22A2 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2362 PUSH2 0x2126 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2380 PUSH2 0x1622 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23DF JUMPI PUSH2 0x23A3 PUSH2 0x2126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23D6 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2518 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250F SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2609 SWAP2 SWAP1 PUSH2 0x2F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x27C0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2675 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x432C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x26B1 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26AE SWAP2 SWAP1 PUSH2 0x438D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2735 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x26E1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x26E6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x272D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2724 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x27BE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27B5 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x27ED DUP5 PUSH2 0x2B90 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x280C JUMPI PUSH2 0x280B PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x283E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x28A1 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2895 JUMPI PUSH2 0x2894 PUSH2 0x43BA JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x284C JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28C6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2CE3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2940 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2A74 JUMPI PUSH1 0x0 PUSH2 0x2950 DUP5 PUSH2 0x2061 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x29BB JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x29CE JUMPI POP PUSH2 0x29CC DUP2 DUP5 PUSH2 0x1C98 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2A10 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A07 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2A72 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2AD7 DUP4 DUP4 DUP4 PUSH2 0x2D07 JUMP JUMPDEST PUSH2 0x2B8B JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B4C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B43 SWAP2 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B82 SWAP3 SWAP2 SWAP1 PUSH2 0x39FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x2BEE JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x2BE4 JUMPI PUSH2 0x2BE3 PUSH2 0x43BA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2C2B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x2C21 JUMPI PUSH2 0x2C20 PUSH2 0x43BA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x2C5A JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x2C50 JUMPI PUSH2 0x2C4F PUSH2 0x43BA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x2C83 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2C79 JUMPI PUSH2 0x2C78 PUSH2 0x43BA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x2CA8 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x2C9E JUMPI PUSH2 0x2C9D PUSH2 0x43BA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2CCB JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x2CC1 JUMPI PUSH2 0x2CC0 PUSH2 0x43BA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2CDA JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CED DUP4 DUP4 PUSH2 0x2DC8 JUMP JUMPDEST PUSH2 0x2D02 PUSH2 0x2CF8 PUSH2 0x2126 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x2616 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2DBF JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2D80 JUMPI POP PUSH2 0x2D7F DUP5 DUP5 PUSH2 0x1C98 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2DBE JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DA6 DUP4 PUSH2 0x20E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2E3A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E31 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E48 DUP4 DUP4 PUSH1 0x0 PUSH2 0x2140 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EBC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EB3 SWAP2 SWAP1 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F0A DUP2 PUSH2 0x2ED5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F27 DUP2 PUSH2 0x2F01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F43 JUMPI PUSH2 0x2F42 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F51 DUP5 DUP3 DUP6 ADD PUSH2 0x2F18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F6F DUP2 PUSH2 0x2F5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F8A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2FCA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FAF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FF2 DUP3 PUSH2 0x2F90 JUMP JUMPDEST PUSH2 0x2FFC DUP2 DUP6 PUSH2 0x2F9B JUMP JUMPDEST SWAP4 POP PUSH2 0x300C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FAC JUMP JUMPDEST PUSH2 0x3015 DUP2 PUSH2 0x2FD6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x303A DUP2 DUP5 PUSH2 0x2FE7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3055 DUP2 PUSH2 0x3042 JUMP JUMPDEST DUP2 EQ PUSH2 0x3060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3072 DUP2 PUSH2 0x304C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x308E JUMPI PUSH2 0x308D PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x309C DUP5 DUP3 DUP6 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30D0 DUP3 PUSH2 0x30A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30E0 DUP2 PUSH2 0x30C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x310A DUP2 PUSH2 0x30C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x3115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3127 DUP2 PUSH2 0x3101 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3144 JUMPI PUSH2 0x3143 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3152 DUP6 DUP3 DUP7 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3163 DUP6 DUP3 DUP7 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3176 DUP2 PUSH2 0x3042 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3191 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x316D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x31AD PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x31BA PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x31C7 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x30D7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x31D9 DUP2 DUP9 PUSH2 0x2FE7 JUMP JUMPDEST SWAP1 POP PUSH2 0x31E8 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x31F5 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x3202 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x320F PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x2F66 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3235 JUMPI PUSH2 0x3234 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3243 DUP7 DUP3 DUP8 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3254 DUP7 DUP3 DUP8 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3265 DUP7 DUP3 DUP8 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3286 JUMPI PUSH2 0x3285 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3294 DUP6 DUP3 DUP7 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x32A5 DUP6 DUP3 DUP7 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x32F1 DUP3 PUSH2 0x2FD6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3310 JUMPI PUSH2 0x330F PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3323 PUSH2 0x2EC1 JUMP JUMPDEST SWAP1 POP PUSH2 0x332F DUP3 DUP3 PUSH2 0x32E8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x334F JUMPI PUSH2 0x334E PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH2 0x3358 DUP3 PUSH2 0x2FD6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3387 PUSH2 0x3382 DUP5 PUSH2 0x3334 JUMP JUMPDEST PUSH2 0x3319 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x33A3 JUMPI PUSH2 0x33A2 PUSH2 0x32B4 JUMP JUMPDEST JUMPDEST PUSH2 0x33AE DUP5 DUP3 DUP6 PUSH2 0x3365 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x33CB JUMPI PUSH2 0x33CA PUSH2 0x32AF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x33DB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3374 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33FB JUMPI PUSH2 0x33FA PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3409 DUP6 DUP3 DUP7 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x342A JUMPI PUSH2 0x3429 PUSH2 0x2ED0 JUMP JUMPDEST JUMPDEST PUSH2 0x3436 DUP6 DUP3 DUP7 ADD PUSH2 0x33B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3456 JUMPI PUSH2 0x3455 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3464 DUP5 DUP3 DUP6 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3484 JUMPI PUSH2 0x3483 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3492 DUP6 DUP3 DUP7 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x34A3 DUP6 DUP3 DUP7 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x34C9 JUMPI PUSH2 0x34C8 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34E7 JUMPI PUSH2 0x34E6 PUSH2 0x2ED0 JUMP JUMPDEST JUMPDEST PUSH2 0x34F3 DUP9 DUP3 DUP10 ADD PUSH2 0x33B6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3514 JUMPI PUSH2 0x3513 PUSH2 0x2ED0 JUMP JUMPDEST JUMPDEST PUSH2 0x3520 DUP9 DUP3 DUP10 ADD PUSH2 0x33B6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3541 JUMPI PUSH2 0x3540 PUSH2 0x2ED0 JUMP JUMPDEST JUMPDEST PUSH2 0x354D DUP9 DUP3 DUP10 ADD PUSH2 0x33B6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x355E DUP9 DUP3 DUP10 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x356F DUP9 DUP3 DUP10 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x3585 DUP2 PUSH2 0x2F5A JUMP JUMPDEST DUP2 EQ PUSH2 0x3590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x35A2 DUP2 PUSH2 0x357C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x35BF JUMPI PUSH2 0x35BE PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35CD DUP6 DUP3 DUP7 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x35DE DUP6 DUP3 DUP7 ADD PUSH2 0x3593 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3603 JUMPI PUSH2 0x3602 PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH2 0x360C DUP3 PUSH2 0x2FD6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x362C PUSH2 0x3627 DUP5 PUSH2 0x35E8 JUMP JUMPDEST PUSH2 0x3319 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3648 JUMPI PUSH2 0x3647 PUSH2 0x32B4 JUMP JUMPDEST JUMPDEST PUSH2 0x3653 DUP5 DUP3 DUP6 PUSH2 0x3365 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3670 JUMPI PUSH2 0x366F PUSH2 0x32AF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3680 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3619 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x36A3 JUMPI PUSH2 0x36A2 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36B1 DUP8 DUP3 DUP9 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x36C2 DUP8 DUP3 DUP9 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x36D3 DUP8 DUP3 DUP9 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36F4 JUMPI PUSH2 0x36F3 PUSH2 0x2ED0 JUMP JUMPDEST JUMPDEST PUSH2 0x3700 DUP8 DUP3 DUP9 ADD PUSH2 0x365B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3741 DUP2 PUSH2 0x3042 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3753 DUP4 DUP4 PUSH2 0x3738 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3777 DUP3 PUSH2 0x370C JUMP JUMPDEST PUSH2 0x3781 DUP2 DUP6 PUSH2 0x3717 JUMP JUMPDEST SWAP4 POP PUSH2 0x378C DUP4 PUSH2 0x3728 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x37BD JUMPI DUP2 MLOAD PUSH2 0x37A4 DUP9 DUP3 PUSH2 0x3747 JUMP JUMPDEST SWAP8 POP PUSH2 0x37AF DUP4 PUSH2 0x375F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3790 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37E4 DUP2 DUP5 PUSH2 0x376C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3803 JUMPI PUSH2 0x3802 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3811 DUP6 DUP3 DUP7 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3822 DUP6 DUP3 DUP7 ADD PUSH2 0x3118 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x3842 PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x316D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3854 DUP2 DUP14 PUSH2 0x2FE7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3868 DUP2 DUP13 PUSH2 0x2FE7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x387C DUP2 DUP12 PUSH2 0x2FE7 JUMP JUMPDEST SWAP1 POP PUSH2 0x388B PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x30D7 JUMP JUMPDEST PUSH2 0x3898 PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x38A5 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x38B2 PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x38C0 PUSH2 0x100 DUP4 ADD DUP7 PUSH2 0x2F66 JUMP JUMPDEST PUSH2 0x38CE PUSH2 0x120 DUP4 ADD DUP6 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x38DC PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x316D JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3911 PUSH2 0x390C PUSH2 0x3907 DUP5 PUSH2 0x30A5 JUMP JUMPDEST PUSH2 0x38EC JUMP JUMPDEST PUSH2 0x30A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3923 DUP3 PUSH2 0x38F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3935 DUP3 PUSH2 0x3918 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3945 DUP2 PUSH2 0x392A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3960 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x393C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x39AD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x39C0 JUMPI PUSH2 0x39BF PUSH2 0x3966 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x39DB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x30D7 JUMP JUMPDEST PUSH2 0x39E8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x39F5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x30D7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A12 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x30D7 JUMP JUMPDEST PUSH2 0x3A1F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x316D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3A35 DUP2 PUSH2 0x357C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A51 JUMPI PUSH2 0x3A50 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A5F DUP5 DUP3 DUP6 ADD PUSH2 0x3A26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41727469636C6520646F6573206E6F7420657869737400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A9E PUSH1 0x16 DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x3AA9 DUP3 PUSH2 0x3A68 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ACD DUP2 PUSH2 0x3A91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41727469636C6520697320636F6D706C65746564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B0A PUSH1 0x14 DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x3B15 DUP3 PUSH2 0x3AD4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B39 DUP2 PUSH2 0x3AFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F75206861766520616C726561647920636F6E747269627574656420746F20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746869732061727469636C650000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B9C PUSH1 0x2C DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x3BA7 DUP3 PUSH2 0x3B40 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BCB DUP2 PUSH2 0x3B8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E74656E7420746F6F2073686F7274000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C08 PUSH1 0x11 DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x3C13 DUP3 PUSH2 0x3BD2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C37 DUP2 PUSH2 0x3BFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D617820636F6E7472696275746F727320726561636865640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C74 PUSH1 0x18 DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x3C7F DUP3 PUSH2 0x3C3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CA3 DUP2 PUSH2 0x3C67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3CE4 DUP3 PUSH2 0x3042 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3D16 JUMPI PUSH2 0x3D15 PUSH2 0x3CAA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3D83 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3D46 JUMP JUMPDEST PUSH2 0x3D8D DUP7 DUP4 PUSH2 0x3D46 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DC0 PUSH2 0x3DBB PUSH2 0x3DB6 DUP5 PUSH2 0x3042 JUMP JUMPDEST PUSH2 0x38EC JUMP JUMPDEST PUSH2 0x3042 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DDA DUP4 PUSH2 0x3DA5 JUMP JUMPDEST PUSH2 0x3DEE PUSH2 0x3DE6 DUP3 PUSH2 0x3DC7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3D53 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3E03 PUSH2 0x3DF6 JUMP JUMPDEST PUSH2 0x3E0E DUP2 DUP5 DUP5 PUSH2 0x3DD1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3E32 JUMPI PUSH2 0x3E27 PUSH1 0x0 DUP3 PUSH2 0x3DFB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3E14 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3E77 JUMPI PUSH2 0x3E48 DUP2 PUSH2 0x3D21 JUMP JUMPDEST PUSH2 0x3E51 DUP5 PUSH2 0x3D36 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3E60 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3E74 PUSH2 0x3E6C DUP6 PUSH2 0x3D36 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3E13 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E9A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3E7C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EB3 DUP4 DUP4 PUSH2 0x3E89 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3ECC DUP3 PUSH2 0x2F90 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EE5 JUMPI PUSH2 0x3EE4 PUSH2 0x32B9 JUMP JUMPDEST JUMPDEST PUSH2 0x3EEF DUP3 SLOAD PUSH2 0x3995 JUMP JUMPDEST PUSH2 0x3EFA DUP3 DUP3 DUP6 PUSH2 0x3E36 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3F2D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3F1B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3F25 DUP6 DUP3 PUSH2 0x3EA7 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3F8D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3F3B DUP7 PUSH2 0x3D21 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3F63 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F3E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3F80 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3F7C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3E89 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x436F6E747269627574696F6E20646F6573206E6F742065786973740000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FCB PUSH1 0x1B DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x3FD6 DUP3 PUSH2 0x3F95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FFA DUP2 PUSH2 0x3FBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E747269627574696F6E20616C726561647920617070726F766564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4037 PUSH1 0x1D DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x4042 DUP3 PUSH2 0x4001 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4066 DUP2 PUSH2 0x402A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4078 DUP3 PUSH2 0x3042 JUMP JUMPDEST SWAP2 POP PUSH2 0x4083 DUP4 PUSH2 0x3042 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x409B JUMPI PUSH2 0x409A PUSH2 0x3CAA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206861766520616C7265616479206C696B656420746869730000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D7 PUSH1 0x1B DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x40E2 DUP3 PUSH2 0x40A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4106 DUP2 PUSH2 0x40CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206C696B6520796F7572206F776E20636F6E747269627574696F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4169 PUSH1 0x21 DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x4174 DUP3 PUSH2 0x410D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4198 DUP2 PUSH2 0x415C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41B5 DUP3 PUSH2 0x2F90 JUMP JUMPDEST PUSH2 0x41BF DUP2 DUP6 PUSH2 0x419F JUMP JUMPDEST SWAP4 POP PUSH2 0x41CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FAC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E7 DUP3 DUP6 PUSH2 0x41AA JUMP JUMPDEST SWAP2 POP PUSH2 0x41F3 DUP3 DUP5 PUSH2 0x41AA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x41727469636C6520616C726561647920636F6D706C6574656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4235 PUSH1 0x19 DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x4240 DUP3 PUSH2 0x41FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4264 DUP2 PUSH2 0x4228 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41727469636C6520686173206E6F20636F6E747269627574696F6E7300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42A1 PUSH1 0x1C DUP4 PUSH2 0x2F9B JUMP JUMPDEST SWAP2 POP PUSH2 0x42AC DUP3 PUSH2 0x426B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42D0 DUP2 PUSH2 0x4294 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42FE DUP3 PUSH2 0x42D7 JUMP JUMPDEST PUSH2 0x4308 DUP2 DUP6 PUSH2 0x42E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x4318 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FAC JUMP JUMPDEST PUSH2 0x4321 DUP2 PUSH2 0x2FD6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4341 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x30D7 JUMP JUMPDEST PUSH2 0x434E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x30D7 JUMP JUMPDEST PUSH2 0x435B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x316D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x436D DUP2 DUP5 PUSH2 0x42F3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4387 DUP2 PUSH2 0x2F01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43A3 JUMPI PUSH2 0x43A2 PUSH2 0x2ECB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43B1 DUP5 DUP3 DUP6 ADD PUSH2 0x4378 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS SWAP13 BASEFEE 0x4F SWAP5 0xDB 0xD3 PUSH1 0xE2 DUP6 0xB6 DIV MOD 0x27 PUSH18 0xFB5F568B342A4E511362B83FE341C7E5B764 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"295:7345:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:300:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2364:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3496:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3322:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7212:97:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1164:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;4142:578:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1224:57:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7520:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4786:132:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3355:1349:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2184:118:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5348:786:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1919:208:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1322:54:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4742:542;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1525:60:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2433:885;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2517:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3717:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1411:66:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4984:233:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2676:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6184:582:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7363:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7027:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6823:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3927:153:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1114:43:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1659:25:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1560:300:5;1662:4;1712:25;1697:40;;;:11;:40;;;;:104;;;;1768:33;1753:48;;;:11;:48;;;;1697:104;:156;;;;1817:36;1841:11;1817:23;:36::i;:::-;1697:156;1678:175;;1560:300;;;:::o;2364:89::-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;;3622:21;3635:7;3622:12;:21::i;:::-;3615:28;;3496:154;;;:::o;3322:113::-;3393:35;3402:2;3406:7;3415:12;:10;:12::i;:::-;3393:8;:35::i;:::-;3322:113;;:::o;7212:97:19:-;7263:7;7290:11;;7283:18;;7212:97;:::o;1164:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4142:578:5:-;4250:1;4236:16;;:2;:16;;;4232:87;;4305:1;4275:33;;;;;;;;;;;:::i;:::-;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;4582:12;:10;:12::i;:::-;4561:7;:34::i;:::-;4537:58;;4626:4;4609:21;;:13;:21;;;4605:109;;4674:4;4680:7;4689:13;4653:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4605:109;4222:498;4142:578;;;:::o;1224:57:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7520:117::-;1531:13:0;:11;:13::i;:::-;7591:11:19::1;;;;;;;;;;;:20;;;7612:7;:5;:7::i;:::-;7621;7591:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7520:117:::0;:::o;4786:132:5:-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;3355:1349:19:-;3466:11;;3452:10;:25;;3444:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3524:8;:20;3533:10;3524:20;;;;;;;;;;;:32;;;;;;;;;;;;3523:33;3515:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3601:14;:26;3616:10;3601:26;;;;;;;;;;;:38;3628:10;3601:38;;;;;;;;;;;;;;;;;;;;;;;;;3600:39;3592:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;3733:8;:20;3742:10;3733:20;;;;;;;;;;;:42;;;3713:8;3707:22;:68;;3699:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;3858:8;:20;3867:10;3858:20;;;;;;;;;;;:36;;;3816:8;:20;3825:10;3816:20;;;;;;;;;;;:39;;;:78;3808:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;3944:16;;:18;;;;;;;;;:::i;:::-;;;;;;3973:25;4001:16;;3973:44;;4073:288;;;;;;;;4105:17;4073:288;;;;4148:10;4073:288;;;;4186:10;4073:288;;;;;;4220:8;4073:288;;;;4254:15;4073:288;;;;4291:1;4073:288;;;;4316:1;4073:288;;;;4344:5;4073:288;;;;;4038:13;:32;4052:17;4038:32;;;;;;;;;;;:323;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4382:20;:32;4403:10;4382:32;;;;;;;;;;;4420:17;4382:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4449:17;:29;4467:10;4449:29;;;;;;;;;;;;;;;4484:17;4449:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4554:4;4513:14;:26;4528:10;4513:26;;;;;;;;;;;:38;4540:10;4513:38;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4569:8;:20;4578:10;4569:20;;;;;;;;;;;:39;;;:41;;;;;;;;;:::i;:::-;;;;;;4685:10;4636:60;;4673:10;4654:17;4636:60;;;;;;;;;;3433:1271;3355:1349;;:::o;2184:118:5:-;2247:7;2273:22;2287:7;2273:13;:22::i;:::-;2266:29;;2184:118;;;:::o;5348:786:19:-;1531:13:0;:11;:13::i;:::-;5476:16:19::1;;5457:15;:35;;5449:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;5544:13;:30;5558:15;5544:30;;;;;;;;;;;:41;;;;;;;;;;;;5543:42;5535:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;5684:4;5640:13;:30;5654:15;5640:30;;;;;;;;;;;:41;;;:48;;;;;;;;;;;;;;;;;;5740:7;5699:13;:30;5713:15;5699:30;;;;;;;;;;;:38;;:48;;;;5768:17;5788:13;:30;5802:15;5788:30;;;;;;;;;;;:40;;;5768:60;;5875:7;5839:8;:19;5848:9;5839:19;;;;;;;;;;;:32;;;:43;;;;;;;:::i;:::-;;;;;;;;5952:1;5942:7;:11;5938:117;;;5970:11;;;;;;;;;;;:20;;;5991:13;:30;6005:15;5991:30;;;;;;;;;;;:42;;;;;;;;;;;;6035:7;5970:73;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5938:117;6101:15;6080:46;6118:7;6080:46;;;;;;:::i;:::-;;;;;;;;5438:696;5348:786:::0;;:::o;1919:208:5:-;1982:7;2022:1;2005:19;;:5;:19;;;2001:87;;2074:1;2047:30;;;;;;;;;;;:::i;:::-;;;;;;;;2001:87;2104:9;:16;2114:5;2104:16;;;;;;;;;;;;;;;;2097:23;;1919:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1322:54:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4742:542::-;4840:16;;4821:15;:35;;4813:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;4908:8;:25;4917:15;4908:25;;;;;;;;;;;:37;4934:10;4908:37;;;;;;;;;;;;;;;;;;;;;;;;;4907:38;4899:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;5042:10;4996:56;;:13;:30;5010:15;4996:30;;;;;;;;;;;:42;;;;;;;;;;;;:56;;;4988:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;5111:13;:30;5125:15;5111:30;;;;;;;;;;;:36;;;:38;;;;;;;;;:::i;:::-;;;;;;5200:4;5160:8;:25;5169:15;5160:25;;;;;;;;;;;:37;5186:10;5160:37;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;5265:10;5230:46;;5248:15;5230:46;;;;;;;;;;4742:542;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1525:60:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2433:885::-;2655:7;2675:11;;:13;;;;;;;;;:::i;:::-;;;;;;2699:20;2722:11;;2699:34;;2779:427;;;;;;;;2806:12;2779:427;;;;2840:6;2779:427;;;;2873:11;2779:427;;;;2906:6;2779:427;;;;2936:10;2779:427;;;;;;2972:15;2779:427;;;;3022:1;2779:427;;;;3052:1;2779:427;;;;3081:5;2779:427;;;;;;3124:22;2779:427;;;;3178:16;2779:427;;;2754:8;:22;2763:12;2754:22;;;;;;;;;;;:452;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3261:10;3232:48;;3247:12;3232:48;3273:6;3232:48;;;;;;:::i;:::-;;;;;;;;3298:12;3291:19;;;2433:885;;;;;;;:::o;2517:93:5:-;2564:13;2596:7;2589:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:93;:::o;3717:144::-;3802:52;3821:12;:10;:12::i;:::-;3835:8;3845;3802:18;:52::i;:::-;3717:144;;:::o;1411:66:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4984:233:5:-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;5172:12;:10;:12::i;:::-;5186:4;5192:2;5196:7;5205:4;5138:33;:72::i;:::-;4984:233;;;;:::o;2676:255::-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;;;2676:255;;;:::o;6184:582:19:-;1531:13:0;:11;:13::i;:::-;6281:11:19::1;;6267:10;:25;;6259:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;6339:8;:20;6348:10;6339:20;;;;;;;;;;;:32;;;;;;;;;;;;6338:33;6330:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;6462:1;6420:8;:20;6429:10;6420:20;;;;;;;;;;;:39;;;:43;6412:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;6552:4;6517:8;:20;6526:10;6517:20;;;;;;;;;;;:32;;;:39;;;;;;;;;;;;;;;;;;6618:51;6628:8;:20;6637:10;6628:20;;;;;;;;;;;:28;;;;;;;;;;;;6658:10;6618:9;:51::i;:::-;6712:10;6695:63;6724:8;:20;6733:10;6724:20;;;;;;;;;;;:33;;;6695:63;;;;;;:::i;:::-;;;;;;;;6184:582:::0;:::o;7363:107::-;7419:7;7446:16;;7439:23;;7363:107;:::o;7027:136::-;7095:16;7131:17;:24;7149:5;7131:24;;;;;;;;;;;;;;;7124:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7027:136;;;:::o;6823:152::-;6899:16;6935:20;:32;6956:10;6935:32;;;;;;;;;;;6928:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6823:152;;;:::o;3927:153:5:-;4015:4;4038:18;:25;4057:5;4038:25;;;;;;;;;;;;;;;:35;4064:8;4038:35;;;;;;;;;;;;;;;;;;;;;;;;;4031:42;;3927:153;;;;:::o;1114:43:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1659:25:19:-;;;;;;;;;;;;;:::o;763:146:14:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;16212:241:5:-;16275:7;16294:13;16310:17;16319:7;16310:8;:17::i;:::-;16294:33;;16358:1;16341:19;;:5;:19;;;16337:88;;16406:7;16383:31;;;;;;;;;;;:::i;:::-;;;;;;;;16337:88;16441:5;16434:12;;;16212:241;;;:::o;5963:127::-;6033:7;6059:15;:24;6075:7;6059:24;;;;;;;;;;;;;;;;;;;;;6052:31;;5963:127;;;:::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;14492:120:5:-;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;:::-;14492:120;;;:::o;8861:795::-;8947:7;8966:12;8981:17;8990:7;8981:8;:17::i;:::-;8966:32;;9074:1;9058:18;;:4;:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;9054:86;9200:1;9184:18;;:4;:18;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;9410:1;9391:9;:15;9401:4;9391:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9180:256;9464:1;9450:16;;:2;:16;;;9446:107;;9527:1;9510:9;:13;9520:2;9510:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9446:107;9582:2;9563:7;:16;9571:7;9563:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9619:7;9615:2;9600:27;;9609:4;9600:27;;;;;;;;;;;;9645:4;9638:11;;;8861:795;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15665:312:5:-;15792:1;15772:22;;:8;:22;;;15768:91;;15839:8;15817:31;;;;;;;;;;;:::i;:::-;;;;;;;;15768:91;15906:8;15868:18;:25;15887:5;15868:25;;;;;;;;;;;;;;;:35;15894:8;15868:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15951:8;15929:41;;15944:5;15929:41;;;15961:8;15929:41;;;;;;:::i;:::-;;;;;;;;15665:312;;;:::o;993:924:9:-;1190:1;1173:2;:14;;;:18;1169:742;;;1227:2;1211:36;;;1248:8;1258:4;1264:7;1273:4;1211:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1207:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:1;1568:6;:13;:18;1564:323;;1708:2;1672:39;;;;;;;;;;;:::i;:::-;;;;;;;;1564:323;1839:6;1833:13;1824:6;1820:2;1816:15;1809:38;1207:694;1335:41;;;1325:51;;;:6;:51;;;;1321:182;;1481:2;1445:39;;;;;;;;;;;:::i;:::-;;;;;;;;1321:182;1279:238;1169:742;993:924;;;;;:::o;3173:92:5:-;3224:13;3249:9;;;;;;;;;;;;;;3173:92;:::o;1308:632:13:-;1364:13;1413:14;1450:1;1430:17;1441:5;1430:10;:17::i;:::-;:21;1413:38;;1465:20;1499:6;1488:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1465:41;;1520:11;1615:6;1611:2;1607:15;1599:6;1595:28;1588:35;;1650:247;1657:4;1650:247;;;1681:5;;;;;;;;1785:10;1780:2;1773:5;1769:14;1764:32;1759:3;1751:46;1841:2;1832:11;;;;;;:::i;:::-;;;;;1874:1;1865:5;:10;1650:247;1861:21;1650:247;1917:6;1910:13;;;;;1308:632;;;:::o;10656:100:5:-;10723:26;10733:2;10737:7;10723:26;;;;;;;;;;;;:9;:26::i;:::-;10656:100;;:::o;5732:115::-;5798:7;5824;:16;5832:7;5824:16;;;;;;;;;;;;;;;;;;;;;5817:23;;5732:115;;;:::o;14794:662::-;14954:9;:31;;;;14983:1;14967:18;;:4;:18;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;;15183:1;15167:18;;:4;:18;;;;:35;;;;;15198:4;15189:13;;:5;:13;;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15285:4;15263:27;;;;;;;;;;;:::i;:::-;;;;;;;;15163:142;15323:9;15319:81;;;15377:7;15373:2;15357:28;;15366:5;15357:28;;;;;;;;;;;;15319:81;14987:423;14950:460;15447:2;15420:15;:24;15436:7;15420:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14794:662;;;;:::o;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;7292:1;7275:19;;:5;:19;;;7271:186;;7344:7;7321:31;;;;;;;;;;;:::i;:::-;;;;;;;;7271:186;7425:7;7434;7398:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7212:255;7105:368;;;:::o;29154:916:16:-;29207:7;29226:14;29243:1;29226:18;;29291:8;29282:5;:17;29278:103;;29328:8;29319:17;;;;;;:::i;:::-;;;;;29364:2;29354:12;;;;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;;;;:::i;:::-;;;;;29480:2;29470:12;;;;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;;;;:::i;:::-;;;;;29596:2;29586:12;;;;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;;;;:::i;:::-;;;;;29710:1;29700:11;;;;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;;;;:::i;:::-;;;;;29823:1;29813:11;;;;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;;;;:::i;:::-;;;;;29936:1;29926:11;;;;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;;;;29965:66;30057:6;30050:13;;;29154:916;;;:::o;10977:207:5:-;11071:18;11077:2;11081:7;11071:5;:18::i;:::-;11099:78;11133:12;:10;:12::i;:::-;11155:1;11159:2;11163:7;11172:4;11099:33;:78::i;:::-;10977:207;;;:::o;6401:272::-;6504:4;6558:1;6539:21;;:7;:21;;;;:127;;;;;6586:7;6577:16;;:5;:16;;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:52;:88;;;;6658:7;6633:32;;:21;6646:7;6633:12;:21::i;:::-;:32;;;6577:88;6539:127;6520:146;;6401:272;;;;;:::o;9978:327::-;10059:1;10045:16;;:2;:16;;;10041:87;;10114:1;10084:33;;;;;;;;;;;:::i;:::-;;;;;;;;10041:87;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;;10232:1;10207:27;;:13;:27;;;10203:96;;10285:1;10257:31;;;;;;;;;;;:::i;:::-;;;;;;;;10203:96;10031:274;9978:327;;:::o;7:75:21:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:1076::-;5545:4;5583:3;5572:9;5568:19;5560:27;;5597:71;5665:1;5654:9;5650:17;5641:6;5597:71;:::i;:::-;5678:72;5746:2;5735:9;5731:18;5722:6;5678:72;:::i;:::-;5760;5828:2;5817:9;5813:18;5804:6;5760:72;:::i;:::-;5879:9;5873:4;5869:20;5864:2;5853:9;5849:18;5842:48;5907:78;5980:4;5971:6;5907:78;:::i;:::-;5899:86;;5995:73;6063:3;6052:9;6048:19;6039:6;5995:73;:::i;:::-;6078;6146:3;6135:9;6131:19;6122:6;6078:73;:::i;:::-;6161;6229:3;6218:9;6214:19;6205:6;6161:73;:::i;:::-;6244:67;6306:3;6295:9;6291:19;6282:6;6244:67;:::i;:::-;5242:1076;;;;;;;;;;;:::o;6324:619::-;6401:6;6409;6417;6466:2;6454:9;6445:7;6441:23;6437:32;6434:119;;;6472:79;;:::i;:::-;6434:119;6592:1;6617:53;6662:7;6653:6;6642:9;6638:22;6617:53;:::i;:::-;6607:63;;6563:117;6719:2;6745:53;6790:7;6781:6;6770:9;6766:22;6745:53;:::i;:::-;6735:63;;6690:118;6847:2;6873:53;6918:7;6909:6;6898:9;6894:22;6873:53;:::i;:::-;6863:63;;6818:118;6324:619;;;;;:::o;6949:474::-;7017:6;7025;7074:2;7062:9;7053:7;7049:23;7045:32;7042:119;;;7080:79;;:::i;:::-;7042:119;7200:1;7225:53;7270:7;7261:6;7250:9;7246:22;7225:53;:::i;:::-;7215:63;;7171:117;7327:2;7353:53;7398:7;7389:6;7378:9;7374:22;7353:53;:::i;:::-;7343:63;;7298:118;6949:474;;;;;:::o;7429:117::-;7538:1;7535;7528:12;7552:117;7661:1;7658;7651:12;7675:180;7723:77;7720:1;7713:88;7820:4;7817:1;7810:15;7844:4;7841:1;7834:15;7861:281;7944:27;7966:4;7944:27;:::i;:::-;7936:6;7932:40;8074:6;8062:10;8059:22;8038:18;8026:10;8023:34;8020:62;8017:88;;;8085:18;;:::i;:::-;8017:88;8125:10;8121:2;8114:22;7904:238;7861:281;;:::o;8148:129::-;8182:6;8209:20;;:::i;:::-;8199:30;;8238:33;8266:4;8258:6;8238:33;:::i;:::-;8148:129;;;:::o;8283:308::-;8345:4;8435:18;8427:6;8424:30;8421:56;;;8457:18;;:::i;:::-;8421:56;8495:29;8517:6;8495:29;:::i;:::-;8487:37;;8579:4;8573;8569:15;8561:23;;8283:308;;;:::o;8597:146::-;8694:6;8689:3;8684;8671:30;8735:1;8726:6;8721:3;8717:16;8710:27;8597:146;;;:::o;8749:425::-;8827:5;8852:66;8868:49;8910:6;8868:49;:::i;:::-;8852:66;:::i;:::-;8843:75;;8941:6;8934:5;8927:21;8979:4;8972:5;8968:16;9017:3;9008:6;9003:3;8999:16;8996:25;8993:112;;;9024:79;;:::i;:::-;8993:112;9114:54;9161:6;9156:3;9151;9114:54;:::i;:::-;8833:341;8749:425;;;;;:::o;9194:340::-;9250:5;9299:3;9292:4;9284:6;9280:17;9276:27;9266:122;;9307:79;;:::i;:::-;9266:122;9424:6;9411:20;9449:79;9524:3;9516:6;9509:4;9501:6;9497:17;9449:79;:::i;:::-;9440:88;;9256:278;9194:340;;;;:::o;9540:654::-;9618:6;9626;9675:2;9663:9;9654:7;9650:23;9646:32;9643:119;;;9681:79;;:::i;:::-;9643:119;9801:1;9826:53;9871:7;9862:6;9851:9;9847:22;9826:53;:::i;:::-;9816:63;;9772:117;9956:2;9945:9;9941:18;9928:32;9987:18;9979:6;9976:30;9973:117;;;10009:79;;:::i;:::-;9973:117;10114:63;10169:7;10160:6;10149:9;10145:22;10114:63;:::i;:::-;10104:73;;9899:288;9540:654;;;;;:::o;10200:329::-;10259:6;10308:2;10296:9;10287:7;10283:23;10279:32;10276:119;;;10314:79;;:::i;:::-;10276:119;10434:1;10459:53;10504:7;10495:6;10484:9;10480:22;10459:53;:::i;:::-;10449:63;;10405:117;10200:329;;;;:::o;10535:474::-;10603:6;10611;10660:2;10648:9;10639:7;10635:23;10631:32;10628:119;;;10666:79;;:::i;:::-;10628:119;10786:1;10811:53;10856:7;10847:6;10836:9;10832:22;10811:53;:::i;:::-;10801:63;;10757:117;10913:2;10939:53;10984:7;10975:6;10964:9;10960:22;10939:53;:::i;:::-;10929:63;;10884:118;10535:474;;;;;:::o;11015:1451::-;11140:6;11148;11156;11164;11172;11221:3;11209:9;11200:7;11196:23;11192:33;11189:120;;;11228:79;;:::i;:::-;11189:120;11376:1;11365:9;11361:17;11348:31;11406:18;11398:6;11395:30;11392:117;;;11428:79;;:::i;:::-;11392:117;11533:63;11588:7;11579:6;11568:9;11564:22;11533:63;:::i;:::-;11523:73;;11319:287;11673:2;11662:9;11658:18;11645:32;11704:18;11696:6;11693:30;11690:117;;;11726:79;;:::i;:::-;11690:117;11831:63;11886:7;11877:6;11866:9;11862:22;11831:63;:::i;:::-;11821:73;;11616:288;11971:2;11960:9;11956:18;11943:32;12002:18;11994:6;11991:30;11988:117;;;12024:79;;:::i;:::-;11988:117;12129:63;12184:7;12175:6;12164:9;12160:22;12129:63;:::i;:::-;12119:73;;11914:288;12241:2;12267:53;12312:7;12303:6;12292:9;12288:22;12267:53;:::i;:::-;12257:63;;12212:118;12369:3;12396:53;12441:7;12432:6;12421:9;12417:22;12396:53;:::i;:::-;12386:63;;12340:119;11015:1451;;;;;;;;:::o;12472:116::-;12542:21;12557:5;12542:21;:::i;:::-;12535:5;12532:32;12522:60;;12578:1;12575;12568:12;12522:60;12472:116;:::o;12594:133::-;12637:5;12675:6;12662:20;12653:29;;12691:30;12715:5;12691:30;:::i;:::-;12594:133;;;;:::o;12733:468::-;12798:6;12806;12855:2;12843:9;12834:7;12830:23;12826:32;12823:119;;;12861:79;;:::i;:::-;12823:119;12981:1;13006:53;13051:7;13042:6;13031:9;13027:22;13006:53;:::i;:::-;12996:63;;12952:117;13108:2;13134:50;13176:7;13167:6;13156:9;13152:22;13134:50;:::i;:::-;13124:60;;13079:115;12733:468;;;;;:::o;13207:307::-;13268:4;13358:18;13350:6;13347:30;13344:56;;;13380:18;;:::i;:::-;13344:56;13418:29;13440:6;13418:29;:::i;:::-;13410:37;;13502:4;13496;13492:15;13484:23;;13207:307;;;:::o;13520:423::-;13597:5;13622:65;13638:48;13679:6;13638:48;:::i;:::-;13622:65;:::i;:::-;13613:74;;13710:6;13703:5;13696:21;13748:4;13741:5;13737:16;13786:3;13777:6;13772:3;13768:16;13765:25;13762:112;;;13793:79;;:::i;:::-;13762:112;13883:54;13930:6;13925:3;13920;13883:54;:::i;:::-;13603:340;13520:423;;;;;:::o;13962:338::-;14017:5;14066:3;14059:4;14051:6;14047:17;14043:27;14033:122;;14074:79;;:::i;:::-;14033:122;14191:6;14178:20;14216:78;14290:3;14282:6;14275:4;14267:6;14263:17;14216:78;:::i;:::-;14207:87;;14023:277;13962:338;;;;:::o;14306:943::-;14401:6;14409;14417;14425;14474:3;14462:9;14453:7;14449:23;14445:33;14442:120;;;14481:79;;:::i;:::-;14442:120;14601:1;14626:53;14671:7;14662:6;14651:9;14647:22;14626:53;:::i;:::-;14616:63;;14572:117;14728:2;14754:53;14799:7;14790:6;14779:9;14775:22;14754:53;:::i;:::-;14744:63;;14699:118;14856:2;14882:53;14927:7;14918:6;14907:9;14903:22;14882:53;:::i;:::-;14872:63;;14827:118;15012:2;15001:9;14997:18;14984:32;15043:18;15035:6;15032:30;15029:117;;;15065:79;;:::i;:::-;15029:117;15170:62;15224:7;15215:6;15204:9;15200:22;15170:62;:::i;:::-;15160:72;;14955:287;14306:943;;;;;;;:::o;15255:114::-;15322:6;15356:5;15350:12;15340:22;;15255:114;;;:::o;15375:184::-;15474:11;15508:6;15503:3;15496:19;15548:4;15543:3;15539:14;15524:29;;15375:184;;;;:::o;15565:132::-;15632:4;15655:3;15647:11;;15685:4;15680:3;15676:14;15668:22;;15565:132;;;:::o;15703:108::-;15780:24;15798:5;15780:24;:::i;:::-;15775:3;15768:37;15703:108;;:::o;15817:179::-;15886:10;15907:46;15949:3;15941:6;15907:46;:::i;:::-;15985:4;15980:3;15976:14;15962:28;;15817:179;;;;:::o;16002:113::-;16072:4;16104;16099:3;16095:14;16087:22;;16002:113;;;:::o;16151:732::-;16270:3;16299:54;16347:5;16299:54;:::i;:::-;16369:86;16448:6;16443:3;16369:86;:::i;:::-;16362:93;;16479:56;16529:5;16479:56;:::i;:::-;16558:7;16589:1;16574:284;16599:6;16596:1;16593:13;16574:284;;;16675:6;16669:13;16702:63;16761:3;16746:13;16702:63;:::i;:::-;16695:70;;16788:60;16841:6;16788:60;:::i;:::-;16778:70;;16634:224;16621:1;16618;16614:9;16609:14;;16574:284;;;16578:14;16874:3;16867:10;;16275:608;;;16151:732;;;;:::o;16889:373::-;17032:4;17070:2;17059:9;17055:18;17047:26;;17119:9;17113:4;17109:20;17105:1;17094:9;17090:17;17083:47;17147:108;17250:4;17241:6;17147:108;:::i;:::-;17139:116;;16889:373;;;;:::o;17268:474::-;17336:6;17344;17393:2;17381:9;17372:7;17368:23;17364:32;17361:119;;;17399:79;;:::i;:::-;17361:119;17519:1;17544:53;17589:7;17580:6;17569:9;17565:22;17544:53;:::i;:::-;17534:63;;17490:117;17646:2;17672:53;17717:7;17708:6;17697:9;17693:22;17672:53;:::i;:::-;17662:63;;17617:118;17268:474;;;;;:::o;17748:1593::-;18176:4;18214:3;18203:9;18199:19;18191:27;;18228:71;18296:1;18285:9;18281:17;18272:6;18228:71;:::i;:::-;18346:9;18340:4;18336:20;18331:2;18320:9;18316:18;18309:48;18374:78;18447:4;18438:6;18374:78;:::i;:::-;18366:86;;18499:9;18493:4;18489:20;18484:2;18473:9;18469:18;18462:48;18527:78;18600:4;18591:6;18527:78;:::i;:::-;18519:86;;18652:9;18646:4;18642:20;18637:2;18626:9;18622:18;18615:48;18680:78;18753:4;18744:6;18680:78;:::i;:::-;18672:86;;18768:73;18836:3;18825:9;18821:19;18812:6;18768:73;:::i;:::-;18851;18919:3;18908:9;18904:19;18895:6;18851:73;:::i;:::-;18934;19002:3;18991:9;18987:19;18978:6;18934:73;:::i;:::-;19017;19085:3;19074:9;19070:19;19061:6;19017:73;:::i;:::-;19100:67;19162:3;19151:9;19147:19;19138:6;19100:67;:::i;:::-;19177:73;19245:3;19234:9;19230:19;19221:6;19177:73;:::i;:::-;19260:74;19329:3;19318:9;19314:19;19304:7;19260:74;:::i;:::-;17748:1593;;;;;;;;;;;;;;:::o;19347:60::-;19375:3;19396:5;19389:12;;19347:60;;;:::o;19413:142::-;19463:9;19496:53;19514:34;19523:24;19541:5;19523:24;:::i;:::-;19514:34;:::i;:::-;19496:53;:::i;:::-;19483:66;;19413:142;;;:::o;19561:126::-;19611:9;19644:37;19675:5;19644:37;:::i;:::-;19631:50;;19561:126;;;:::o;19693:140::-;19757:9;19790:37;19821:5;19790:37;:::i;:::-;19777:50;;19693:140;;;:::o;19839:159::-;19940:51;19985:5;19940:51;:::i;:::-;19935:3;19928:64;19839:159;;:::o;20004:250::-;20111:4;20149:2;20138:9;20134:18;20126:26;;20162:85;20244:1;20233:9;20229:17;20220:6;20162:85;:::i;:::-;20004:250;;;;:::o;20260:180::-;20308:77;20305:1;20298:88;20405:4;20402:1;20395:15;20429:4;20426:1;20419:15;20446:320;20490:6;20527:1;20521:4;20517:12;20507:22;;20574:1;20568:4;20564:12;20595:18;20585:81;;20651:4;20643:6;20639:17;20629:27;;20585:81;20713:2;20705:6;20702:14;20682:18;20679:38;20676:84;;20732:18;;:::i;:::-;20676:84;20497:269;20446:320;;;:::o;20772:442::-;20921:4;20959:2;20948:9;20944:18;20936:26;;20972:71;21040:1;21029:9;21025:17;21016:6;20972:71;:::i;:::-;21053:72;21121:2;21110:9;21106:18;21097:6;21053:72;:::i;:::-;21135;21203:2;21192:9;21188:18;21179:6;21135:72;:::i;:::-;20772:442;;;;;;:::o;21220:332::-;21341:4;21379:2;21368:9;21364:18;21356:26;;21392:71;21460:1;21449:9;21445:17;21436:6;21392:71;:::i;:::-;21473:72;21541:2;21530:9;21526:18;21517:6;21473:72;:::i;:::-;21220:332;;;;;:::o;21558:137::-;21612:5;21643:6;21637:13;21628:22;;21659:30;21683:5;21659:30;:::i;:::-;21558:137;;;;:::o;21701:345::-;21768:6;21817:2;21805:9;21796:7;21792:23;21788:32;21785:119;;;21823:79;;:::i;:::-;21785:119;21943:1;21968:61;22021:7;22012:6;22001:9;21997:22;21968:61;:::i;:::-;21958:71;;21914:125;21701:345;;;;:::o;22052:172::-;22192:24;22188:1;22180:6;22176:14;22169:48;22052:172;:::o;22230:366::-;22372:3;22393:67;22457:2;22452:3;22393:67;:::i;:::-;22386:74;;22469:93;22558:3;22469:93;:::i;:::-;22587:2;22582:3;22578:12;22571:19;;22230:366;;;:::o;22602:419::-;22768:4;22806:2;22795:9;22791:18;22783:26;;22855:9;22849:4;22845:20;22841:1;22830:9;22826:17;22819:47;22883:131;23009:4;22883:131;:::i;:::-;22875:139;;22602:419;;;:::o;23027:170::-;23167:22;23163:1;23155:6;23151:14;23144:46;23027:170;:::o;23203:366::-;23345:3;23366:67;23430:2;23425:3;23366:67;:::i;:::-;23359:74;;23442:93;23531:3;23442:93;:::i;:::-;23560:2;23555:3;23551:12;23544:19;;23203:366;;;:::o;23575:419::-;23741:4;23779:2;23768:9;23764:18;23756:26;;23828:9;23822:4;23818:20;23814:1;23803:9;23799:17;23792:47;23856:131;23982:4;23856:131;:::i;:::-;23848:139;;23575:419;;;:::o;24000:231::-;24140:34;24136:1;24128:6;24124:14;24117:58;24209:14;24204:2;24196:6;24192:15;24185:39;24000:231;:::o;24237:366::-;24379:3;24400:67;24464:2;24459:3;24400:67;:::i;:::-;24393:74;;24476:93;24565:3;24476:93;:::i;:::-;24594:2;24589:3;24585:12;24578:19;;24237:366;;;:::o;24609:419::-;24775:4;24813:2;24802:9;24798:18;24790:26;;24862:9;24856:4;24852:20;24848:1;24837:9;24833:17;24826:47;24890:131;25016:4;24890:131;:::i;:::-;24882:139;;24609:419;;;:::o;25034:167::-;25174:19;25170:1;25162:6;25158:14;25151:43;25034:167;:::o;25207:366::-;25349:3;25370:67;25434:2;25429:3;25370:67;:::i;:::-;25363:74;;25446:93;25535:3;25446:93;:::i;:::-;25564:2;25559:3;25555:12;25548:19;;25207:366;;;:::o;25579:419::-;25745:4;25783:2;25772:9;25768:18;25760:26;;25832:9;25826:4;25822:20;25818:1;25807:9;25803:17;25796:47;25860:131;25986:4;25860:131;:::i;:::-;25852:139;;25579:419;;;:::o;26004:174::-;26144:26;26140:1;26132:6;26128:14;26121:50;26004:174;:::o;26184:366::-;26326:3;26347:67;26411:2;26406:3;26347:67;:::i;:::-;26340:74;;26423:93;26512:3;26423:93;:::i;:::-;26541:2;26536:3;26532:12;26525:19;;26184:366;;;:::o;26556:419::-;26722:4;26760:2;26749:9;26745:18;26737:26;;26809:9;26803:4;26799:20;26795:1;26784:9;26780:17;26773:47;26837:131;26963:4;26837:131;:::i;:::-;26829:139;;26556:419;;;:::o;26981:180::-;27029:77;27026:1;27019:88;27126:4;27123:1;27116:15;27150:4;27147:1;27140:15;27167:233;27206:3;27229:24;27247:5;27229:24;:::i;:::-;27220:33;;27275:66;27268:5;27265:77;27262:103;;27345:18;;:::i;:::-;27262:103;27392:1;27385:5;27381:13;27374:20;;27167:233;;;:::o;27406:141::-;27455:4;27478:3;27470:11;;27501:3;27498:1;27491:14;27535:4;27532:1;27522:18;27514:26;;27406:141;;;:::o;27553:93::-;27590:6;27637:2;27632;27625:5;27621:14;27617:23;27607:33;;27553:93;;;:::o;27652:107::-;27696:8;27746:5;27740:4;27736:16;27715:37;;27652:107;;;;:::o;27765:393::-;27834:6;27884:1;27872:10;27868:18;27907:97;27937:66;27926:9;27907:97;:::i;:::-;28025:39;28055:8;28044:9;28025:39;:::i;:::-;28013:51;;28097:4;28093:9;28086:5;28082:21;28073:30;;28146:4;28136:8;28132:19;28125:5;28122:30;28112:40;;27841:317;;27765:393;;;;;:::o;28164:142::-;28214:9;28247:53;28265:34;28274:24;28292:5;28274:24;:::i;:::-;28265:34;:::i;:::-;28247:53;:::i;:::-;28234:66;;28164:142;;;:::o;28312:75::-;28355:3;28376:5;28369:12;;28312:75;;;:::o;28393:269::-;28503:39;28534:7;28503:39;:::i;:::-;28564:91;28613:41;28637:16;28613:41;:::i;:::-;28605:6;28598:4;28592:11;28564:91;:::i;:::-;28558:4;28551:105;28469:193;28393:269;;;:::o;28668:73::-;28713:3;28668:73;:::o;28747:189::-;28824:32;;:::i;:::-;28865:65;28923:6;28915;28909:4;28865:65;:::i;:::-;28800:136;28747:189;;:::o;28942:186::-;29002:120;29019:3;29012:5;29009:14;29002:120;;;29073:39;29110:1;29103:5;29073:39;:::i;:::-;29046:1;29039:5;29035:13;29026:22;;29002:120;;;28942:186;;:::o;29134:543::-;29235:2;29230:3;29227:11;29224:446;;;29269:38;29301:5;29269:38;:::i;:::-;29353:29;29371:10;29353:29;:::i;:::-;29343:8;29339:44;29536:2;29524:10;29521:18;29518:49;;;29557:8;29542:23;;29518:49;29580:80;29636:22;29654:3;29636:22;:::i;:::-;29626:8;29622:37;29609:11;29580:80;:::i;:::-;29239:431;;29224:446;29134:543;;;:::o;29683:117::-;29737:8;29787:5;29781:4;29777:16;29756:37;;29683:117;;;;:::o;29806:169::-;29850:6;29883:51;29931:1;29927:6;29919:5;29916:1;29912:13;29883:51;:::i;:::-;29879:56;29964:4;29958;29954:15;29944:25;;29857:118;29806:169;;;;:::o;29980:295::-;30056:4;30202:29;30227:3;30221:4;30202:29;:::i;:::-;30194:37;;30264:3;30261:1;30257:11;30251:4;30248:21;30240:29;;29980:295;;;;:::o;30280:1395::-;30397:37;30430:3;30397:37;:::i;:::-;30499:18;30491:6;30488:30;30485:56;;;30521:18;;:::i;:::-;30485:56;30565:38;30597:4;30591:11;30565:38;:::i;:::-;30650:67;30710:6;30702;30696:4;30650:67;:::i;:::-;30744:1;30768:4;30755:17;;30800:2;30792:6;30789:14;30817:1;30812:618;;;;31474:1;31491:6;31488:77;;;31540:9;31535:3;31531:19;31525:26;31516:35;;31488:77;31591:67;31651:6;31644:5;31591:67;:::i;:::-;31585:4;31578:81;31447:222;30782:887;;30812:618;30864:4;30860:9;30852:6;30848:22;30898:37;30930:4;30898:37;:::i;:::-;30957:1;30971:208;30985:7;30982:1;30979:14;30971:208;;;31064:9;31059:3;31055:19;31049:26;31041:6;31034:42;31115:1;31107:6;31103:14;31093:24;;31162:2;31151:9;31147:18;31134:31;;31008:4;31005:1;31001:12;30996:17;;30971:208;;;31207:6;31198:7;31195:19;31192:179;;;31265:9;31260:3;31256:19;31250:26;31308:48;31350:4;31342:6;31338:17;31327:9;31308:48;:::i;:::-;31300:6;31293:64;31215:156;31192:179;31417:1;31413;31405:6;31401:14;31397:22;31391:4;31384:36;30819:611;;;30782:887;;30372:1303;;;30280:1395;;:::o;31681:177::-;31821:29;31817:1;31809:6;31805:14;31798:53;31681:177;:::o;31864:366::-;32006:3;32027:67;32091:2;32086:3;32027:67;:::i;:::-;32020:74;;32103:93;32192:3;32103:93;:::i;:::-;32221:2;32216:3;32212:12;32205:19;;31864:366;;;:::o;32236:419::-;32402:4;32440:2;32429:9;32425:18;32417:26;;32489:9;32483:4;32479:20;32475:1;32464:9;32460:17;32453:47;32517:131;32643:4;32517:131;:::i;:::-;32509:139;;32236:419;;;:::o;32661:179::-;32801:31;32797:1;32789:6;32785:14;32778:55;32661:179;:::o;32846:366::-;32988:3;33009:67;33073:2;33068:3;33009:67;:::i;:::-;33002:74;;33085:93;33174:3;33085:93;:::i;:::-;33203:2;33198:3;33194:12;33187:19;;32846:366;;;:::o;33218:419::-;33384:4;33422:2;33411:9;33407:18;33399:26;;33471:9;33465:4;33461:20;33457:1;33446:9;33442:17;33435:47;33499:131;33625:4;33499:131;:::i;:::-;33491:139;;33218:419;;;:::o;33643:191::-;33683:3;33702:20;33720:1;33702:20;:::i;:::-;33697:25;;33736:20;33754:1;33736:20;:::i;:::-;33731:25;;33779:1;33776;33772:9;33765:16;;33800:3;33797:1;33794:10;33791:36;;;33807:18;;:::i;:::-;33791:36;33643:191;;;;:::o;33840:177::-;33980:29;33976:1;33968:6;33964:14;33957:53;33840:177;:::o;34023:366::-;34165:3;34186:67;34250:2;34245:3;34186:67;:::i;:::-;34179:74;;34262:93;34351:3;34262:93;:::i;:::-;34380:2;34375:3;34371:12;34364:19;;34023:366;;;:::o;34395:419::-;34561:4;34599:2;34588:9;34584:18;34576:26;;34648:9;34642:4;34638:20;34634:1;34623:9;34619:17;34612:47;34676:131;34802:4;34676:131;:::i;:::-;34668:139;;34395:419;;;:::o;34820:220::-;34960:34;34956:1;34948:6;34944:14;34937:58;35029:3;35024:2;35016:6;35012:15;35005:28;34820:220;:::o;35046:366::-;35188:3;35209:67;35273:2;35268:3;35209:67;:::i;:::-;35202:74;;35285:93;35374:3;35285:93;:::i;:::-;35403:2;35398:3;35394:12;35387:19;;35046:366;;;:::o;35418:419::-;35584:4;35622:2;35611:9;35607:18;35599:26;;35671:9;35665:4;35661:20;35657:1;35646:9;35642:17;35635:47;35699:131;35825:4;35699:131;:::i;:::-;35691:139;;35418:419;;;:::o;35843:148::-;35945:11;35982:3;35967:18;;35843:148;;;;:::o;35997:390::-;36103:3;36131:39;36164:5;36131:39;:::i;:::-;36186:89;36268:6;36263:3;36186:89;:::i;:::-;36179:96;;36284:65;36342:6;36337:3;36330:4;36323:5;36319:16;36284:65;:::i;:::-;36374:6;36369:3;36365:16;36358:23;;36107:280;35997:390;;;;:::o;36393:435::-;36573:3;36595:95;36686:3;36677:6;36595:95;:::i;:::-;36588:102;;36707:95;36798:3;36789:6;36707:95;:::i;:::-;36700:102;;36819:3;36812:10;;36393:435;;;;;:::o;36834:175::-;36974:27;36970:1;36962:6;36958:14;36951:51;36834:175;:::o;37015:366::-;37157:3;37178:67;37242:2;37237:3;37178:67;:::i;:::-;37171:74;;37254:93;37343:3;37254:93;:::i;:::-;37372:2;37367:3;37363:12;37356:19;;37015:366;;;:::o;37387:419::-;37553:4;37591:2;37580:9;37576:18;37568:26;;37640:9;37634:4;37630:20;37626:1;37615:9;37611:17;37604:47;37668:131;37794:4;37668:131;:::i;:::-;37660:139;;37387:419;;;:::o;37812:178::-;37952:30;37948:1;37940:6;37936:14;37929:54;37812:178;:::o;37996:366::-;38138:3;38159:67;38223:2;38218:3;38159:67;:::i;:::-;38152:74;;38235:93;38324:3;38235:93;:::i;:::-;38353:2;38348:3;38344:12;38337:19;;37996:366;;;:::o;38368:419::-;38534:4;38572:2;38561:9;38557:18;38549:26;;38621:9;38615:4;38611:20;38607:1;38596:9;38592:17;38585:47;38649:131;38775:4;38649:131;:::i;:::-;38641:139;;38368:419;;;:::o;38793:98::-;38844:6;38878:5;38872:12;38862:22;;38793:98;;;:::o;38897:168::-;38980:11;39014:6;39009:3;39002:19;39054:4;39049:3;39045:14;39030:29;;38897:168;;;;:::o;39071:373::-;39157:3;39185:38;39217:5;39185:38;:::i;:::-;39239:70;39302:6;39297:3;39239:70;:::i;:::-;39232:77;;39318:65;39376:6;39371:3;39364:4;39357:5;39353:16;39318:65;:::i;:::-;39408:29;39430:6;39408:29;:::i;:::-;39403:3;39399:39;39392:46;;39161:283;39071:373;;;;:::o;39450:640::-;39645:4;39683:3;39672:9;39668:19;39660:27;;39697:71;39765:1;39754:9;39750:17;39741:6;39697:71;:::i;:::-;39778:72;39846:2;39835:9;39831:18;39822:6;39778:72;:::i;:::-;39860;39928:2;39917:9;39913:18;39904:6;39860:72;:::i;:::-;39979:9;39973:4;39969:20;39964:2;39953:9;39949:18;39942:48;40007:76;40078:4;40069:6;40007:76;:::i;:::-;39999:84;;39450:640;;;;;;;:::o;40096:141::-;40152:5;40183:6;40177:13;40168:22;;40199:32;40225:5;40199:32;:::i;:::-;40096:141;;;;:::o;40243:349::-;40312:6;40361:2;40349:9;40340:7;40336:23;40332:32;40329:119;;;40367:79;;:::i;:::-;40329:119;40487:1;40512:63;40567:7;40558:6;40547:9;40543:22;40512:63;:::i;:::-;40502:73;;40458:127;40243:349;;;;:::o;40598:180::-;40646:77;40643:1;40636:88;40743:4;40740:1;40733:15;40767:4;40764:1;40757:15"},"methodIdentifiers":{"addContribution(uint256,string)":"4fa650f1","approve(address,uint256)":"095ea7b3","approveContribution(uint256,uint256)":"6fd91da9","articleContributions(uint256,uint256)":"30243834","articles(uint256)":"edcfafe6","balanceOf(address)":"70a08231","completeArticle(uint256)":"d5df1e1d","contributions(uint256)":"1cee0700","createArticle(string,string,string,uint256,uint256)":"9178af65","getApproved(uint256)":"081812fc","getArticleContributions(uint256)":"e3e03dc0","getTotalArticles()":"0ebf1d3d","getTotalContributions()":"ddf556d0","getUserContributions(address)":"e36465a3","hasContributed(uint256,address)":"b5b96ae0","hasLiked(uint256,address)":"8fb7092c","isApprovedForAll(address,address)":"e985e9c5","likeContribution(uint256)":"8a9a62a8","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","rewardToken()":"f7c618c1","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","userContributions(address,uint256)":"7331fa95","withdrawTokens(uint256)":"315a095d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"articleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRewards\",\"type\":\"uint256\"}],\"name\":\"ArticleCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"articleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"name\":\"ArticleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contributionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"articleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"}],\"name\":\"ContributionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contributionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"ContributionApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contributionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liker\",\"type\":\"address\"}],\"name\":\"ContributionLiked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"articleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_articleId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_content\",\"type\":\"string\"}],\"name\":\"addContribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contributionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"approveContribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"articleContributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"articles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"movieTitle\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"genre\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalContributions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewards\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"minContributionLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxContributors\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_articleId\",\"type\":\"uint256\"}],\"name\":\"completeArticle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"articleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"likes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_movieTitle\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_genre\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_minContributionLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxContributors\",\"type\":\"uint256\"}],\"name\":\"createArticle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_articleId\",\"type\":\"uint256\"}],\"name\":\"getArticleContributions\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalArticles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalContributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserContributions\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasContributed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasLiked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contributionId\",\"type\":\"uint256\"}],\"name\":\"likeContribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userContributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MovieArticle.sol\":\"MovieArticle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/MovieArticle.sol\":{\"keccak256\":\"0x089f2481bdc7cb56bbb7f501eaab15541021158134e129df702e38ac78faa7ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://259df63bda03fc0ba7eeec238e024a660f79a12f07dbb2ace9a8c470bde306d9\",\"dweb:/ipfs/QmXnUtexD2xTYANhPS3ejRxWGRmaUvMwMmcxdBCGy9CsFe\"]}},\"version\":1}"}},"contracts/RewardToken.sol":{"RewardToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_336":{"entryPoint":null,"id":336,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7823":{"entryPoint":null,"id":7823,"parameterSlots":4,"returnSlots":0},"@_mint_639":{"entryPoint":457,"id":639,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":259,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_606":{"entryPoint":598,"id":606,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1435,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1698,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1510,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1597,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_address_fromMemory":{"entryPoint":1721,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2705,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2857,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2722,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2874,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2935,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1306,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1158,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1337,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2008,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1897,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2798,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2319,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1652,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1620,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1561,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2280,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":2154,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2474,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1391,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2029,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1955,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2444,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1252,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":2144,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2412,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2751,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1908,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1205,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2194,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1178,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1183,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1173,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1168,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1188,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":2045,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2399,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2252,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2058,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2204,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1672,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1571,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2247,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11210:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"423:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:21"},"nodeType":"YulFunctionCall","src":"433:12:21"},"nodeType":"YulExpressionStatement","src":"433:12:21"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:21"},{"body":{"nodeType":"YulBlock","src":"546:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:21"},"nodeType":"YulFunctionCall","src":"556:12:21"},"nodeType":"YulExpressionStatement","src":"556:12:21"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:21"},{"body":{"nodeType":"YulBlock","src":"628:54:21","statements":[{"nodeType":"YulAssignment","src":"638:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:21"},"nodeType":"YulFunctionCall","src":"652:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:21"},"nodeType":"YulFunctionCall","src":"668:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:21"},"nodeType":"YulFunctionCall","src":"648:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:21","type":""}],"src":"580:102:21"},{"body":{"nodeType":"YulBlock","src":"716:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:21"},"nodeType":"YulFunctionCall","src":"726:88:21"},"nodeType":"YulExpressionStatement","src":"726:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:21"},"nodeType":"YulFunctionCall","src":"823:15:21"},"nodeType":"YulExpressionStatement","src":"823:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:21"},"nodeType":"YulFunctionCall","src":"847:15:21"},"nodeType":"YulExpressionStatement","src":"847:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:21"},{"body":{"nodeType":"YulBlock","src":"917:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:21"},"nodeType":"YulFunctionCall","src":"957:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:21"},"nodeType":"YulFunctionCall","src":"945:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:21"},"nodeType":"YulFunctionCall","src":"1098:18:21"},"nodeType":"YulExpressionStatement","src":"1098:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:21"},"nodeType":"YulFunctionCall","src":"1036:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:21"},"nodeType":"YulFunctionCall","src":"1072:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:21"},"nodeType":"YulFunctionCall","src":"1033:62:21"},"nodeType":"YulIf","src":"1030:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:21"},"nodeType":"YulFunctionCall","src":"1127:22:21"},"nodeType":"YulExpressionStatement","src":"1127:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:21","type":""}],"src":"874:281:21"},{"body":{"nodeType":"YulBlock","src":"1202:88:21","statements":[{"nodeType":"YulAssignment","src":"1212:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:21"},"nodeType":"YulFunctionCall","src":"1222:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:21"},"nodeType":"YulFunctionCall","src":"1251:33:21"},"nodeType":"YulExpressionStatement","src":"1251:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:21","type":""}],"src":"1161:129:21"},{"body":{"nodeType":"YulBlock","src":"1363:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:21"},"nodeType":"YulFunctionCall","src":"1470:18:21"},"nodeType":"YulExpressionStatement","src":"1470:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:21"},"nodeType":"YulFunctionCall","src":"1437:30:21"},"nodeType":"YulIf","src":"1434:56:21"},{"nodeType":"YulAssignment","src":"1500:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:21"},"nodeType":"YulFunctionCall","src":"1508:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:21"}]},{"nodeType":"YulAssignment","src":"1574:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:21"},"nodeType":"YulFunctionCall","src":"1582:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:21"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:21","type":""}],"src":"1296:308:21"},{"body":{"nodeType":"YulBlock","src":"1672:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:21"},"nodeType":"YulFunctionCall","src":"1772:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:21"},"nodeType":"YulFunctionCall","src":"1791:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:21"},"nodeType":"YulFunctionCall","src":"1785:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:21"},"nodeType":"YulFunctionCall","src":"1765:39:21"},"nodeType":"YulExpressionStatement","src":"1765:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:21"},"nodeType":"YulFunctionCall","src":"1709:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:21","statements":[{"nodeType":"YulAssignment","src":"1725:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:21"},"nodeType":"YulFunctionCall","src":"1730:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:21","statements":[]},"src":"1701:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:21"},"nodeType":"YulFunctionCall","src":"1830:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:21"},"nodeType":"YulFunctionCall","src":"1823:27:21"},"nodeType":"YulExpressionStatement","src":"1823:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:21","type":""}],"src":"1610:246:21"},{"body":{"nodeType":"YulBlock","src":"1957:339:21","statements":[{"nodeType":"YulAssignment","src":"1967:75:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:21"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:21"},"nodeType":"YulFunctionCall","src":"1992:49:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:21"},"nodeType":"YulFunctionCall","src":"1976:66:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:21"},"nodeType":"YulFunctionCall","src":"2051:21:21"},"nodeType":"YulExpressionStatement","src":"2051:21:21"},{"nodeType":"YulVariableDeclaration","src":"2081:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:21"},"nodeType":"YulFunctionCall","src":"2092:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:21"},"nodeType":"YulFunctionCall","src":"2148:79:21"},"nodeType":"YulExpressionStatement","src":"2148:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:21"},"nodeType":"YulFunctionCall","src":"2123:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:21"},"nodeType":"YulFunctionCall","src":"2120:25:21"},"nodeType":"YulIf","src":"2117:112:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:21"},"nodeType":"YulFunctionCall","src":"2238:52:21"},"nodeType":"YulExpressionStatement","src":"2238:52:21"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:21","type":""}],"src":"1862:434:21"},{"body":{"nodeType":"YulBlock","src":"2389:282:21","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:21"},"nodeType":"YulFunctionCall","src":"2440:79:21"},"nodeType":"YulExpressionStatement","src":"2440:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:21"},"nodeType":"YulFunctionCall","src":"2413:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:21"},"nodeType":"YulFunctionCall","src":"2409:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:21"},"nodeType":"YulFunctionCall","src":"2402:35:21"},"nodeType":"YulIf","src":"2399:122:21"},{"nodeType":"YulVariableDeclaration","src":"2530:27:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:21"},"nodeType":"YulFunctionCall","src":"2544:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:21"},"nodeType":"YulFunctionCall","src":"2634:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:21"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:21"},"nodeType":"YulFunctionCall","src":"2575:90:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:21"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:21","type":""}],"src":"2316:355:21"},{"body":{"nodeType":"YulBlock","src":"2722:32:21","statements":[{"nodeType":"YulAssignment","src":"2732:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2743:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2732:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2704:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2714:7:21","type":""}],"src":"2677:77:21"},{"body":{"nodeType":"YulBlock","src":"2803:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"2860:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2869:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2872:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2862:6:21"},"nodeType":"YulFunctionCall","src":"2862:12:21"},"nodeType":"YulExpressionStatement","src":"2862:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2826:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2851:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2833:17:21"},"nodeType":"YulFunctionCall","src":"2833:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2823:2:21"},"nodeType":"YulFunctionCall","src":"2823:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2816:6:21"},"nodeType":"YulFunctionCall","src":"2816:43:21"},"nodeType":"YulIf","src":"2813:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2796:5:21","type":""}],"src":"2760:122:21"},{"body":{"nodeType":"YulBlock","src":"2951:80:21","statements":[{"nodeType":"YulAssignment","src":"2961:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2976:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2970:5:21"},"nodeType":"YulFunctionCall","src":"2970:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2961:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3019:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2992:26:21"},"nodeType":"YulFunctionCall","src":"2992:33:21"},"nodeType":"YulExpressionStatement","src":"2992:33:21"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2929:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2937:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2945:5:21","type":""}],"src":"2888:143:21"},{"body":{"nodeType":"YulBlock","src":"3082:81:21","statements":[{"nodeType":"YulAssignment","src":"3092:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3107:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3114:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3103:3:21"},"nodeType":"YulFunctionCall","src":"3103:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3092:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3064:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3074:7:21","type":""}],"src":"3037:126:21"},{"body":{"nodeType":"YulBlock","src":"3214:51:21","statements":[{"nodeType":"YulAssignment","src":"3224:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3253:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3235:17:21"},"nodeType":"YulFunctionCall","src":"3235:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3224:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3196:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3206:7:21","type":""}],"src":"3169:96:21"},{"body":{"nodeType":"YulBlock","src":"3314:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"3371:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3380:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3383:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3373:6:21"},"nodeType":"YulFunctionCall","src":"3373:12:21"},"nodeType":"YulExpressionStatement","src":"3373:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3337:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3362:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3344:17:21"},"nodeType":"YulFunctionCall","src":"3344:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3334:2:21"},"nodeType":"YulFunctionCall","src":"3334:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3327:6:21"},"nodeType":"YulFunctionCall","src":"3327:43:21"},"nodeType":"YulIf","src":"3324:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3307:5:21","type":""}],"src":"3271:122:21"},{"body":{"nodeType":"YulBlock","src":"3462:80:21","statements":[{"nodeType":"YulAssignment","src":"3472:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3487:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3481:5:21"},"nodeType":"YulFunctionCall","src":"3481:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3472:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3530:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3503:26:21"},"nodeType":"YulFunctionCall","src":"3503:33:21"},"nodeType":"YulExpressionStatement","src":"3503:33:21"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"3448:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3456:5:21","type":""}],"src":"3399:143:21"},{"body":{"nodeType":"YulBlock","src":"3696:1018:21","statements":[{"body":{"nodeType":"YulBlock","src":"3743:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3745:77:21"},"nodeType":"YulFunctionCall","src":"3745:79:21"},"nodeType":"YulExpressionStatement","src":"3745:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3717:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3726:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3713:3:21"},"nodeType":"YulFunctionCall","src":"3713:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3738:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3709:3:21"},"nodeType":"YulFunctionCall","src":"3709:33:21"},"nodeType":"YulIf","src":"3706:120:21"},{"nodeType":"YulBlock","src":"3836:291:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3851:38:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3875:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3886:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3871:3:21"},"nodeType":"YulFunctionCall","src":"3871:17:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3865:5:21"},"nodeType":"YulFunctionCall","src":"3865:24:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3855:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3936:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3938:77:21"},"nodeType":"YulFunctionCall","src":"3938:79:21"},"nodeType":"YulExpressionStatement","src":"3938:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3908:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3916:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3905:2:21"},"nodeType":"YulFunctionCall","src":"3905:30:21"},"nodeType":"YulIf","src":"3902:117:21"},{"nodeType":"YulAssignment","src":"4033:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4089:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4100:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4085:3:21"},"nodeType":"YulFunctionCall","src":"4085:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4109:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4043:41:21"},"nodeType":"YulFunctionCall","src":"4043:74:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4033:6:21"}]}]},{"nodeType":"YulBlock","src":"4137:292:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4152:39:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4176:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4187:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4172:3:21"},"nodeType":"YulFunctionCall","src":"4172:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4166:5:21"},"nodeType":"YulFunctionCall","src":"4166:25:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4156:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"4238:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4240:77:21"},"nodeType":"YulFunctionCall","src":"4240:79:21"},"nodeType":"YulExpressionStatement","src":"4240:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4210:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4218:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4207:2:21"},"nodeType":"YulFunctionCall","src":"4207:30:21"},"nodeType":"YulIf","src":"4204:117:21"},{"nodeType":"YulAssignment","src":"4335:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4391:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4402:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4387:3:21"},"nodeType":"YulFunctionCall","src":"4387:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4411:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4345:41:21"},"nodeType":"YulFunctionCall","src":"4345:74:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4335:6:21"}]}]},{"nodeType":"YulBlock","src":"4439:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4454:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4468:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4458:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4484:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4530:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4541:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4526:3:21"},"nodeType":"YulFunctionCall","src":"4526:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4550:7:21"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4494:31:21"},"nodeType":"YulFunctionCall","src":"4494:64:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4484:6:21"}]}]},{"nodeType":"YulBlock","src":"4578:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4593:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4607:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4597:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4623:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4669:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4680:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4665:3:21"},"nodeType":"YulFunctionCall","src":"4665:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4689:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"4633:31:21"},"nodeType":"YulFunctionCall","src":"4633:64:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4623:6:21"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3642:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3653:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3665:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3673:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3681:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3689:6:21","type":""}],"src":"3548:1166:21"},{"body":{"nodeType":"YulBlock","src":"4779:40:21","statements":[{"nodeType":"YulAssignment","src":"4790:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4806:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4800:5:21"},"nodeType":"YulFunctionCall","src":"4800:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4790:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4762:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4772:6:21","type":""}],"src":"4720:99:21"},{"body":{"nodeType":"YulBlock","src":"4853:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4870:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4873:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4863:6:21"},"nodeType":"YulFunctionCall","src":"4863:88:21"},"nodeType":"YulExpressionStatement","src":"4863:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4967:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4970:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4960:6:21"},"nodeType":"YulFunctionCall","src":"4960:15:21"},"nodeType":"YulExpressionStatement","src":"4960:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4991:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4994:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4984:6:21"},"nodeType":"YulFunctionCall","src":"4984:15:21"},"nodeType":"YulExpressionStatement","src":"4984:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"4825:180:21"},{"body":{"nodeType":"YulBlock","src":"5062:269:21","statements":[{"nodeType":"YulAssignment","src":"5072:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5086:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"5092:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5082:3:21"},"nodeType":"YulFunctionCall","src":"5082:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5072:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"5103:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5133:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"5139:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5129:3:21"},"nodeType":"YulFunctionCall","src":"5129:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5107:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5180:51:21","statements":[{"nodeType":"YulAssignment","src":"5194:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5208:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5216:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5204:3:21"},"nodeType":"YulFunctionCall","src":"5204:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5194:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5160:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5153:6:21"},"nodeType":"YulFunctionCall","src":"5153:26:21"},"nodeType":"YulIf","src":"5150:81:21"},{"body":{"nodeType":"YulBlock","src":"5283:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"5297:16:21"},"nodeType":"YulFunctionCall","src":"5297:18:21"},"nodeType":"YulExpressionStatement","src":"5297:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5247:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5270:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5278:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5267:2:21"},"nodeType":"YulFunctionCall","src":"5267:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5244:2:21"},"nodeType":"YulFunctionCall","src":"5244:38:21"},"nodeType":"YulIf","src":"5241:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5046:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5055:6:21","type":""}],"src":"5011:320:21"},{"body":{"nodeType":"YulBlock","src":"5391:87:21","statements":[{"nodeType":"YulAssignment","src":"5401:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"5409:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5401:4:21"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5429:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"5432:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5422:6:21"},"nodeType":"YulFunctionCall","src":"5422:14:21"},"nodeType":"YulExpressionStatement","src":"5422:14:21"},{"nodeType":"YulAssignment","src":"5445:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5463:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5466:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5453:9:21"},"nodeType":"YulFunctionCall","src":"5453:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5445:4:21"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"5378:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"5386:4:21","type":""}],"src":"5337:141:21"},{"body":{"nodeType":"YulBlock","src":"5528:49:21","statements":[{"nodeType":"YulAssignment","src":"5538:33:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5556:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5563:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5552:3:21"},"nodeType":"YulFunctionCall","src":"5552:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"5568:2:21","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5548:3:21"},"nodeType":"YulFunctionCall","src":"5548:23:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5538:6:21"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5511:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5521:6:21","type":""}],"src":"5484:93:21"},{"body":{"nodeType":"YulBlock","src":"5636:54:21","statements":[{"nodeType":"YulAssignment","src":"5646:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"5671:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"5677:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5667:3:21"},"nodeType":"YulFunctionCall","src":"5667:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"5646:8:21"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"5611:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"5617:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"5627:8:21","type":""}],"src":"5583:107:21"},{"body":{"nodeType":"YulBlock","src":"5772:317:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5782:35:21","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"5803:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"5815:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5799:3:21"},"nodeType":"YulFunctionCall","src":"5799:18:21"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"5786:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5826:109:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5857:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5868:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5838:18:21"},"nodeType":"YulFunctionCall","src":"5838:97:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"5830:4:21","type":""}]},{"nodeType":"YulAssignment","src":"5944:51:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5975:9:21"},{"name":"toInsert","nodeType":"YulIdentifier","src":"5986:8:21"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5956:18:21"},"nodeType":"YulFunctionCall","src":"5956:39:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5944:8:21"}]},{"nodeType":"YulAssignment","src":"6004:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6017:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"6028:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6024:3:21"},"nodeType":"YulFunctionCall","src":"6024:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6013:3:21"},"nodeType":"YulFunctionCall","src":"6013:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6004:5:21"}]},{"nodeType":"YulAssignment","src":"6043:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6056:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"6067:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"6077:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6063:3:21"},"nodeType":"YulFunctionCall","src":"6063:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6053:2:21"},"nodeType":"YulFunctionCall","src":"6053:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6043:6:21"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5733:5:21","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"5740:10:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"5752:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5765:6:21","type":""}],"src":"5696:393:21"},{"body":{"nodeType":"YulBlock","src":"6127:28:21","statements":[{"nodeType":"YulAssignment","src":"6137:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"6144:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6137:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6113:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6123:3:21","type":""}],"src":"6095:60:21"},{"body":{"nodeType":"YulBlock","src":"6221:82:21","statements":[{"nodeType":"YulAssignment","src":"6231:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6289:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6271:17:21"},"nodeType":"YulFunctionCall","src":"6271:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"6262:8:21"},"nodeType":"YulFunctionCall","src":"6262:34:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6244:17:21"},"nodeType":"YulFunctionCall","src":"6244:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"6231:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6201:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"6211:9:21","type":""}],"src":"6161:142:21"},{"body":{"nodeType":"YulBlock","src":"6356:28:21","statements":[{"nodeType":"YulAssignment","src":"6366:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"6373:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6366:3:21"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6342:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6352:3:21","type":""}],"src":"6309:75:21"},{"body":{"nodeType":"YulBlock","src":"6466:193:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6476:63:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"6531:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6500:30:21"},"nodeType":"YulFunctionCall","src":"6500:39:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"6480:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6555:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6595:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6589:5:21"},"nodeType":"YulFunctionCall","src":"6589:11:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6602:6:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"6634:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"6610:23:21"},"nodeType":"YulFunctionCall","src":"6610:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"6561:27:21"},"nodeType":"YulFunctionCall","src":"6561:91:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6548:6:21"},"nodeType":"YulFunctionCall","src":"6548:105:21"},"nodeType":"YulExpressionStatement","src":"6548:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6443:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"6449:6:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"6457:7:21","type":""}],"src":"6390:269:21"},{"body":{"nodeType":"YulBlock","src":"6714:24:21","statements":[{"nodeType":"YulAssignment","src":"6724:8:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6731:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6724:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6710:3:21","type":""}],"src":"6665:73:21"},{"body":{"nodeType":"YulBlock","src":"6797:136:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6807:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"6821:30:21"},"nodeType":"YulFunctionCall","src":"6821:32:21"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"6811:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6906:4:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6912:6:21"},{"name":"zero_0","nodeType":"YulIdentifier","src":"6920:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6862:43:21"},"nodeType":"YulFunctionCall","src":"6862:65:21"},"nodeType":"YulExpressionStatement","src":"6862:65:21"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6783:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"6789:6:21","type":""}],"src":"6744:189:21"},{"body":{"nodeType":"YulBlock","src":"6989:136:21","statements":[{"body":{"nodeType":"YulBlock","src":"7056:63:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"7100:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"7107:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"7070:29:21"},"nodeType":"YulFunctionCall","src":"7070:39:21"},"nodeType":"YulExpressionStatement","src":"7070:39:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"7009:5:21"},{"name":"end","nodeType":"YulIdentifier","src":"7016:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7006:2:21"},"nodeType":"YulFunctionCall","src":"7006:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7021:26:21","statements":[{"nodeType":"YulAssignment","src":"7023:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"7036:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"7043:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7032:3:21"},"nodeType":"YulFunctionCall","src":"7032:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"7023:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"7003:2:21","statements":[]},"src":"6999:120:21"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"6977:5:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"6984:3:21","type":""}],"src":"6939:186:21"},{"body":{"nodeType":"YulBlock","src":"7210:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"7236:431:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7250:54:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7298:5:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7266:31:21"},"nodeType":"YulFunctionCall","src":"7266:38:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"7254:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7317:63:21","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"7340:8:21"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"7368:10:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"7350:17:21"},"nodeType":"YulFunctionCall","src":"7350:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7336:3:21"},"nodeType":"YulFunctionCall","src":"7336:44:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"7321:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7537:27:21","statements":[{"nodeType":"YulAssignment","src":"7539:23:21","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"7554:8:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7539:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"7521:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"7533:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7518:2:21"},"nodeType":"YulFunctionCall","src":"7518:18:21"},"nodeType":"YulIf","src":"7515:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7606:11:21"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"7623:8:21"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"7651:3:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"7633:17:21"},"nodeType":"YulFunctionCall","src":"7633:22:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7619:3:21"},"nodeType":"YulFunctionCall","src":"7619:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"7577:28:21"},"nodeType":"YulFunctionCall","src":"7577:80:21"},"nodeType":"YulExpressionStatement","src":"7577:80:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"7227:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"7232:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7224:2:21"},"nodeType":"YulFunctionCall","src":"7224:11:21"},"nodeType":"YulIf","src":"7221:446:21"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"7186:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"7193:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"7198:10:21","type":""}],"src":"7131:543:21"},{"body":{"nodeType":"YulBlock","src":"7743:54:21","statements":[{"nodeType":"YulAssignment","src":"7753:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"7778:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"7784:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7774:3:21"},"nodeType":"YulFunctionCall","src":"7774:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"7753:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"7718:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"7724:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"7734:8:21","type":""}],"src":"7680:117:21"},{"body":{"nodeType":"YulBlock","src":"7854:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7864:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7913:1:21","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"7916:5:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7909:3:21"},"nodeType":"YulFunctionCall","src":"7909:13:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7928:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7924:3:21"},"nodeType":"YulFunctionCall","src":"7924:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"7880:28:21"},"nodeType":"YulFunctionCall","src":"7880:51:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7876:3:21"},"nodeType":"YulFunctionCall","src":"7876:56:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7868:4:21","type":""}]},{"nodeType":"YulAssignment","src":"7941:25:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7955:4:21"},{"name":"mask","nodeType":"YulIdentifier","src":"7961:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7951:3:21"},"nodeType":"YulFunctionCall","src":"7951:15:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7941:6:21"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7831:4:21","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"7837:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7847:6:21","type":""}],"src":"7803:169:21"},{"body":{"nodeType":"YulBlock","src":"8058:214:21","statements":[{"nodeType":"YulAssignment","src":"8191:37:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8218:4:21"},{"name":"len","nodeType":"YulIdentifier","src":"8224:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8199:18:21"},"nodeType":"YulFunctionCall","src":"8199:29:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8191:4:21"}]},{"nodeType":"YulAssignment","src":"8237:29:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8248:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8258:1:21","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"8261:3:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8254:3:21"},"nodeType":"YulFunctionCall","src":"8254:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8245:2:21"},"nodeType":"YulFunctionCall","src":"8245:21:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"8237:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8039:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"8045:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"8053:4:21","type":""}],"src":"7977:295:21"},{"body":{"nodeType":"YulBlock","src":"8369:1303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8380:51:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8427:3:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8394:32:21"},"nodeType":"YulFunctionCall","src":"8394:37:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"8384:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"8516:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8518:16:21"},"nodeType":"YulFunctionCall","src":"8518:18:21"},"nodeType":"YulExpressionStatement","src":"8518:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8488:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8496:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8485:2:21"},"nodeType":"YulFunctionCall","src":"8485:30:21"},"nodeType":"YulIf","src":"8482:56:21"},{"nodeType":"YulVariableDeclaration","src":"8548:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8594:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8588:5:21"},"nodeType":"YulFunctionCall","src":"8588:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"8562:25:21"},"nodeType":"YulFunctionCall","src":"8562:38:21"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"8552:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8693:4:21"},{"name":"oldLen","nodeType":"YulIdentifier","src":"8699:6:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"8707:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"8647:45:21"},"nodeType":"YulFunctionCall","src":"8647:67:21"},"nodeType":"YulExpressionStatement","src":"8647:67:21"},{"nodeType":"YulVariableDeclaration","src":"8724:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8741:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"8728:9:21","type":""}]},{"nodeType":"YulAssignment","src":"8752:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8765:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8752:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"8816:611:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8830:37:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8849:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8861:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8857:3:21"},"nodeType":"YulFunctionCall","src":"8857:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8845:3:21"},"nodeType":"YulFunctionCall","src":"8845:22:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"8834:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8881:51:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8927:4:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8895:31:21"},"nodeType":"YulFunctionCall","src":"8895:37:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"8885:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8945:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8954:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8949:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"9013:163:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9038:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9056:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9061:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9052:3:21"},"nodeType":"YulFunctionCall","src":"9052:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9046:5:21"},"nodeType":"YulFunctionCall","src":"9046:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9031:6:21"},"nodeType":"YulFunctionCall","src":"9031:42:21"},"nodeType":"YulExpressionStatement","src":"9031:42:21"},{"nodeType":"YulAssignment","src":"9090:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9104:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9112:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9100:3:21"},"nodeType":"YulFunctionCall","src":"9100:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9090:6:21"}]},{"nodeType":"YulAssignment","src":"9131:31:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9148:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9159:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9144:3:21"},"nodeType":"YulFunctionCall","src":"9144:18:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9131:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8979:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"8982:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8976:2:21"},"nodeType":"YulFunctionCall","src":"8976:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8991:21:21","statements":[{"nodeType":"YulAssignment","src":"8993:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9002:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"9005:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8998:3:21"},"nodeType":"YulFunctionCall","src":"8998:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8993:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"8972:3:21","statements":[]},"src":"8968:208:21"},{"body":{"nodeType":"YulBlock","src":"9212:156:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9230:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9257:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9262:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9253:3:21"},"nodeType":"YulFunctionCall","src":"9253:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9247:5:21"},"nodeType":"YulFunctionCall","src":"9247:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"9234:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9297:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"9324:9:21"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9339:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9347:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9335:3:21"},"nodeType":"YulFunctionCall","src":"9335:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"9305:18:21"},"nodeType":"YulFunctionCall","src":"9305:48:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9290:6:21"},"nodeType":"YulFunctionCall","src":"9290:64:21"},"nodeType":"YulExpressionStatement","src":"9290:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"9195:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"9204:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9192:2:21"},"nodeType":"YulFunctionCall","src":"9192:19:21"},"nodeType":"YulIf","src":"9189:179:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9388:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9402:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9410:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9398:3:21"},"nodeType":"YulFunctionCall","src":"9398:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"9414:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9394:3:21"},"nodeType":"YulFunctionCall","src":"9394:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9381:6:21"},"nodeType":"YulFunctionCall","src":"9381:36:21"},"nodeType":"YulExpressionStatement","src":"9381:36:21"}]},"nodeType":"YulCase","src":"8809:618:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8814:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"9444:222:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9458:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9471:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9462:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"9495:67:21","statements":[{"nodeType":"YulAssignment","src":"9513:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9532:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9537:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9528:3:21"},"nodeType":"YulFunctionCall","src":"9528:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9522:5:21"},"nodeType":"YulFunctionCall","src":"9522:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9513:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"9488:6:21"},"nodeType":"YulIf","src":"9485:77:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9582:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9641:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"9648:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"9588:52:21"},"nodeType":"YulFunctionCall","src":"9588:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9575:6:21"},"nodeType":"YulFunctionCall","src":"9575:81:21"},"nodeType":"YulExpressionStatement","src":"9575:81:21"}]},"nodeType":"YulCase","src":"9436:230:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8789:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8797:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8786:2:21"},"nodeType":"YulFunctionCall","src":"8786:14:21"},"nodeType":"YulSwitch","src":"8779:887:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"8358:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"8364:3:21","type":""}],"src":"8277:1395:21"},{"body":{"nodeType":"YulBlock","src":"9743:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9760:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9783:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9765:17:21"},"nodeType":"YulFunctionCall","src":"9765:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9753:6:21"},"nodeType":"YulFunctionCall","src":"9753:37:21"},"nodeType":"YulExpressionStatement","src":"9753:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9731:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9738:3:21","type":""}],"src":"9678:118:21"},{"body":{"nodeType":"YulBlock","src":"9900:124:21","statements":[{"nodeType":"YulAssignment","src":"9910:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9922:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9933:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9918:3:21"},"nodeType":"YulFunctionCall","src":"9918:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9910:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9990:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10003:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10014:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9999:3:21"},"nodeType":"YulFunctionCall","src":"9999:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9946:43:21"},"nodeType":"YulFunctionCall","src":"9946:71:21"},"nodeType":"YulExpressionStatement","src":"9946:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9872:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9884:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9895:4:21","type":""}],"src":"9802:222:21"},{"body":{"nodeType":"YulBlock","src":"10058:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10075:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10078:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10068:6:21"},"nodeType":"YulFunctionCall","src":"10068:88:21"},"nodeType":"YulExpressionStatement","src":"10068:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10172:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10175:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10165:6:21"},"nodeType":"YulFunctionCall","src":"10165:15:21"},"nodeType":"YulExpressionStatement","src":"10165:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10196:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10199:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10189:6:21"},"nodeType":"YulFunctionCall","src":"10189:15:21"},"nodeType":"YulExpressionStatement","src":"10189:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10030:180:21"},{"body":{"nodeType":"YulBlock","src":"10260:147:21","statements":[{"nodeType":"YulAssignment","src":"10270:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10293:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10275:17:21"},"nodeType":"YulFunctionCall","src":"10275:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"10270:1:21"}]},{"nodeType":"YulAssignment","src":"10304:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10327:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10309:17:21"},"nodeType":"YulFunctionCall","src":"10309:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"10304:1:21"}]},{"nodeType":"YulAssignment","src":"10338:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10349:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"10352:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10345:3:21"},"nodeType":"YulFunctionCall","src":"10345:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10338:3:21"}]},{"body":{"nodeType":"YulBlock","src":"10378:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10380:16:21"},"nodeType":"YulFunctionCall","src":"10380:18:21"},"nodeType":"YulExpressionStatement","src":"10380:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10370:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"10373:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10367:2:21"},"nodeType":"YulFunctionCall","src":"10367:10:21"},"nodeType":"YulIf","src":"10364:36:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10247:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"10250:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10256:3:21","type":""}],"src":"10216:191:21"},{"body":{"nodeType":"YulBlock","src":"10478:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10495:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10518:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10500:17:21"},"nodeType":"YulFunctionCall","src":"10500:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10488:6:21"},"nodeType":"YulFunctionCall","src":"10488:37:21"},"nodeType":"YulExpressionStatement","src":"10488:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10466:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10473:3:21","type":""}],"src":"10413:118:21"},{"body":{"nodeType":"YulBlock","src":"10691:288:21","statements":[{"nodeType":"YulAssignment","src":"10701:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10713:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10724:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10709:3:21"},"nodeType":"YulFunctionCall","src":"10709:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10701:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10781:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10794:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10805:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10790:3:21"},"nodeType":"YulFunctionCall","src":"10790:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10737:43:21"},"nodeType":"YulFunctionCall","src":"10737:71:21"},"nodeType":"YulExpressionStatement","src":"10737:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10862:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10875:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10886:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10871:3:21"},"nodeType":"YulFunctionCall","src":"10871:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10818:43:21"},"nodeType":"YulFunctionCall","src":"10818:72:21"},"nodeType":"YulExpressionStatement","src":"10818:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10944:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10957:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10968:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10953:3:21"},"nodeType":"YulFunctionCall","src":"10953:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10900:43:21"},"nodeType":"YulFunctionCall","src":"10900:72:21"},"nodeType":"YulExpressionStatement","src":"10900:72:21"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10647:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10659:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10667:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10675:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10686:4:21","type":""}],"src":"10537:442:21"},{"body":{"nodeType":"YulBlock","src":"11083:124:21","statements":[{"nodeType":"YulAssignment","src":"11093:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11105:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11116:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11101:3:21"},"nodeType":"YulFunctionCall","src":"11101:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11093:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11173:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11186:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11197:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11182:3:21"},"nodeType":"YulFunctionCall","src":"11182:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11129:43:21"},"nodeType":"YulFunctionCall","src":"11129:71:21"},"nodeType":"YulExpressionStatement","src":"11129:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11055:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11067:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11078:4:21","type":""}],"src":"10985:222:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1E32 CODESIZE SUB DUP1 PUSH3 0x1E32 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x6B9 JUMP JUMPDEST DUP1 DUP5 DUP5 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x4B SWAP2 SWAP1 PUSH3 0x9AA JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5D SWAP2 SWAP1 PUSH3 0x9AA JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xD5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xCC SWAP2 SWAP1 PUSH3 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xE6 DUP2 PUSH3 0x103 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xF9 DUP2 DUP4 PUSH3 0x1C9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0xB94 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x23E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x235 SWAP2 SWAP1 PUSH3 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x252 PUSH1 0x0 DUP4 DUP4 PUSH3 0x256 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2AC JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x29F SWAP2 SWAP1 PUSH3 0xAEE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x382 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x33B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x332 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xB3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x3CD JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x41A JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x479 SWAP2 SWAP1 PUSH3 0xB77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x4EF DUP3 PUSH3 0x4A4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x511 JUMPI PUSH3 0x510 PUSH3 0x4B5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x526 PUSH3 0x486 JUMP JUMPDEST SWAP1 POP PUSH3 0x534 DUP3 DUP3 PUSH3 0x4E4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x557 JUMPI PUSH3 0x556 PUSH3 0x4B5 JUMP JUMPDEST JUMPDEST PUSH3 0x562 DUP3 PUSH3 0x4A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x58F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x572 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5B2 PUSH3 0x5AC DUP5 PUSH3 0x539 JUMP JUMPDEST PUSH3 0x51A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x5D1 JUMPI PUSH3 0x5D0 PUSH3 0x49F JUMP JUMPDEST JUMPDEST PUSH3 0x5DE DUP5 DUP3 DUP6 PUSH3 0x56F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x5FE JUMPI PUSH3 0x5FD PUSH3 0x49A JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x610 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x59B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x62E DUP2 PUSH3 0x619 JUMP JUMPDEST DUP2 EQ PUSH3 0x63A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x64E DUP2 PUSH3 0x623 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x681 DUP3 PUSH3 0x654 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x693 DUP2 PUSH3 0x674 JUMP JUMPDEST DUP2 EQ PUSH3 0x69F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x6B3 DUP2 PUSH3 0x688 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x6D6 JUMPI PUSH3 0x6D5 PUSH3 0x490 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6F7 JUMPI PUSH3 0x6F6 PUSH3 0x495 JUMP JUMPDEST JUMPDEST PUSH3 0x705 DUP8 DUP3 DUP9 ADD PUSH3 0x5E6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x729 JUMPI PUSH3 0x728 PUSH3 0x495 JUMP JUMPDEST JUMPDEST PUSH3 0x737 DUP8 DUP3 DUP9 ADD PUSH3 0x5E6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x74A DUP8 DUP3 DUP9 ADD PUSH3 0x63D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x75D DUP8 DUP3 DUP9 ADD PUSH3 0x6A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x7BC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x7D2 JUMPI PUSH3 0x7D1 PUSH3 0x774 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x83C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x7FD JUMP JUMPDEST PUSH3 0x848 DUP7 DUP4 PUSH3 0x7FD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x88B PUSH3 0x885 PUSH3 0x87F DUP5 PUSH3 0x619 JUMP JUMPDEST PUSH3 0x860 JUMP JUMPDEST PUSH3 0x619 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x8A7 DUP4 PUSH3 0x86A JUMP JUMPDEST PUSH3 0x8BF PUSH3 0x8B6 DUP3 PUSH3 0x892 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x80A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x8D6 PUSH3 0x8C7 JUMP JUMPDEST PUSH3 0x8E3 DUP2 DUP5 DUP5 PUSH3 0x89C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x90B JUMPI PUSH3 0x8FF PUSH1 0x0 DUP3 PUSH3 0x8CC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x8E9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x95A JUMPI PUSH3 0x924 DUP2 PUSH3 0x7D8 JUMP JUMPDEST PUSH3 0x92F DUP5 PUSH3 0x7ED JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x93F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x957 PUSH3 0x94E DUP6 PUSH3 0x7ED JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x8E8 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x97F PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x95F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x99A DUP4 DUP4 PUSH3 0x96C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x9B5 DUP3 PUSH3 0x769 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x9D1 JUMPI PUSH3 0x9D0 PUSH3 0x4B5 JUMP JUMPDEST JUMPDEST PUSH3 0x9DD DUP3 SLOAD PUSH3 0x7A3 JUMP JUMPDEST PUSH3 0x9EA DUP3 DUP3 DUP6 PUSH3 0x90F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xA22 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xA0D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xA19 DUP6 DUP3 PUSH3 0x98C JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xA89 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xA32 DUP7 PUSH3 0x7D8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xA5C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA35 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xA7C JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xA78 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x96C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xA9C DUP2 PUSH3 0x674 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xAB9 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xA91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xAFB DUP3 PUSH3 0x619 JUMP JUMPDEST SWAP2 POP PUSH3 0xB08 DUP4 PUSH3 0x619 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xB23 JUMPI PUSH3 0xB22 PUSH3 0xABF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xB34 DUP2 PUSH3 0x619 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xB51 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0xA91 JUMP JUMPDEST PUSH3 0xB60 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xB29 JUMP JUMPDEST PUSH3 0xB6F PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xB29 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xB8E PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xB29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x128E DUP1 PUSH3 0xBA4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B7 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21B JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1C5 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x107F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH2 0x3E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH2 0x435 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0x505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH2 0x528 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2E2 SWAP1 PUSH2 0x118D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30E SWAP1 PUSH2 0x118D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x35B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x330 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x370 PUSH2 0x635 JUMP JUMPDEST SWAP1 POP PUSH2 0x37D DUP2 DUP6 DUP6 PUSH2 0x63D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x39D PUSH2 0x635 JUMP JUMPDEST SWAP1 POP PUSH2 0x3AA DUP6 DUP3 DUP6 PUSH2 0x64F JUMP JUMPDEST PUSH2 0x3B5 DUP6 DUP6 DUP6 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x3DC DUP3 DUP3 PUSH2 0x85F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3EA CALLER DUP3 PUSH2 0x8E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43D PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x447 PUSH1 0x0 PUSH2 0x963 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x482 SWAP1 PUSH2 0x118D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4AE SWAP1 PUSH2 0x118D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x510 PUSH2 0x635 JUMP JUMPDEST SWAP1 POP PUSH2 0x51D DUP2 DUP6 DUP6 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5B7 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x629 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x620 SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x632 DUP2 PUSH2 0x963 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x64A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA29 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65B DUP5 DUP5 PUSH2 0x528 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x6DE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6CE JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6DD DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xA29 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x756 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7C8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D3 DUP4 DUP4 DUP4 PUSH2 0xC00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7E0 PUSH2 0x635 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7FE PUSH2 0x449 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x85D JUMPI PUSH2 0x821 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x854 SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8DD PUSH1 0x0 DUP4 DUP4 PUSH2 0xC00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x953 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94A SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x95F DUP3 PUSH1 0x0 DUP4 PUSH2 0xC00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA92 SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB0D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB04 SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xBFA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBF1 SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC52 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC46 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD25 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCDE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD6E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDBB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE5F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE87 DUP3 PUSH2 0xE25 JUMP JUMPDEST PUSH2 0xE91 DUP2 DUP6 PUSH2 0xE30 JUMP JUMPDEST SWAP4 POP PUSH2 0xEA1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE41 JUMP JUMPDEST PUSH2 0xEAA DUP2 PUSH2 0xE6B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xECF DUP2 DUP5 PUSH2 0xE7C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF07 DUP3 PUSH2 0xEDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF17 DUP2 PUSH2 0xEFC JUMP JUMPDEST DUP2 EQ PUSH2 0xF22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF34 DUP2 PUSH2 0xF0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4D DUP2 PUSH2 0xF3A JUMP JUMPDEST DUP2 EQ PUSH2 0xF58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF6A DUP2 PUSH2 0xF44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF87 JUMPI PUSH2 0xF86 PUSH2 0xED7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF95 DUP6 DUP3 DUP7 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFA6 DUP6 DUP3 DUP7 ADD PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC5 DUP2 PUSH2 0xFB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFE0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFEF DUP2 PUSH2 0xF3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x100A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1029 JUMPI PUSH2 0x1028 PUSH2 0xED7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1037 DUP7 DUP3 DUP8 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1048 DUP7 DUP3 DUP8 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1059 DUP7 DUP3 DUP8 ADD PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1079 DUP2 PUSH2 0x1063 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1094 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1070 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B0 JUMPI PUSH2 0x10AF PUSH2 0xED7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10BE DUP5 DUP3 DUP6 ADD PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10DD JUMPI PUSH2 0x10DC PUSH2 0xED7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10EB DUP5 DUP3 DUP6 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10FD DUP2 PUSH2 0xEFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1118 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1135 JUMPI PUSH2 0x1134 PUSH2 0xED7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1143 DUP6 DUP3 DUP7 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1154 DUP6 DUP3 DUP7 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11A5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11B8 JUMPI PUSH2 0x11B7 PUSH2 0x115E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11D3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x11E0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x11ED PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFE6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x122F DUP3 PUSH2 0xF3A JUMP JUMPDEST SWAP2 POP PUSH2 0x123A DUP4 PUSH2 0xF3A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1252 JUMPI PUSH2 0x1251 PUSH2 0x11F5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0x2F NUMBER CREATE2 PUSH16 0xAFD5F99FE00B0379BC6B5A299080E51D 0xE9 0x2E 0xC INVALID SWAP1 LOG3 0xAB GASPRICE REVERT PUSH26 0x2F64736F6C634300081400330000000000000000000000000000 ","sourceMap":"174:556:20:-:0;;;220:237;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;390:12;368:4;374:6;1656:5:2;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;415:34:20::2;421:12;435:13;415:5;;;:34;;:::i;:::-;220:237:::0;;;;174:556;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7439:208:2:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:75:21:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:77::-;2714:7;2743:5;2732:16;;2677:77;;;:::o;2760:122::-;2833:24;2851:5;2833:24;:::i;:::-;2826:5;2823:35;2813:63;;2872:1;2869;2862:12;2813:63;2760:122;:::o;2888:143::-;2945:5;2976:6;2970:13;2961:22;;2992:33;3019:5;2992:33;:::i;:::-;2888:143;;;;:::o;3037:126::-;3074:7;3114:42;3107:5;3103:54;3092:65;;3037:126;;;:::o;3169:96::-;3206:7;3235:24;3253:5;3235:24;:::i;:::-;3224:35;;3169:96;;;:::o;3271:122::-;3344:24;3362:5;3344:24;:::i;:::-;3337:5;3334:35;3324:63;;3383:1;3380;3373:12;3324:63;3271:122;:::o;3399:143::-;3456:5;3487:6;3481:13;3472:22;;3503:33;3530:5;3503:33;:::i;:::-;3399:143;;;;:::o;3548:1166::-;3665:6;3673;3681;3689;3738:3;3726:9;3717:7;3713:23;3709:33;3706:120;;;3745:79;;:::i;:::-;3706:120;3886:1;3875:9;3871:17;3865:24;3916:18;3908:6;3905:30;3902:117;;;3938:79;;:::i;:::-;3902:117;4043:74;4109:7;4100:6;4089:9;4085:22;4043:74;:::i;:::-;4033:84;;3836:291;4187:2;4176:9;4172:18;4166:25;4218:18;4210:6;4207:30;4204:117;;;4240:79;;:::i;:::-;4204:117;4345:74;4411:7;4402:6;4391:9;4387:22;4345:74;:::i;:::-;4335:84;;4137:292;4468:2;4494:64;4550:7;4541:6;4530:9;4526:22;4494:64;:::i;:::-;4484:74;;4439:129;4607:2;4633:64;4689:7;4680:6;4669:9;4665:22;4633:64;:::i;:::-;4623:74;;4578:129;3548:1166;;;;;;;:::o;4720:99::-;4772:6;4806:5;4800:12;4790:22;;4720:99;;;:::o;4825:180::-;4873:77;4870:1;4863:88;4970:4;4967:1;4960:15;4994:4;4991:1;4984:15;5011:320;5055:6;5092:1;5086:4;5082:12;5072:22;;5139:1;5133:4;5129:12;5160:18;5150:81;;5216:4;5208:6;5204:17;5194:27;;5150:81;5278:2;5270:6;5267:14;5247:18;5244:38;5241:84;;5297:18;;:::i;:::-;5241:84;5062:269;5011:320;;;:::o;5337:141::-;5386:4;5409:3;5401:11;;5432:3;5429:1;5422:14;5466:4;5463:1;5453:18;5445:26;;5337:141;;;:::o;5484:93::-;5521:6;5568:2;5563;5556:5;5552:14;5548:23;5538:33;;5484:93;;;:::o;5583:107::-;5627:8;5677:5;5671:4;5667:16;5646:37;;5583:107;;;;:::o;5696:393::-;5765:6;5815:1;5803:10;5799:18;5838:97;5868:66;5857:9;5838:97;:::i;:::-;5956:39;5986:8;5975:9;5956:39;:::i;:::-;5944:51;;6028:4;6024:9;6017:5;6013:21;6004:30;;6077:4;6067:8;6063:19;6056:5;6053:30;6043:40;;5772:317;;5696:393;;;;;:::o;6095:60::-;6123:3;6144:5;6137:12;;6095:60;;;:::o;6161:142::-;6211:9;6244:53;6262:34;6271:24;6289:5;6271:24;:::i;:::-;6262:34;:::i;:::-;6244:53;:::i;:::-;6231:66;;6161:142;;;:::o;6309:75::-;6352:3;6373:5;6366:12;;6309:75;;;:::o;6390:269::-;6500:39;6531:7;6500:39;:::i;:::-;6561:91;6610:41;6634:16;6610:41;:::i;:::-;6602:6;6595:4;6589:11;6561:91;:::i;:::-;6555:4;6548:105;6466:193;6390:269;;;:::o;6665:73::-;6710:3;6665:73;:::o;6744:189::-;6821:32;;:::i;:::-;6862:65;6920:6;6912;6906:4;6862:65;:::i;:::-;6797:136;6744:189;;:::o;6939:186::-;6999:120;7016:3;7009:5;7006:14;6999:120;;;7070:39;7107:1;7100:5;7070:39;:::i;:::-;7043:1;7036:5;7032:13;7023:22;;6999:120;;;6939:186;;:::o;7131:543::-;7232:2;7227:3;7224:11;7221:446;;;7266:38;7298:5;7266:38;:::i;:::-;7350:29;7368:10;7350:29;:::i;:::-;7340:8;7336:44;7533:2;7521:10;7518:18;7515:49;;;7554:8;7539:23;;7515:49;7577:80;7633:22;7651:3;7633:22;:::i;:::-;7623:8;7619:37;7606:11;7577:80;:::i;:::-;7236:431;;7221:446;7131:543;;;:::o;7680:117::-;7734:8;7784:5;7778:4;7774:16;7753:37;;7680:117;;;;:::o;7803:169::-;7847:6;7880:51;7928:1;7924:6;7916:5;7913:1;7909:13;7880:51;:::i;:::-;7876:56;7961:4;7955;7951:15;7941:25;;7854:118;7803:169;;;;:::o;7977:295::-;8053:4;8199:29;8224:3;8218:4;8199:29;:::i;:::-;8191:37;;8261:3;8258:1;8254:11;8248:4;8245:21;8237:29;;7977:295;;;;:::o;8277:1395::-;8394:37;8427:3;8394:37;:::i;:::-;8496:18;8488:6;8485:30;8482:56;;;8518:18;;:::i;:::-;8482:56;8562:38;8594:4;8588:11;8562:38;:::i;:::-;8647:67;8707:6;8699;8693:4;8647:67;:::i;:::-;8741:1;8765:4;8752:17;;8797:2;8789:6;8786:14;8814:1;8809:618;;;;9471:1;9488:6;9485:77;;;9537:9;9532:3;9528:19;9522:26;9513:35;;9485:77;9588:67;9648:6;9641:5;9588:67;:::i;:::-;9582:4;9575:81;9444:222;8779:887;;8809:618;8861:4;8857:9;8849:6;8845:22;8895:37;8927:4;8895:37;:::i;:::-;8954:1;8968:208;8982:7;8979:1;8976:14;8968:208;;;9061:9;9056:3;9052:19;9046:26;9038:6;9031:42;9112:1;9104:6;9100:14;9090:24;;9159:2;9148:9;9144:18;9131:31;;9005:4;9002:1;8998:12;8993:17;;8968:208;;;9204:6;9195:7;9192:19;9189:179;;;9262:9;9257:3;9253:19;9247:26;9305:48;9347:4;9339:6;9335:17;9324:9;9305:48;:::i;:::-;9297:6;9290:64;9212:156;9189:179;9414:1;9410;9402:6;9398:14;9394:22;9388:4;9381:36;8816:611;;;8779:887;;8369:1303;;;8277:1395;;:::o;9678:118::-;9765:24;9783:5;9765:24;:::i;:::-;9760:3;9753:37;9678:118;;:::o;9802:222::-;9895:4;9933:2;9922:9;9918:18;9910:26;;9946:71;10014:1;10003:9;9999:17;9990:6;9946:71;:::i;:::-;9802:222;;;;:::o;10030:180::-;10078:77;10075:1;10068:88;10175:4;10172:1;10165:15;10199:4;10196:1;10189:15;10216:191;10256:3;10275:20;10293:1;10275:20;:::i;:::-;10270:25;;10309:20;10327:1;10309:20;:::i;:::-;10304:25;;10352:1;10349;10345:9;10338:16;;10373:3;10370:1;10367:10;10364:36;;;10380:18;;:::i;:::-;10364:36;10216:191;;;;:::o;10413:118::-;10500:24;10518:5;10500:24;:::i;:::-;10495:3;10488:37;10413:118;;:::o;10537:442::-;10686:4;10724:2;10713:9;10709:18;10701:26;;10737:71;10805:1;10794:9;10790:17;10781:6;10737:71;:::i;:::-;10818:72;10886:2;10875:9;10871:18;10862:6;10818:72;:::i;:::-;10900;10968:2;10957:9;10953:18;10944:6;10900:72;:::i;:::-;10537:442;;;;;;:::o;10985:222::-;11078:4;11116:2;11105:9;11101:18;11093:26;;11129:71;11197:1;11186:9;11182:17;11173:6;11129:71;:::i;:::-;10985:222;;;;:::o;174:556:20:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_690":{"entryPoint":1597,"id":690,"parameterSlots":3,"returnSlots":0},"@_approve_750":{"entryPoint":2601,"id":750,"parameterSlots":4,"returnSlots":0},"@_burn_672":{"entryPoint":2273,"id":672,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":2008,"id":84,"parameterSlots":0,"returnSlots":0},"@_mint_639":{"entryPoint":2143,"id":639,"parameterSlots":2,"returnSlots":0},"@_msgSender_2112":{"entryPoint":1589,"id":2112,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_798":{"entryPoint":1615,"id":798,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2403,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_529":{"entryPoint":1764,"id":529,"parameterSlots":3,"returnSlots":0},"@_update_606":{"entryPoint":3072,"id":606,"parameterSlots":3,"returnSlots":0},"@allowance_426":{"entryPoint":1320,"id":426,"parameterSlots":2,"returnSlots":1},"@approve_450":{"entryPoint":869,"id":450,"parameterSlots":2,"returnSlots":1},"@balanceOf_385":{"entryPoint":1005,"id":385,"parameterSlots":1,"returnSlots":1},"@burn_7850":{"entryPoint":992,"id":7850,"parameterSlots":1,"returnSlots":0},"@decimals_363":{"entryPoint":961,"id":363,"parameterSlots":0,"returnSlots":1},"@mint_7838":{"entryPoint":970,"id":7838,"parameterSlots":2,"returnSlots":0},"@name_345":{"entryPoint":723,"id":345,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":1097,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1077,"id":98,"parameterSlots":0,"returnSlots":0},"@symbol_354":{"entryPoint":1139,"id":354,"parameterSlots":0,"returnSlots":1},"@totalSupply_372":{"entryPoint":904,"id":372,"parameterSlots":0,"returnSlots":1},"@transferFrom_482":{"entryPoint":914,"id":482,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":1455,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_409":{"entryPoint":1285,"id":409,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3877,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3931,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4295,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4382,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4112,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3952,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":4250,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4340,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4028,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3708,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4070,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":4208,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4355,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4542,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4043,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3765,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4085,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":4223,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3621,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3632,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4644,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3836,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4016,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3804,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3898,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":4195,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3649,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4493,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4597,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4446,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3799,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3691,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":3854,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3908,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7695:21","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:21","statements":[{"nodeType":"YulAssignment","src":"77:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:21"},"nodeType":"YulFunctionCall","src":"87:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:21","type":""}],"src":"7:99:21"},{"body":{"nodeType":"YulBlock","src":"208:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:21"},"nodeType":"YulFunctionCall","src":"218:19:21"},"nodeType":"YulExpressionStatement","src":"218:19:21"},{"nodeType":"YulAssignment","src":"246:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:21"},"nodeType":"YulFunctionCall","src":"261:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:21","type":""}],"src":"112:169:21"},{"body":{"nodeType":"YulBlock","src":"349:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:21"},"nodeType":"YulFunctionCall","src":"449:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:21"},"nodeType":"YulFunctionCall","src":"468:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:21"},"nodeType":"YulFunctionCall","src":"462:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:21"},"nodeType":"YulFunctionCall","src":"442:39:21"},"nodeType":"YulExpressionStatement","src":"442:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:21"},"nodeType":"YulFunctionCall","src":"386:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:21","statements":[{"nodeType":"YulAssignment","src":"402:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:21"},"nodeType":"YulFunctionCall","src":"407:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:21","statements":[]},"src":"378:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:21"},"nodeType":"YulFunctionCall","src":"507:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:21"},"nodeType":"YulFunctionCall","src":"500:27:21"},"nodeType":"YulExpressionStatement","src":"500:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:21","type":""}],"src":"287:246:21"},{"body":{"nodeType":"YulBlock","src":"587:54:21","statements":[{"nodeType":"YulAssignment","src":"597:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:21"},"nodeType":"YulFunctionCall","src":"611:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:21"},"nodeType":"YulFunctionCall","src":"627:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:21"},"nodeType":"YulFunctionCall","src":"607:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:21","type":""}],"src":"539:102:21"},{"body":{"nodeType":"YulBlock","src":"739:285:21","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:21"},"nodeType":"YulFunctionCall","src":"763:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:21","type":""}]},{"nodeType":"YulAssignment","src":"811:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:21"},"nodeType":"YulFunctionCall","src":"818:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:21"},"nodeType":"YulFunctionCall","src":"933:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:21"},"nodeType":"YulFunctionCall","src":"898:65:21"},"nodeType":"YulExpressionStatement","src":"898:65:21"},{"nodeType":"YulAssignment","src":"972:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:21"},"nodeType":"YulFunctionCall","src":"988:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:21"},"nodeType":"YulFunctionCall","src":"979:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:21","type":""}],"src":"647:377:21"},{"body":{"nodeType":"YulBlock","src":"1148:195:21","statements":[{"nodeType":"YulAssignment","src":"1158:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:21"},"nodeType":"YulFunctionCall","src":"1166:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:21"},"nodeType":"YulFunctionCall","src":"1201:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:21"},"nodeType":"YulFunctionCall","src":"1220:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:21"},"nodeType":"YulFunctionCall","src":"1194:47:21"},"nodeType":"YulExpressionStatement","src":"1194:47:21"},{"nodeType":"YulAssignment","src":"1250:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:21"},"nodeType":"YulFunctionCall","src":"1258:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:21","type":""}],"src":"1030:313:21"},{"body":{"nodeType":"YulBlock","src":"1389:35:21","statements":[{"nodeType":"YulAssignment","src":"1399:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:21"},"nodeType":"YulFunctionCall","src":"1409:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:21","type":""}],"src":"1349:75:21"},{"body":{"nodeType":"YulBlock","src":"1519:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:21"},"nodeType":"YulFunctionCall","src":"1529:12:21"},"nodeType":"YulExpressionStatement","src":"1529:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:21"},{"body":{"nodeType":"YulBlock","src":"1642:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:21"},"nodeType":"YulFunctionCall","src":"1652:12:21"},"nodeType":"YulExpressionStatement","src":"1652:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:21"},{"body":{"nodeType":"YulBlock","src":"1721:81:21","statements":[{"nodeType":"YulAssignment","src":"1731:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:21"},"nodeType":"YulFunctionCall","src":"1742:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:21","type":""}],"src":"1676:126:21"},{"body":{"nodeType":"YulBlock","src":"1853:51:21","statements":[{"nodeType":"YulAssignment","src":"1863:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:21"},"nodeType":"YulFunctionCall","src":"1874:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:21","type":""}],"src":"1808:96:21"},{"body":{"nodeType":"YulBlock","src":"1953:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:21"},"nodeType":"YulFunctionCall","src":"2012:12:21"},"nodeType":"YulExpressionStatement","src":"2012:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:21"},"nodeType":"YulFunctionCall","src":"1983:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:21"},"nodeType":"YulFunctionCall","src":"1973:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:21"},"nodeType":"YulFunctionCall","src":"1966:43:21"},"nodeType":"YulIf","src":"1963:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:21","type":""}],"src":"1910:122:21"},{"body":{"nodeType":"YulBlock","src":"2090:87:21","statements":[{"nodeType":"YulAssignment","src":"2100:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:21"},"nodeType":"YulFunctionCall","src":"2109:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:21"},"nodeType":"YulFunctionCall","src":"2138:33:21"},"nodeType":"YulExpressionStatement","src":"2138:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:21","type":""}],"src":"2038:139:21"},{"body":{"nodeType":"YulBlock","src":"2228:32:21","statements":[{"nodeType":"YulAssignment","src":"2238:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:21","type":""}],"src":"2183:77:21"},{"body":{"nodeType":"YulBlock","src":"2309:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:21"},"nodeType":"YulFunctionCall","src":"2368:12:21"},"nodeType":"YulExpressionStatement","src":"2368:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:21"},"nodeType":"YulFunctionCall","src":"2339:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:21"},"nodeType":"YulFunctionCall","src":"2329:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:21"},"nodeType":"YulFunctionCall","src":"2322:43:21"},"nodeType":"YulIf","src":"2319:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:21","type":""}],"src":"2266:122:21"},{"body":{"nodeType":"YulBlock","src":"2446:87:21","statements":[{"nodeType":"YulAssignment","src":"2456:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:21"},"nodeType":"YulFunctionCall","src":"2465:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:21"},"nodeType":"YulFunctionCall","src":"2494:33:21"},"nodeType":"YulExpressionStatement","src":"2494:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:21","type":""}],"src":"2394:139:21"},{"body":{"nodeType":"YulBlock","src":"2622:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:21"},"nodeType":"YulFunctionCall","src":"2670:79:21"},"nodeType":"YulExpressionStatement","src":"2670:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:21"},"nodeType":"YulFunctionCall","src":"2639:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:21"},"nodeType":"YulFunctionCall","src":"2635:32:21"},"nodeType":"YulIf","src":"2632:119:21"},{"nodeType":"YulBlock","src":"2761:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:21"},"nodeType":"YulFunctionCall","src":"2836:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:21"},"nodeType":"YulFunctionCall","src":"2815:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:21"}]}]},{"nodeType":"YulBlock","src":"2888:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:21"},"nodeType":"YulFunctionCall","src":"2964:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:21"},"nodeType":"YulFunctionCall","src":"2943:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:21","type":""}],"src":"2539:474:21"},{"body":{"nodeType":"YulBlock","src":"3061:48:21","statements":[{"nodeType":"YulAssignment","src":"3071:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:21"},"nodeType":"YulFunctionCall","src":"3089:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:21"},"nodeType":"YulFunctionCall","src":"3082:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:21","type":""}],"src":"3019:90:21"},{"body":{"nodeType":"YulBlock","src":"3174:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:21"},"nodeType":"YulFunctionCall","src":"3196:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:21"},"nodeType":"YulFunctionCall","src":"3184:34:21"},"nodeType":"YulExpressionStatement","src":"3184:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:21","type":""}],"src":"3115:109:21"},{"body":{"nodeType":"YulBlock","src":"3322:118:21","statements":[{"nodeType":"YulAssignment","src":"3332:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:21"},"nodeType":"YulFunctionCall","src":"3340:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:21"},"nodeType":"YulFunctionCall","src":"3415:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:21"},"nodeType":"YulFunctionCall","src":"3368:65:21"},"nodeType":"YulExpressionStatement","src":"3368:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:21","type":""}],"src":"3230:210:21"},{"body":{"nodeType":"YulBlock","src":"3511:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:21"},"nodeType":"YulFunctionCall","src":"3533:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:21"},"nodeType":"YulFunctionCall","src":"3521:37:21"},"nodeType":"YulExpressionStatement","src":"3521:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:21","type":""}],"src":"3446:118:21"},{"body":{"nodeType":"YulBlock","src":"3668:124:21","statements":[{"nodeType":"YulAssignment","src":"3678:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:21"},"nodeType":"YulFunctionCall","src":"3686:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:21"},"nodeType":"YulFunctionCall","src":"3767:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:21"},"nodeType":"YulFunctionCall","src":"3714:71:21"},"nodeType":"YulExpressionStatement","src":"3714:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:21","type":""}],"src":"3570:222:21"},{"body":{"nodeType":"YulBlock","src":"3898:519:21","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:21"},"nodeType":"YulFunctionCall","src":"3946:79:21"},"nodeType":"YulExpressionStatement","src":"3946:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:21"},"nodeType":"YulFunctionCall","src":"3915:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:21"},"nodeType":"YulFunctionCall","src":"3911:32:21"},"nodeType":"YulIf","src":"3908:119:21"},{"nodeType":"YulBlock","src":"4037:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:21"},"nodeType":"YulFunctionCall","src":"4112:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:21"},"nodeType":"YulFunctionCall","src":"4091:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:21"}]}]},{"nodeType":"YulBlock","src":"4164:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:21"},"nodeType":"YulFunctionCall","src":"4240:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:21"},"nodeType":"YulFunctionCall","src":"4219:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:21"}]}]},{"nodeType":"YulBlock","src":"4292:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:21"},"nodeType":"YulFunctionCall","src":"4368:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:21"},"nodeType":"YulFunctionCall","src":"4347:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:21","type":""}],"src":"3798:619:21"},{"body":{"nodeType":"YulBlock","src":"4466:43:21","statements":[{"nodeType":"YulAssignment","src":"4476:27:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:21"},"nodeType":"YulFunctionCall","src":"4487:16:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:21"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:21","type":""}],"src":"4423:86:21"},{"body":{"nodeType":"YulBlock","src":"4576:51:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:21"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:21"},"nodeType":"YulFunctionCall","src":"4598:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:21"},"nodeType":"YulFunctionCall","src":"4586:35:21"},"nodeType":"YulExpressionStatement","src":"4586:35:21"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:21","type":""}],"src":"4515:112:21"},{"body":{"nodeType":"YulBlock","src":"4727:120:21","statements":[{"nodeType":"YulAssignment","src":"4737:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:21"},"nodeType":"YulFunctionCall","src":"4745:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:21"},"nodeType":"YulFunctionCall","src":"4822:17:21"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:21"},"nodeType":"YulFunctionCall","src":"4773:67:21"},"nodeType":"YulExpressionStatement","src":"4773:67:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:21","type":""}],"src":"4633:214:21"},{"body":{"nodeType":"YulBlock","src":"4919:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:21"},"nodeType":"YulFunctionCall","src":"4967:79:21"},"nodeType":"YulExpressionStatement","src":"4967:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:21"},"nodeType":"YulFunctionCall","src":"4936:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:21"},"nodeType":"YulFunctionCall","src":"4932:32:21"},"nodeType":"YulIf","src":"4929:119:21"},{"nodeType":"YulBlock","src":"5058:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:21"},"nodeType":"YulFunctionCall","src":"5133:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5112:20:21"},"nodeType":"YulFunctionCall","src":"5112:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:21","type":""}],"src":"4853:329:21"},{"body":{"nodeType":"YulBlock","src":"5254:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"5300:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5302:77:21"},"nodeType":"YulFunctionCall","src":"5302:79:21"},"nodeType":"YulExpressionStatement","src":"5302:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5275:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5284:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5271:3:21"},"nodeType":"YulFunctionCall","src":"5271:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5296:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5267:3:21"},"nodeType":"YulFunctionCall","src":"5267:32:21"},"nodeType":"YulIf","src":"5264:119:21"},{"nodeType":"YulBlock","src":"5393:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5408:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5422:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5412:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5437:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5472:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5483:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5468:3:21"},"nodeType":"YulFunctionCall","src":"5468:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5492:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5447:20:21"},"nodeType":"YulFunctionCall","src":"5447:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5437:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5224:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5235:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5247:6:21","type":""}],"src":"5188:329:21"},{"body":{"nodeType":"YulBlock","src":"5588:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5605:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5628:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5610:17:21"},"nodeType":"YulFunctionCall","src":"5610:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5598:6:21"},"nodeType":"YulFunctionCall","src":"5598:37:21"},"nodeType":"YulExpressionStatement","src":"5598:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5576:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5583:3:21","type":""}],"src":"5523:118:21"},{"body":{"nodeType":"YulBlock","src":"5745:124:21","statements":[{"nodeType":"YulAssignment","src":"5755:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5767:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5778:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5763:3:21"},"nodeType":"YulFunctionCall","src":"5763:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5755:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5835:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5848:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5859:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5844:3:21"},"nodeType":"YulFunctionCall","src":"5844:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5791:43:21"},"nodeType":"YulFunctionCall","src":"5791:71:21"},"nodeType":"YulExpressionStatement","src":"5791:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5717:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5729:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5740:4:21","type":""}],"src":"5647:222:21"},{"body":{"nodeType":"YulBlock","src":"5958:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"6004:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6006:77:21"},"nodeType":"YulFunctionCall","src":"6006:79:21"},"nodeType":"YulExpressionStatement","src":"6006:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5979:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5988:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5975:3:21"},"nodeType":"YulFunctionCall","src":"5975:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"6000:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5971:3:21"},"nodeType":"YulFunctionCall","src":"5971:32:21"},"nodeType":"YulIf","src":"5968:119:21"},{"nodeType":"YulBlock","src":"6097:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6112:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6126:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6116:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6141:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6176:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6187:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6172:3:21"},"nodeType":"YulFunctionCall","src":"6172:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6196:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6151:20:21"},"nodeType":"YulFunctionCall","src":"6151:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6141:6:21"}]}]},{"nodeType":"YulBlock","src":"6224:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6239:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6253:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6243:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6269:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6304:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6315:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6300:3:21"},"nodeType":"YulFunctionCall","src":"6300:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6324:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6279:20:21"},"nodeType":"YulFunctionCall","src":"6279:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6269:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5920:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5931:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5943:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5951:6:21","type":""}],"src":"5875:474:21"},{"body":{"nodeType":"YulBlock","src":"6383:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6400:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6403:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6393:6:21"},"nodeType":"YulFunctionCall","src":"6393:88:21"},"nodeType":"YulExpressionStatement","src":"6393:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6497:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6500:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6490:6:21"},"nodeType":"YulFunctionCall","src":"6490:15:21"},"nodeType":"YulExpressionStatement","src":"6490:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6521:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6524:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6514:6:21"},"nodeType":"YulFunctionCall","src":"6514:15:21"},"nodeType":"YulExpressionStatement","src":"6514:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6355:180:21"},{"body":{"nodeType":"YulBlock","src":"6592:269:21","statements":[{"nodeType":"YulAssignment","src":"6602:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6616:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"6622:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6612:3:21"},"nodeType":"YulFunctionCall","src":"6612:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6602:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"6633:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6663:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"6669:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6659:3:21"},"nodeType":"YulFunctionCall","src":"6659:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6637:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6710:51:21","statements":[{"nodeType":"YulAssignment","src":"6724:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6738:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6746:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6734:3:21"},"nodeType":"YulFunctionCall","src":"6734:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6724:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6690:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6683:6:21"},"nodeType":"YulFunctionCall","src":"6683:26:21"},"nodeType":"YulIf","src":"6680:81:21"},{"body":{"nodeType":"YulBlock","src":"6813:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6827:16:21"},"nodeType":"YulFunctionCall","src":"6827:18:21"},"nodeType":"YulExpressionStatement","src":"6827:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6777:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6800:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6808:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6797:2:21"},"nodeType":"YulFunctionCall","src":"6797:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6774:2:21"},"nodeType":"YulFunctionCall","src":"6774:38:21"},"nodeType":"YulIf","src":"6771:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6576:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6585:6:21","type":""}],"src":"6541:320:21"},{"body":{"nodeType":"YulBlock","src":"7021:288:21","statements":[{"nodeType":"YulAssignment","src":"7031:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7043:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7054:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7039:3:21"},"nodeType":"YulFunctionCall","src":"7039:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7031:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7111:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7124:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7135:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7120:3:21"},"nodeType":"YulFunctionCall","src":"7120:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7067:43:21"},"nodeType":"YulFunctionCall","src":"7067:71:21"},"nodeType":"YulExpressionStatement","src":"7067:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7192:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7205:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7216:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7201:3:21"},"nodeType":"YulFunctionCall","src":"7201:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7148:43:21"},"nodeType":"YulFunctionCall","src":"7148:72:21"},"nodeType":"YulExpressionStatement","src":"7148:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7274:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7287:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7298:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7283:3:21"},"nodeType":"YulFunctionCall","src":"7283:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7230:43:21"},"nodeType":"YulFunctionCall","src":"7230:72:21"},"nodeType":"YulExpressionStatement","src":"7230:72:21"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6977:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6989:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6997:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7005:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7016:4:21","type":""}],"src":"6867:442:21"},{"body":{"nodeType":"YulBlock","src":"7343:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7360:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7363:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7353:6:21"},"nodeType":"YulFunctionCall","src":"7353:88:21"},"nodeType":"YulExpressionStatement","src":"7353:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7457:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7460:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7450:6:21"},"nodeType":"YulFunctionCall","src":"7450:15:21"},"nodeType":"YulExpressionStatement","src":"7450:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7481:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7484:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7474:6:21"},"nodeType":"YulFunctionCall","src":"7474:15:21"},"nodeType":"YulExpressionStatement","src":"7474:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7315:180:21"},{"body":{"nodeType":"YulBlock","src":"7545:147:21","statements":[{"nodeType":"YulAssignment","src":"7555:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7578:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7560:17:21"},"nodeType":"YulFunctionCall","src":"7560:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7555:1:21"}]},{"nodeType":"YulAssignment","src":"7589:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7612:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7594:17:21"},"nodeType":"YulFunctionCall","src":"7594:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7589:1:21"}]},{"nodeType":"YulAssignment","src":"7623:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7634:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"7637:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7630:3:21"},"nodeType":"YulFunctionCall","src":"7630:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7623:3:21"}]},{"body":{"nodeType":"YulBlock","src":"7663:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7665:16:21"},"nodeType":"YulFunctionCall","src":"7665:18:21"},"nodeType":"YulExpressionStatement","src":"7665:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7655:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"7658:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7652:2:21"},"nodeType":"YulFunctionCall","src":"7652:10:21"},"nodeType":"YulIf","src":"7649:36:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7532:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"7535:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7541:3:21","type":""}],"src":"7501:191:21"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610239578063a9059cbb14610257578063dd62ed3e14610287578063f2fde38b146102b7576100ea565b806370a08231146101e1578063715018a6146102115780638da5cb5b1461021b576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806340c10f19146101a957806342966c68146101c5576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102d3565b6040516101049190610eb5565b60405180910390f35b61012760048036038101906101229190610f70565b610365565b6040516101349190610fcb565b60405180910390f35b610145610388565b6040516101529190610ff5565b60405180910390f35b61017560048036038101906101709190611010565b610392565b6040516101829190610fcb565b60405180910390f35b6101936103c1565b6040516101a0919061107f565b60405180910390f35b6101c360048036038101906101be9190610f70565b6103ca565b005b6101df60048036038101906101da919061109a565b6103e0565b005b6101fb60048036038101906101f691906110c7565b6103ed565b6040516102089190610ff5565b60405180910390f35b610219610435565b005b610223610449565b6040516102309190611103565b60405180910390f35b610241610473565b60405161024e9190610eb5565b60405180910390f35b610271600480360381019061026c9190610f70565b610505565b60405161027e9190610fcb565b60405180910390f35b6102a1600480360381019061029c919061111e565b610528565b6040516102ae9190610ff5565b60405180910390f35b6102d160048036038101906102cc91906110c7565b6105af565b005b6060600380546102e29061118d565b80601f016020809104026020016040519081016040528092919081815260200182805461030e9061118d565b801561035b5780601f106103305761010080835404028352916020019161035b565b820191906000526020600020905b81548152906001019060200180831161033e57829003601f168201915b5050505050905090565b600080610370610635565b905061037d81858561063d565b600191505092915050565b6000600254905090565b60008061039d610635565b90506103aa85828561064f565b6103b58585856106e4565b60019150509392505050565b60006012905090565b6103d26107d8565b6103dc828261085f565b5050565b6103ea33826108e1565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61043d6107d8565b6104476000610963565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104829061118d565b80601f01602080910402602001604051908101604052809291908181526020018280546104ae9061118d565b80156104fb5780601f106104d0576101008083540402835291602001916104fb565b820191906000526020600020905b8154815290600101906020018083116104de57829003601f168201915b5050505050905090565b600080610510610635565b905061051d8185856106e4565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6105b76107d8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106295760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106209190611103565b60405180910390fd5b61063281610963565b50565b600033905090565b61064a8383836001610a29565b505050565b600061065b8484610528565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156106de57818110156106ce578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016106c5939291906111be565b60405180910390fd5b6106dd84848484036000610a29565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107565760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161074d9190611103565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107c85760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107bf9190611103565b60405180910390fd5b6107d3838383610c00565b505050565b6107e0610635565b73ffffffffffffffffffffffffffffffffffffffff166107fe610449565b73ffffffffffffffffffffffffffffffffffffffff161461085d57610821610635565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108549190611103565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108d15760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108c89190611103565b60405180910390fd5b6108dd60008383610c00565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109535760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161094a9190611103565b60405180910390fd5b61095f82600083610c00565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a9b5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a929190611103565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b0d5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610b049190611103565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610bfa578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610bf19190610ff5565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c52578060026000828254610c469190611224565b92505081905550610d25565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610cde578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610cd5939291906111be565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d6e5780600260008282540392505081905550610dbb565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e189190610ff5565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e5f578082015181840152602081019050610e44565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e8782610e25565b610e918185610e30565b9350610ea1818560208601610e41565b610eaa81610e6b565b840191505092915050565b60006020820190508181036000830152610ecf8184610e7c565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f0782610edc565b9050919050565b610f1781610efc565b8114610f2257600080fd5b50565b600081359050610f3481610f0e565b92915050565b6000819050919050565b610f4d81610f3a565b8114610f5857600080fd5b50565b600081359050610f6a81610f44565b92915050565b60008060408385031215610f8757610f86610ed7565b5b6000610f9585828601610f25565b9250506020610fa685828601610f5b565b9150509250929050565b60008115159050919050565b610fc581610fb0565b82525050565b6000602082019050610fe06000830184610fbc565b92915050565b610fef81610f3a565b82525050565b600060208201905061100a6000830184610fe6565b92915050565b60008060006060848603121561102957611028610ed7565b5b600061103786828701610f25565b935050602061104886828701610f25565b925050604061105986828701610f5b565b9150509250925092565b600060ff82169050919050565b61107981611063565b82525050565b60006020820190506110946000830184611070565b92915050565b6000602082840312156110b0576110af610ed7565b5b60006110be84828501610f5b565b91505092915050565b6000602082840312156110dd576110dc610ed7565b5b60006110eb84828501610f25565b91505092915050565b6110fd81610efc565b82525050565b600060208201905061111860008301846110f4565b92915050565b6000806040838503121561113557611134610ed7565b5b600061114385828601610f25565b925050602061115485828601610f25565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111a557607f821691505b6020821081036111b8576111b761115e565b5b50919050565b60006060820190506111d360008301866110f4565b6111e06020830185610fe6565b6111ed6040830184610fe6565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061122f82610f3a565b915061123a83610f3a565b9250828201905080821115611252576112516111f5565b5b9291505056fea2646970667358221220422f43f56fafd5f99fe00b0379bc6b5a299080e51de92e0cfe90a3ab3afd792f64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B7 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21B JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1C5 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x107F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH2 0x3E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH2 0x435 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0x505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x111E JUMP JUMPDEST PUSH2 0x528 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2E2 SWAP1 PUSH2 0x118D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30E SWAP1 PUSH2 0x118D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x35B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x330 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x370 PUSH2 0x635 JUMP JUMPDEST SWAP1 POP PUSH2 0x37D DUP2 DUP6 DUP6 PUSH2 0x63D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x39D PUSH2 0x635 JUMP JUMPDEST SWAP1 POP PUSH2 0x3AA DUP6 DUP3 DUP6 PUSH2 0x64F JUMP JUMPDEST PUSH2 0x3B5 DUP6 DUP6 DUP6 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x3DC DUP3 DUP3 PUSH2 0x85F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3EA CALLER DUP3 PUSH2 0x8E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43D PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x447 PUSH1 0x0 PUSH2 0x963 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x482 SWAP1 PUSH2 0x118D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4AE SWAP1 PUSH2 0x118D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x510 PUSH2 0x635 JUMP JUMPDEST SWAP1 POP PUSH2 0x51D DUP2 DUP6 DUP6 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5B7 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x629 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x620 SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x632 DUP2 PUSH2 0x963 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x64A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA29 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65B DUP5 DUP5 PUSH2 0x528 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x6DE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6CE JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6DD DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xA29 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x756 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7C8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D3 DUP4 DUP4 DUP4 PUSH2 0xC00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7E0 PUSH2 0x635 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7FE PUSH2 0x449 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x85D JUMPI PUSH2 0x821 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x854 SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8DD PUSH1 0x0 DUP4 DUP4 PUSH2 0xC00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x953 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94A SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x95F DUP3 PUSH1 0x0 DUP4 PUSH2 0xC00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA92 SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB0D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB04 SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xBFA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBF1 SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC52 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC46 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD25 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCDE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD6E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDBB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE5F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE87 DUP3 PUSH2 0xE25 JUMP JUMPDEST PUSH2 0xE91 DUP2 DUP6 PUSH2 0xE30 JUMP JUMPDEST SWAP4 POP PUSH2 0xEA1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE41 JUMP JUMPDEST PUSH2 0xEAA DUP2 PUSH2 0xE6B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xECF DUP2 DUP5 PUSH2 0xE7C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF07 DUP3 PUSH2 0xEDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF17 DUP2 PUSH2 0xEFC JUMP JUMPDEST DUP2 EQ PUSH2 0xF22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF34 DUP2 PUSH2 0xF0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4D DUP2 PUSH2 0xF3A JUMP JUMPDEST DUP2 EQ PUSH2 0xF58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF6A DUP2 PUSH2 0xF44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF87 JUMPI PUSH2 0xF86 PUSH2 0xED7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF95 DUP6 DUP3 DUP7 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFA6 DUP6 DUP3 DUP7 ADD PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC5 DUP2 PUSH2 0xFB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFE0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFEF DUP2 PUSH2 0xF3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x100A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1029 JUMPI PUSH2 0x1028 PUSH2 0xED7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1037 DUP7 DUP3 DUP8 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1048 DUP7 DUP3 DUP8 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1059 DUP7 DUP3 DUP8 ADD PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1079 DUP2 PUSH2 0x1063 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1094 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1070 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B0 JUMPI PUSH2 0x10AF PUSH2 0xED7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10BE DUP5 DUP3 DUP6 ADD PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10DD JUMPI PUSH2 0x10DC PUSH2 0xED7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10EB DUP5 DUP3 DUP6 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10FD DUP2 PUSH2 0xEFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1118 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1135 JUMPI PUSH2 0x1134 PUSH2 0xED7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1143 DUP6 DUP3 DUP7 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1154 DUP6 DUP3 DUP7 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11A5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11B8 JUMPI PUSH2 0x11B7 PUSH2 0x115E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11D3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x11E0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x11ED PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFE6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x122F DUP3 PUSH2 0xF3A JUMP JUMPDEST SWAP2 POP PUSH2 0x123A DUP4 PUSH2 0xF3A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1252 JUMPI PUSH2 0x1251 PUSH2 0x11F5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0x2F NUMBER CREATE2 PUSH16 0xAFD5F99FE00B0379BC6B5A299080E51D 0xE9 0x2E 0xC INVALID SWAP1 LOG3 0xAB GASPRICE REVERT PUSH26 0x2F64736F6C634300081400330000000000000000000000000000 ","sourceMap":"174:556:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;514:97:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;644:83;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2985:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;514:97:20:-;1531:13:0;:11;:13::i;:::-;586:17:20::1;592:2;596:6;586:5;:17::i;:::-;514:97:::0;;:::o;644:83::-;694:25;700:10;712:6;694:5;:25::i;:::-;644:83;:::o;2985:116:2:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3296:178::-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;3532:140::-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7439:208:2:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;7965:206::-;8054:1;8035:21;;:7;:21;;;8031:89;;8106:1;8079:30;;;;;;;;;;;:::i;:::-;;;;;;;;8031:89;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9682:432:2:-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:21:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:118::-;5610:24;5628:5;5610:24;:::i;:::-;5605:3;5598:37;5523:118;;:::o;5647:222::-;5740:4;5778:2;5767:9;5763:18;5755:26;;5791:71;5859:1;5848:9;5844:17;5835:6;5791:71;:::i;:::-;5647:222;;;;:::o;5875:474::-;5943:6;5951;6000:2;5988:9;5979:7;5975:23;5971:32;5968:119;;;6006:79;;:::i;:::-;5968:119;6126:1;6151:53;6196:7;6187:6;6176:9;6172:22;6151:53;:::i;:::-;6141:63;;6097:117;6253:2;6279:53;6324:7;6315:6;6304:9;6300:22;6279:53;:::i;:::-;6269:63;;6224:118;5875:474;;;;;:::o;6355:180::-;6403:77;6400:1;6393:88;6500:4;6497:1;6490:15;6524:4;6521:1;6514:15;6541:320;6585:6;6622:1;6616:4;6612:12;6602:22;;6669:1;6663:4;6659:12;6690:18;6680:81;;6746:4;6738:6;6734:17;6724:27;;6680:81;6808:2;6800:6;6797:14;6777:18;6774:38;6771:84;;6827:18;;:::i;:::-;6771:84;6592:269;6541:320;;;:::o;6867:442::-;7016:4;7054:2;7043:9;7039:18;7031:26;;7067:71;7135:1;7124:9;7120:17;7111:6;7067:71;:::i;:::-;7148:72;7216:2;7205:9;7201:18;7192:6;7148:72;:::i;:::-;7230;7298:2;7287:9;7283:18;7274:6;7230:72;:::i;:::-;6867:442;;;;;;:::o;7315:180::-;7363:77;7360:1;7353:88;7460:4;7457:1;7450:15;7484:4;7481:1;7474:15;7501:191;7541:3;7560:20;7578:1;7560:20;:::i;:::-;7555:25;;7594:20;7612:1;7594:20;:::i;:::-;7589:25;;7637:1;7634;7630:9;7623:16;;7658:3;7655:1;7652:10;7649:36;;;7665:18;;:::i;:::-;7649:36;7501:191;;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RewardToken.sol\":\"RewardToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/RewardToken.sol\":{\"keccak256\":\"0xab83173096f6cd498de45e58a0c25f34d59dcd2b5823d6bc326d0330464e1e48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6094bda4fc9f61480510ef53a48d5584e5fec78dd811b16a40f4b88b19c46fd3\",\"dweb:/ipfs/Qme4b3mDxsPhphX1g5WkxqdE1xu3C6xBfYkWCWQ7SLQ2V9\"]}},\"version\":1}"}}}}}